apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rsrchart.fullname" . }}
  labels:
{{ include "rsrchart.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rsrchart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rsrchart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        rsr-version: "{{ .Values.rsrVersion }}"
    spec:
      containers:
      - name: rsr-nginx
        image: "eu.gcr.io/akvo-lumen/rsr-nginx:{{ .Values.rsrVersion }}"
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 8081
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          requests:
            cpu: "50m"
          limits:
            cpu: "1000m"
        volumeMounts:
            - name: "rsr-media-disk"
              mountPath: "/var/akvo/rsr/mediaroot"
        env:
        - name: REPORT_SERVER_API_KEY
          valueFrom:
            secretKeyRef:
              name: "rsr-common"
              key: report-server-api-key
        - name: ENVIRONMENT
          value: "test"
        - name: REPORT_SERVER_URL
          value: "http://localhost:8080"
        - name: DJANGO_DEFAULT_FILE_STORAGE
          value: django.core.files.storage.FileSystemStorage
        - name: GOOGLE_STORAGE_BUCKET_NAME
          value: "none"
        - name: CI_COMMIT
          value: "unknown-commit"
      - &backend
        name: rsr-backend
        image: "eu.gcr.io/akvo-lumen/rsr-backend:{{ .Values.rsrVersion }}"
        resources:
          requests:
            cpu: "50m"
          limits:
            cpu: "4000m"
        ports:
        - containerPort: 8000
          protocol: TCP
        livenessProbe: &liveness
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
          failureThreshold: 12
          periodSeconds: 10
        readinessProbe: &readiness
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
          failureThreshold: 12
          periodSeconds: 10
        volumeMounts:
            - name: "rsr-common-secrets"
              mountPath: "/var/akvo/rsr/code/akvo/akvo-lumen-service-account-credentials.json"
              subPath: "google-cloud-storage.json"
            - name: "secret-config"
              mountPath: "/var/akvo/rsr/code/akvo/settings/42_django.conf"
              subPath: "django.conf"
            - name: "rsr-media-disk"
              mountPath: "/var/akvo/rsr/mediaroot"
            - name: "rsr-staticroot-disk"
              mountPath: "/var/akvo/rsr/staticroot"
        env:
        - &smtp-user
          name: SMTP_USER
          valueFrom:
            secretKeyRef:
              name: "rsr-common"
              key: smtp-user
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/akvo/rsr/code/akvo/akvo-lumen-service-account-credentials.json"
        - &smtp-password
          name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "rsr-common"
              key: smtp-password
        - &mapbox-key
          name: MAPBOX_KEY
          valueFrom:
            secretKeyRef:
              name: "rsr-common"
              key: mapbox-key
        - &django-secret-key
          name: DJANGO_SECRET_KEY
          value: "something random"
        - &gunicorn-debug-args
          name: GUNICORN_DEBUG_ARGS
          value: "--workers 4"
        - &db-password
          name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-postgresql"
              key: postgresql-password
        - &db-host
          name: DB_HOST
          value: "{{ include "rsrchart.dbname" . }}"
        - &rsr-domain-name
          name: RSR_DOMAIN_NAME
#          value: "{{ .Release.Name }}.rsrdemo.akvotest.org" ;; to change once LetsEncrypt is working
          value: "{{ .Release.Name }}.akvotest.org"
      - <<: *backend
        name: rsr-reports
        ports:
        - containerPort: 9000
          protocol: TCP
        livenessProbe:
          <<: *liveness
          httpGet:
            path: /healthz
            port: 9000
        readinessProbe:
          <<: *readiness
          httpGet:
            path: /healthz
            port: 9000
        env:
        - name: IS_REPORTS_CONTAINER
          value: "yes"
        - name: DJANGO_PORT
          value: "9000"
        - <<: *smtp-user
        - <<: *smtp-password
        - <<: *gunicorn-debug-args
        - <<: *django-secret-key
        - <<: *db-password
        - <<: *db-host
        - <<: *rsr-domain-name
        - <<: *mapbox-key
      - name: rsr-memcached
        image: memcached:1.6.1-alpine
        resources:
          requests:
            cpu: "50m"
          limits:
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "echo stats | nc 127.0.0.1 11211 | grep version"
          initialDelaySeconds: 10
          periodSeconds: 5
      - name: reportserver
        image: akvo/akvo-reportserver:{{ .Values.reportServerVersion }}
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 360
        env:
        - name: RS_DB_USER
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_db_user
        - name: RS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_db_password
        - name: RS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_db_name
        - name: RS_DB_HOST
          value: "{{ include "rsrchart.dbname" . }}"
        - name: DISABLE_SSL_DB_CONNECTION
          value: "yes"
        - name: RS_PBE_SALT
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_pbe_salt
        - name: RS_PBE_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_pbe_passphrase
        - name: RS_HMAC_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_hmac_passphrase
        - name: RS_EXTRA_FONT_URL
          valueFrom:
            secretKeyRef:
              name: rsr-reportserver-training
              key: rs_extra_font_url
      initContainers:
      - name: copy-assets-to-backend-container
        image: "eu.gcr.io/akvo-lumen/rsr-nginx:{{ .Values.rsrVersion }}"
        command: [sh, -c]
        args: ["cp -r /var/akvo/rsr/staticroot/* /data"]
        volumeMounts:
          - mountPath: /data
            name: "rsr-staticroot-disk"
      volumes:
         - name: rsr-staticroot-disk
           emptyDir: {}
         - name: "rsr-common-secrets"
           secret:
             secretName: "rsr-common"
         - name: "secret-config"
           secret:
             secretName: {{ include "rsrchart.fullname" . }}
         - name: rsr-media-disk
           persistentVolumeClaim:
             claimName: {{ include "rsrchart.fullname" . }}
