# -*- coding: utf-8 -*-
"""
    Akvo RSR is covered by the GNU Affero General Public License.
    See more details in the license.txt file located at the root folder of the
    Akvo RSR module. For additional details on the GNU license please
    see < http://www.gnu.org/licenses/agpl.html >.
"""


#Additional information about a User
AUTH_PROFILE_MODULE = 'rsr.userprofile'

DEBUG = False

#Use memcached for sessions with write-through to DB
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.markup',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.humanize',
    'django.contrib.webdesign',
    'akvo.rsr',
    'akvo.gateway',
    'akvo.api',
    'registration',
    #'django_granular_permissions',
    #'akvo.status',
    'template_utils',
    'paypal.standard.ipn',
    'sorl.thumbnail',
    'rosetta',
    'django_counter',
    'mollie.ideal',
    'django_sorting',
    'pagination',
    'oembed',
    'django_markup',
    'notification',
    'permissions',
    'workflows',
    'django_filters',
    'south',
    'tastypie',
    'templatetag_handlebars',
    'piwik',
)

gettext = lambda s: s

LOGIN_URL = '/signin/'
LOGIN_REDIRECT_URL = '/'

MIDDLEWARE_CLASSES = (
    'akvo.rsr.middleware.PartnerSitesRouterMiddleware',
    'akvo.rsr.middleware.PartnerSitesLocaleMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.http.ConditionalGetMiddleware',
    'django_sorting.middleware.SortingMiddleware',
    'pagination.middleware.PaginationMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.doc.XViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
)

ROOT_URLCONF = 'akvo.urls.rsr'

SEND_BROKEN_LINK_EMAILS = True

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    #"django.core.context_processors.auth",
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.request',
    'django.contrib.messages.context_processors.messages',
    'akvo.rsr.context_processors.extra_context',
    'akvo.rsr.context_processors.get_current_path_without_lang',
)

# List of callables that know how to import templates from various sources.
# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
    )

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'verbose_request': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s %(request)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        #'special': {
        #    '()': 'project.logging.SpecialFilter',
        #    'foo': 'bar',
        #},
    },
    'handlers': {
        'null': {
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file':{
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(os.path.dirname(__file__), '../log/akvo.log').replace('\\','/'),
            'maxBytes': 1024*1024,
            'backupCount': 4,
            'formatter': 'verbose',
        },
        'request_to_console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
            'formatter': 'verbose_request',
        },
        'request_to_file':{
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(os.path.dirname(__file__), '../log/akvo.log').replace('\\','/'),
            'maxBytes': 1024*1024,
            'backupCount': 4,
            'formatter': 'verbose_request',
        },
        #'mail_admins': {
        #    'level': 'ERROR',
        #    'class': 'django.utils.log.AdminEmailHandler',
        #    'filters': ['special']
        #},
    },
    'loggers': {
        'django': {
            'handlers':['null'],
            'propagate': True,
            'level':'INFO',
        },
        #'django.request': {
        #    'handlers': ['mail_admins'],
        #    'level': 'ERROR',
        #    'propagate': False,
        #},
        # 'django.request': {
        #     'handlers': ['request_to_file', ], #'request_to_console',],
        #     'level': 'DEBUG',
        #     'propagate': False,
        # },
        'akvo.rsr': {
            'handlers': ['file', ], #'console', ],
            'level': 'DEBUG',
            'propagate': False,
        },
        'cacheback': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': False,
            },
        },
}
