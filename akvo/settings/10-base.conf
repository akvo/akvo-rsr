# -*- coding: utf-8 -*-
"""
    Akvo RSR is covered by the GNU Affero General Public License.
    See more details in the license.txt file located at the root folder of the
    Akvo RSR module. For additional details on the GNU license please
    see < http://www.gnu.org/licenses/agpl.html >.
"""

ALLOWED_HOSTS = ['*']

DEBUG = False

#Use memcached for sessions with write-through to DB
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

INSTALLED_APPS = (
    'nested_inline',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'maintenance_mode',
    'akvo.codelists',
    'akvo.rsr',
    'akvo.password_policy',
    'sorl.thumbnail',
    'embed_video',
    'django_markup',
    'django_filters',
    'tastypie',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_swagger',
    'bootstrap3',
    'rules',
    'django_crontab',
    'django_pgviews',
    'webpack_loader',
    'prettyjson',
    'lockdown',
    'request_token',
    'django_ltree',
    'django_q',
    "django_otp",
    "django_otp.plugins.otp_static",
    "django_otp.plugins.otp_totp",
    'two_factor.plugins.phonenumber',
    "two_factor",
    'django_dbml',
)

gettext = lambda s: s

LOGIN_URL = '/sign_in/'
LOGIN_REDIRECT_URL = '/'

#Authentication settings
AUTHENTICATION_BACKENDS = (
    'akvo.rsr.backends.AuthBackend',
    'akvo.rsr.project_role_auth.ProjectRolePermissionBackend',
    'rules.permissions.ObjectPermissionBackend',
)
AUTH_USER_MODEL = 'rsr.User'
# Password hashers
PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.UnsaltedSHA1PasswordHasher',
    'django.contrib.auth.hashers.UnsaltedMD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher'
)

MIDDLEWARE = (
    'akvo.rsr.middleware.HostDispatchMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.http.ConditionalGetMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.admindocs.middleware.XViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    "django_otp.middleware.OTPMiddleware",
    'akvo.rsr.middleware.RequestTokenMiddleware',
    'akvo.rsr.middleware.ExceptionLoggingMiddleware',
    'akvo.rsr.middleware.RSRVersionHeaderMiddleware',
    'akvo.rsr.middleware.APIRedirectMiddleware',
    'akvo.rsr.middleware.RSRLockdownMiddleware',
    'maintenance_mode.middleware.MaintenanceModeMiddleware',
)

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'akvo.password_policy.validator.PasswordPolicyValidator',
        'OPTIONS': {
            'resolver': 'akvo.rsr.forms.resolve_password_policy',
            'fallback': 'akvo.rsr.forms.password_policy_fallback',
        }
    },
]


ROOT_URLCONF = 'akvo.urls'

# Logging
LOG_FILE_PATH = '/var/akvo/rsr/logs/'
ACCESS_LOG_FILE_NAME = 'akvo.log'
ERROR_LOG_FILE_NAME = 'akvo.error.log'

ALLOW_ROBOTS = False
