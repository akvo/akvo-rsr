# -*- coding: utf-8 -*-


import django.db.models.deletion
from django.db import models, migrations
import sorl.thumbnail.fields
import akvo.rsr.models.project
from django.conf import settings
import akvo.rsr.fields
import django.core.validators
import akvo.rsr.models.project_document


class Migration(migrations.Migration):

    dependencies = [
        ('rsr', '0042_auto_20153011_1450'),
    ]

    operations = [
        migrations.AlterField(
            model_name='administrativelocation',
            name='code',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Coded identification of national and sub-national divisions according to recognised administrative boundary repositories. Multiple levels may be reported.', max_length=25, verbose_name='administrative code', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='administrativelocation',
            name='vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='For reference: <a href="http://iatistandard.org/201/codelists/GeographicVocabulary/" target="_blank">http://iatistandard.org/201/codelists/GeographicVocabulary/</a>.', max_length=2, verbose_name='administrative vocabulary', choices=[('A1', 'A1 - Global Admininistrative Unit Layers'), ('A2', 'A2 - UN Second Administrative Level Boundary Project'), ('A3', 'A3 - Global Administrative Areas'), ('A4', 'A4 - ISO Country (3166-1 alpha-2)'), ('G1', 'G1 - Geonames'), ('G2', 'G2 - OpenStreetMap')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget item. Use a period to denote decimals.', null=True, verbose_name='budget item value'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='label',
            field=models.ForeignKey(blank=True, to='rsr.BudgetItemLabel', help_text='Select the budget item(s) to indicate how the project budget is divided. Use the \u2018Other\u2019 fields to add custom budget items.', null=True, on_delete=django.db.models.deletion.SET_NULL, verbose_name='budget item'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='other_extra',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter a description for an "other" budget item.', max_length=30, null=True, verbose_name='other label extra info', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='period_end',
            field=models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='budget item period end', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='period_start',
            field=models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='budget item period start', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select whether this is an original or revised budget of the project.', max_length=1, verbose_name='budget type', choices=[('1', '1 - Original'), ('2', '2 - Revised')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='value_date',
            field=models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='budget item value date', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='countrybudgetitem',
            name='code',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This item encodes the alignment of activities with both the functional and administrative classifications used in the recipient country\u2019s Chart of Accounts. This applies to both on- and off-budget activities.', max_length=6, verbose_name='country budget item', choices=[('1.1.1', '1.1.1 - Executive - executive'), ('1.2.1', '1.2.1 - Legislative - legislative'), ('1.3.1', '1.3.1 - Accountability - macroeconomic policy'), ('1.3.2', '1.3.2 - Accountability - budgeting'), ('1.3.3', '1.3.3 - Accountability - planning'), ('1.3.4', '1.3.4 - Accountability - Treasury/Accounts'), ('1.3.5', '1.3.5 - Accountability - debt and aid management'), ('1.3.6', '1.3.6 - Accountability - tax policy'), ('1.3.7', '1.3.7 - Accountability - tax collection'), ('1.3.8', '1.3.8 - Accountability - local government finance'), ('1.3.9', '1.3.9 - Accountability - other central transfers to institutions '), ('1.3.10', '1.3.10 - Accountability - national audit'), ('1.3.11', '1.3.11 - Accountability - national monitoring and evaluation'), ('1.3.12', '1.3.12 - Accountability - monetary institutions'), ('1.3.13', '1.3.13 - Accountability - financial sector policy and regulation'), ('1.4.1', '1.4.1 - External Affairs - foreign affairs '), ('1.4.2', '1.4.2 - External Affairs - diplomatic missions'), ('1.4.3', '1.4.3 - External Affairs - official development assistance'), ('1.5.1', '1.5.1 - General Personnel Services - general personnel services'), ('1.6.1', '1.6.1 - Statistics - statistics'), ('1.7.1', '1.7.1 - Other General Services - support to civil society '), ('1.7.2', '1.7.2 - Other General Services - central procurement'), ('1.7.3', '1.7.3 - Other General Services - Local Government Administration'), ('1.7.4', '1.7.4 - Other General Services - other general services'), ('1.8.1', '1.8.1 - Elections - elections'), ('2.1.1', '2.1.1 - Justice, Law and Order - policy, planning and administration'), ('2.1.2', '2.1.2 - Justice, Law and Order - police'), ('2.1.2', '2.1.2 - Justice, Law and Order - fire'), ('2.1.3', '2.1.3 - Justice, Law and Order - judicial affairs'), ('2.1.4', '2.1.4 - Justice, Law and Order - Ombudsman'), ('2.1.5', '2.1.5 - Justice, Law and Order - human rights affairs'), ('2.1.6', '2.1.6 - Justice, Law and Order - immigration'), ('2.1.7', '2.1.7 - Justice, Law and Order - anti corruption'), ('2.1.8', '2.1.8 - Justice, Law and Order - prisons'), ('2.1.9', '2.1.9 - Justice, Law and Order - peace building'), ('2.1.10', '2.1.10 - Justice, Law and Order - demobilisation'), ('2.2.1', '2.2.1 - Defence - policy, planning and administration'), ('2.2.2', '2.2.2 - Defence - military'), ('2.2.3', '2.2.3 - Defence - civil defence'), ('2.2.4', '2.2.4 - Defence - foreign military aid'), ('3.1.1', '3.1.1 - General Economic, Commercial and Labour Affairs - policy, planning and administration'), ('3.1.2', '3.1.2 - General Economic, Commercial and Labour Affairs - general economic affairs'), ('3.1.3', '3.1.3 - General Economic, Commercial and Labour Affairs - investment promotion'), ('3.1.4', '3.1.4 - General Economic, Commercial and Labour Affairs - privatisation'), ('3.1.5', '3.1.5 - General Economic, Commercial and Labour Affairs - trade'), ('3.1.6', '3.1.6 - General Economic, Commercial and Labour Affairs - labour'), ('3.1.7', '3.1.7 - General Economic, Commercial and Labour Affairs - national standards development'), ('3.2.1', '3.2.1 - Public Works - policy, planning and administration'), ('3.2.2', '3.2.2 - Public Works - construction regulation'), ('3.2.3', '3.2.3 - Public Works - mechanical services'), ('3.3.1', '3.3.1 - Agriculture - policy, planning and administration'), ('3.3.2', '3.3.2 - Agriculture - irrigation'), ('3.3.3', '3.3.3 - Agriculture - inputs'), ('3.3.4', '3.3.4 - Agriculture - food crop'), ('3.3.5', '3.3.5 - Agriculture - industrial crop'), ('3.3.6', '3.3.6 - Agriculture - livestock'), ('3.3.7', '3.3.7 - Agriculture - agricultural training and extension'), ('3.3.8', '3.3.8 - Agriculture - research'), ('3.3.9', '3.3.9 - Agriculture - other services'), ('3.4.1', '3.4.1 - Forestry - policy, planning and administration'), ('3.4.2', '3.4.2 - Forestry - development and services'), ('3.4.3', '3.4.3 - Forestry - education/training'), ('3.4.4', '3.4.4 - Forestry - research'), ('3.5.1', '3.5.1 - Fishing and Hunting - policy, planning and administration'), ('3.5.2', '3.5.2 - Fishing and Hunting - development and services'), ('3.5.3', '3.5.3 - Fishing and Hunting - education and training'), ('3.5.4', '3.5.4 - Fishing and Hunting - research'), ('3.6.1', '3.6.1 - Energy - policy, planning and administration'), ('3.6.2', '3.6.2 - Energy - education and training'), ('3.6.3', '3.6.3 - Energy - energy regulation'), ('3.6.4', '3.6.4 - Energy - electricity transmission'), ('3.6.5', '3.6.5 - Energy - nuclear'), ('3.6.6', '3.6.6 - Energy - power generation'), ('3.6.7', '3.6.7 - Energy - gas '), ('3.7.1', '3.7.1 - Mining and Mineral Development - policy, planning and administration'), ('3.7.2', '3.7.2 - Mining and Mineral Development - prospection and exploration'), ('3.7.3', '3.7.3 - Mining and Mineral Development - coal and other solid mineral fuels'), ('3.7.4', '3.7.4 - Mining and Mineral Development - petroleum and gas'), ('3.7.6', '3.7.6 - Mining and Mineral Development - other fuel'), ('3.7.7', '3.7.7 - Mining and Mineral Development - non fuel minerals'), ('3.8.1', '3.8.1 - Transport - policy, planning and administration'), ('3.8.2', '3.8.2 - Transport - transport regulation'), ('3.8.3', '3.8.3 - Transport - feeder road construction'), ('3.8.4', '3.8.4 - Transport - feeder road maintenance'), ('3.8.5', '3.8.5 - Transport - national road construction'), ('3.8.6', '3.8.6 - Transport - national road maintenance'), ('3.8.7', '3.8.7 - Transport - rail'), ('3.8.8', '3.8.8 - Transport - water'), ('3.8.9', '3.8.9 - Transport - air'), ('3.8.10', '3.8.10 - Transport - pipeline'), ('3.8.11', '3.8.11 - Transport - storage and distribution'), ('3.8.12', '3.8.12 - Transport - public transport services'), ('3.8.13', '3.8.13 - Transport - meteorological services'), ('3.8.14', '3.8.14 - Transport - education and training'), ('3.9.1', '3.9.1 - Industry - policy, planning and administration'), ('3.9.2', '3.9.2 - Industry - development and services'), ('3.9.3', '3.9.3 - Industry - industrial research'), ('3.9.4', '3.9.4 - Industry - (investment in industry)'), ('3.10.1', '3.10.1 - Communications - policy, planning and administration'), ('3.10.2', '3.10.2 - Communications - ICT Infrastructure'), ('3.10.3', '3.10.3 - Communications - telecoms and postal services'), ('3.10.4', '3.10.4 - Communications - information services'), ('3.11.1', '3.11.1 - Tourism - policy, planning and administration'), ('3.11.2', '3.11.2 - Tourism - services'), ('3.12.1', '3.12.1 - Microfinance and financial services - Microfinance and financial services'), ('4.1.1', '4.1.1 - Water supply and Sanitation - policy, planning and administration'), ('4.1.2', '4.1.2 - Water supply and Sanitation - education/training'), ('4.1.3', '4.1.3 - Water supply and Sanitation - rural water supply and sanitation'), ('4.1.4', '4.1.4 - Water supply and Sanitation - urban water supply and sanitation'), ('4.1.5', '4.1.5 - Water supply and Sanitation - rural water supply'), ('4.1.6', '4.1.6 - Water supply and Sanitation - urban water supply'), ('4.1.7', '4.1.7 - Water supply and Sanitation - rural sanitation'), ('4.1.8', '4.1.8 - Water supply and Sanitation - urban sanitation'), ('4.1.9', '4.1.9 - Water supply and Sanitation - sewage and waste management'), ('4.2.1', '4.2.1 - Environment - policy, planning and administration'), ('4.2.2', '4.2.2 - Environment - research/ education and training'), ('4.2.3', '4.2.3 - Environment - natural resource management'), ('4.2.4', '4.2.4 - Environment - water resources management'), ('4.2.5', '4.2.5 - Environment - wildlife protection, parks and site preservation'), ('5.1.1', '5.1.1 - Health - policy, planning and administration'), ('5.2.1', '5.2.1 - Recreation, Culture and Religion - recreation and sport'), ('5.2.2', '5.2.2 - Recreation, Culture and Religion - culture'), ('5.2.3', '5.2.3 - Recreation, Culture and Religion - broadcasting and publishing'), ('5.2.4', '5.2.4 - Recreation, Culture and Religion - religion'), ('5.3.1', '5.3.1 - Education - administration, policy and planning'), ('5.3.2', '5.3.2 - Education - research'), ('5.3.3', '5.3.3 - Education - pre-primary'), ('5.3.4', '5.3.4 - Education - primary'), ('5.3.5', '5.3.5 - Education - lower secondary'), ('5.3.6', '5.3.6 - Education - upper secondary'), ('5.3.7', '5.3.7 - Education - post secondary non tertiary '), ('5.3.8', '5.3.8 - Education - tertiary'), ('5.3.9', '5.3.9 - Education - vocational training'), ('5.3.10', '5.3.10 - Education - advanced technical and managerial training'), ('5.3.11', '5.3.11 - Education - basic adult education'), ('5.3.12', '5.3.12 - Education - teacher training'), ('5.3.13', '5.3.13 - Education - subsidiary services'), ('5.4.1', '5.4.1 - Social Protection, Land Housing and Community Amenities - policy, planning and administration'), ('5.4.2', '5.4.2 - Social Protection, Land Housing and Community Amenities - social security (excl pensions)'), ('5.4.3', '5.4.3 - Social Protection, Land Housing and Community Amenities - general pensions'), ('5.4.4', '5.4.4 - Social Protection, Land Housing and Community Amenities - civil service and military pensions'), ('5.4.5', '5.4.5 - Social Protection, Land Housing and Community Amenities - social services (incl youth development and women+ children)'), ('5.4.6', '5.4.6 - Social Protection, Land Housing and Community Amenities - land policy and management'), ('5.4.7', '5.4.7 - Social Protection, Land Housing and Community Amenities - rural devt'), ('5.4.8', '5.4.8 - Social Protection, Land Housing and Community Amenities - urban devt'), ('5.4.9', '5.4.9 - Social Protection, Land Housing and Community Amenities - housing and community amenities'), ('5.4.10', '5.4.10 - Social Protection, Land Housing and Community Amenities - emergency relief'), ('5.4.11', '5.4.11 - Social Protection, Land Housing and Community Amenities - disaster prevention and preparedness'), ('5.4.12', '5.4.12 - Social Protection, Land Housing and Community Amenities - support to refugees and internally displaced persons'), ('6.1.1', '6.1.1 - Development Partner affairs - policy planning and administration'), ('6.1.2', '6.1.2 - Development Partner affairs - Technical staff services'), ('7.1.1', '7.1.1 - External to government sector - External to general government sector'), ('7.2.1', '7.2.1 - General Budget Support - General Budget Support')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='countrybudgetitem',
            name='description',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='country budget item description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='countrybudgetitem',
            name='percentage',
            field=models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='If more than one identifier is reported, the percentage share must be reported and all percentages should add up to 100 percent. Use a period to denote decimals.', null=True, verbose_name='country budget item percentage'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='ascending',
            field=models.BooleanField(null=True, help_text='Choose ascending if the target value of the indicator is higher than the baseline value (eg. people with access to sanitation). Choose descending if the target value of the indicator is lower than the baseline value (eg. people with diarrhea).', verbose_name='ascending'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='baseline_comment',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Here you can provide extra information on the baseline value, if needed.', max_length=2000, verbose_name='baseline comment', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='baseline_value',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The value of the baseline at the start of the project.', max_length=50, verbose_name='baseline value', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='baseline_year',
            field=models.PositiveIntegerField(help_text='The year the baseline value was taken.', max_length=4, null=True, verbose_name='baseline year', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='description',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='You can provide further information of the indicator here.', max_length=2000, verbose_name='indicator description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='measure',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Choose how the indicator will be measured (in percentage or units).', max_length=1, verbose_name='indicator measure', choices=[('1', '1 - Unit'), ('2', '2 - Percentage')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='title',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Within each result indicators can be defined. Indicators should be items that can be counted and evaluated as the project continues and is completed.', max_length=255, verbose_name='indicator title', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicatorperiod',
            name='actual_comment',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Here you can provide extra information on the actual value, if needed (for instance, why the actual value differs from the target value).', max_length=2000, verbose_name='actual value comment', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicatorperiod',
            name='actual_value',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='A record of the achieved result for this period.', max_length=50, verbose_name='actual value', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicatorperiod',
            name='period_end',
            field=models.DateField(help_text='The end date of the reporting period for this indicator.', null=True, verbose_name='period end', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicatorperiod',
            name='period_start',
            field=models.DateField(help_text='The start date of the reporting period for this indicator.', null=True, verbose_name='period start', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicatorperiod',
            name='target_comment',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Here you can provide extra information on the target value, if needed.', max_length=2000, verbose_name='target value comment', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicatorperiod',
            name='target_value',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The target value for the above period.', max_length=50, verbose_name='target value', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='link',
            name='caption',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter a name for the link.', max_length=50, verbose_name='link caption', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='link',
            name='url',
            field=models.URLField(help_text="Enter the link to an external website you wish to redirect to from your project page. The URL should start with 'http://' or 'https://'.", verbose_name='link url', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='address_1',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 1', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='address_2',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 2', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='city',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='city', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='latitude',
            field=akvo.rsr.fields.LatitudeField(default=0, help_text='Use a period to denote decimals.', blank=True, null=True, verbose_name='latitude', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='longitude',
            field=akvo.rsr.fields.LongitudeField(default=0, help_text='Use a period to denote decimals.', blank=True, null=True, verbose_name='longitude', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='postcode',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=10, verbose_name='postal code', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='organisationlocation',
            name='state',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='state', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='partnership',
            name='funding_amount',
            field=models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='It\u2019s only possible to indicate a funding amount for funding partners. Use a period to denote decimals.', null=True, verbose_name='funding amount', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='partnership',
            name='iati_organisation_role',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Funding partner'), (2, 'Accountable partner'), (3, 'Extending partner'), (4, 'Implementing partner'), (100, 'Sponsor partner'), (101, 'Reporting organisation')], blank=True, help_text='Select the role of the organisation within the project:<br/>- Funding organisation: a government or organisation that provides funds to the project<br/>- Implementing organisation: an organisation involved in carrying out the activity or intervention<br/>- Accountable organisation: an organisation responsible for oversight of the project and its outcomes<br/>- Extending organisation: an organisation that manages the budget and direction of a project on behalf of the funding organisation<br/>- Reporting organisation: an organisation that will report this project in an IATI file', null=True, verbose_name='organisation role', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='partnership',
            name='organisation',
            field=models.ForeignKey(related_name='partnerships', blank=True, to='rsr.Organisation', help_text='Select an organisation that is taking an active role in the project.', null=True, on_delete=django.db.models.deletion.SET_NULL, verbose_name='organisation'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='period_end',
            field=models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the disbursement period.', null=True, verbose_name='planned disbursement period end', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='period_start',
            field=models.DateField(help_text='The exact date of the planned disbursement OR the starting date for the disbursement period (DD/MM/YYYY).', null=True, verbose_name='planned disbursement period start', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='planned disbursement type', choices=[('1', '1 - Original'), ('2', '2 - Revised')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='value',
            field=models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='This should only be used to report specific planned cash transfers. Use a period to denote decimals.', null=True, verbose_name='planned disbursement value'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='value_date',
            field=models.DateField(help_text='Enter the specific date (DD/MM/YYYY) for the planned disbursement value.', null=True, verbose_name='planned disbursement value date', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='policymarker',
            name='description',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='policy marker description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='policymarker',
            name='policy_marker',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='A policy or theme addressed by the activity, based on DAC policy markers. These indicators track key policy issues, like gender equality, environment, and trade development.', max_length=2, verbose_name='policy marker', choices=[('1', '1 - Gender Equality'), ('2', '2 - Aid to Environment'), ('3', '3 - Participatory Development/Good Governance'), ('4', '4 - Trade Development'), ('5', '5 - Aid Targeting the Objectives of the Convention on Biological Diversity'), ('6', '6 - Aid Targeting the Objectives of the Framework Convention on Climate Change - Mitigation'), ('7', '7 - Aid Targeting the Objectives of the Framework Convention on Climate Change - Adaptation'), ('8', '8 - Aid Targeting the Objectives of the Convention to Combat Desertification'), ('9', '9 - Reproductive, Maternal, Newborn and Child Health (RMNCH)')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='policymarker',
            name='significance',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Each reported marker must contain the significance of the policy marker for this activity. Choices are:<br/>0 - Not targeted<br/>1 - Significant objective: the policy objectives are important, but were not the prime motivation for undertaking the activity.<br/>2 - Principal objective: the policy objective was the primary reason to undertake this activity.<br/>3 - Principal objective AND in support of an action programme: valid for the markers dealing with Desertification only.<br/>4 - Explicit primary objective: only to be used in combination with policy marker.<br/>9 - reproductive, maternal, newborn and child health.', max_length=2, verbose_name='policy marker significance', choices=[('0', '0 - not targeted'), ('1', '1 - significant objective'), ('2', '2 - principal objective'), ('3', '3 - principal objective AND in support of an action programme'), ('4', '4 - Explicit primary objective')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='background',
            field=akvo.rsr.fields.ProjectLimitedTextField(help_text='This should describe the geographical, political, environmental, social and/or cultural context of the project, and any related activities that have already taken place or are underway.', max_length=1000, verbose_name='background', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='capital_spend_percentage',
            field=models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='The percentage of the total commitment allocated to or planned for capital expenditure. Content must be a positive decimal number between 0 and 100, with no percentage sign. Use a period to denote decimals.', null=True, verbose_name='capital spend percentage'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='collaboration_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for the type of collaboration involved. For reference, please visit: <a href="http://iatistandard.org/201/codelists/CollaborationType/" target="_blank">http://iatistandard.org/201/codelists/CollaborationType/</a>.', max_length=1, verbose_name='collaboration type', choices=[('1', '1 - Bilateral'), ('2', '2 - Multilateral'), ('3', '3 - Bilateral, core contributions to NGOs and other private bodies / PPPs'), ('4', '4 - Multilateral outflows'), ('6', '6 - Private sector outflow'), ('7', '7 - Bilateral, ex-post reporting on NGOs activities funded through core contributions')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='country_budget_vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter an IATI code for the common functional classification or country system (this allows for common codes, country-specific codes, or any other classification agreed between countries and donors) see: <a href="http://iatistandard.org/201/codelists/BudgetIdentifierVocabulary/" target="_blank">http://iatistandard.org/201/codelists/BudgetIdentifierVocabulary/</a>.', max_length=1, verbose_name='country budget vocabulary', choices=[('1', '1 - IATI'), ('2', '2 - Country Chart of Accounts'), ('3', '3 - Other Country System'), ('4', '4 - Reporting Organisation'), ('5', '5 - Other')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='current_image',
            field=sorl.thumbnail.fields.ImageField(help_text='Add your project photo here. You can only add one photo. If you have more, you can add them via RSR updates when your project is published. A photo album will feature on the project page. The photo should not be larger than 2 MB in size, and should preferably be in JPG format.', upload_to=akvo.rsr.models.project.image_path, verbose_name='photo', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='current_image_caption',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Briefly describe who or what you see in the photo.', max_length=50, verbose_name='photo caption', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='current_image_credit',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter who took the photo.', max_length=50, verbose_name='photo credit', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='current_status',
            field=akvo.rsr.fields.ProjectLimitedTextField(help_text='Describe the situation at the start of the project.', max_length=600, verbose_name='baseline situation', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='date_end_actual',
            field=models.DateField(help_text='Enter the actual end date of the project (DD/MM/YYYY).', null=True, verbose_name='end date (actual)', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='date_end_planned',
            field=models.DateField(help_text='Enter the original end date of the project (DD/MM/YYYY).', null=True, verbose_name='end date (planned)', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='date_start_actual',
            field=models.DateField(help_text='Enter the actual start date of the project (DD/MM/YYYY).', null=True, verbose_name='start date (actual)', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='date_start_planned',
            field=models.DateField(help_text='Enter the original start date of the project (DD/MM/YYYY).', null=True, verbose_name='start date (planned)', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_aid_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for the type of aid being supplied or activity being undertaken. This element specifies a default for all the project\u2019s financial transactions. This can be overridden at the individual transaction level. For reference, please visit: <a href="http://iatistandard.org/201/codelists/AidType/" target="_blank">http://iatistandard.org/201/codelists/AidType/</a>.', max_length=3, verbose_name='default aid type', choices=[('A01', 'A01 - General budget support'), ('A02', 'A02 - Sector budget support'), ('B01', 'B01 - Core support to NGOs, other private bodies, PPPs and research institutes'), ('B02', 'B02 - Core contributions to multilateral institutions'), ('B03', 'B03 - Contributions to specific-purpose programmes and funds managed by international organisations (multilateral, INGO)'), ('B04', 'B04 - Basket funds/pooled funding'), ('C01', 'C01 - Project-type interventions'), ('D01', 'D01 - Donor country personnel'), ('D02', 'D02 - Other technical assistance'), ('E01', 'E01 - Scholarships/training in donor country'), ('E02', 'E02 - Imputed student costs'), ('F01', 'F01 - Debt relief'), ('G01', 'G01 - Administrative costs not included elsewhere'), ('H01', 'H01 - Development awareness'), ('H02', 'H02 - Refugees in donor countries')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_finance_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for the type of finance. This element specifies a default for all the transactions in the project\u2019s activity report; it can be overridden at the individual transaction level. For reference visit: <a href="http://iatistandard.org/201/codelists/FinanceType/" target="_blank">http://iatistandard.org/201/codelists/FinanceType/</a>.', max_length=3, verbose_name='default finance type', choices=[('110', '110 - Aid grant excluding debt reorganisation'), ('111', '111 - Subsidies to national private investors'), ('210', '210 - Interest subsidy grant in AF'), ('211', '211 - Interest subsidy to national private exporters'), ('310', '310 - Deposit basis'), ('311', '311 - Encashment basis'), ('410', '410 - Aid loan excluding debt reorganisation'), ('411', '411 - Investment-related loan to developing countries'), ('412', '412 - Loan in a joint venture with the recipient'), ('413', '413 - Loan to national private investor'), ('414', '414 - Loan to national private exporter'), ('451', '451 - Non-banks guaranteed export credits'), ('452', '452 - Non-banks non-guaranteed portions of guaranteed export credits'), ('453', '453 - Bank export credits'), ('510', '510 - Acquisition of equity as part of a joint venture with the recipient'), ('511', '511 - Acquisition of equity not part of joint venture in developing countries'), ('512', '512 - Other acquisition of equity. Investment in a country on the DAC List of ODA Recipients that is not made to acquire a lasting interest in an enterprise.'), ('610', '610 - Debt forgiveness: ODA claims (P)'), ('611', '611 - Debt forgiveness: ODA claims (I)'), ('612', '612 - Debt forgiveness: OOF claims (P)'), ('613', '613 - Debt forgiveness: OOF claims (I)'), ('614', '614 - Debt forgiveness: Private claims (P)'), ('615', '615 - Debt forgiveness: Private claims (I)'), ('616', '616 - Debt forgiveness: OOF claims (DSR)'), ('617', '617 - Debt forgiveness: Private claims (DSR)'), ('618', '618 - Debt forgiveness: Other'), ('620', '620 - Debt rescheduling: ODA claims (P)'), ('621', '621 - Debt rescheduling: ODA claims (I)'), ('622', '622 - Debt rescheduling: OOF claims (P)'), ('623', '623 - Debt rescheduling: OOF claims (I)'), ('624', '624 - Debt rescheduling: Private claims (P)'), ('625', '625 - Debt rescheduling: Private claims (I)'), ('626', '626 - Debt rescheduling: OOF claims (DSR)'), ('627', '627 - Debt rescheduling: Private claims (DSR)'), ('630', '630 - Debt rescheduling: OOF claim (DSR - original loan principal)'), ('631', '631 - Debt rescheduling: OOF claim (DSR - original loan interest)'), ('632', '632 - Debt rescheduling: Private claim (DSR - original loan principal)'), ('710', '710 - Foreign direct investment'), ('711', '711 - Other foreign direct investment, including reinvested earnings'), ('810', '810 - Bank bonds'), ('811', '811 - Non-bank bonds'), ('910', '910 - Other bank securities/claims'), ('911', '911 - Other non-bank securities/claims'), ('912', '912 - Securities and other instruments issued by multilateral agencies')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_flow_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for how the activity (project) is funded. For reference, please visit: <a href="http://iatistandard.org/201/codelists/FlowType/" target="_blank">http://iatistandard.org/201/codelists/FlowType/</a>.', max_length=2, verbose_name='default flow type', choices=[('10', '10 - ODA'), ('20', '20 - OOF'), ('30', '30 - Private NGO and other private sources'), ('35', '35 - Private Market'), ('40', '40 - Non flow'), ('50', '50 - Other flows')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_tied_status',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This element specifies a default for all the activity\u2019s financial transactions; it can be overridden at the individual transaction level. For reference, please visit: <a href="http://iatistandard.org/201/codelists/TiedStatus/" target="_blank">http://iatistandard.org/201/codelists/TiedStatus/</a>.', max_length=1, verbose_name='default tied status', choices=[('3', '3 - Partially tied'), ('4', '4 - Tied'), ('5', '5 - Untied')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='goals_overview',
            field=akvo.rsr.fields.ProjectLimitedTextField(help_text='Provide a brief description of the overall project goals.', max_length=600, verbose_name='goals overview', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='hierarchy',
            field=models.PositiveIntegerField(choices=[(1, 'Core Activity'), (2, 'Sub Activity'), (3, 'Lower Sub Activity')], max_length=1, blank=True, help_text='If you are reporting multiple levels of projects in RSR, you can specify whether this is a core, sub, or lower sub activity here.', null=True, verbose_name='hierarchy'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='iati_activity_id',
            field=akvo.rsr.fields.ValidXMLCharField(null=True, max_length=100, blank=True, help_text='This is a globally unique identifier for this activity. It is a requirement to be compliant with the IATI standard. This code consists of: [country code]-[Chamber of Commerce number]-[organisation\u2019s internal project code]. For Dutch organisations this is e.g. NL-KVK-31156201-TZ1234. For more information see <a href="http://iatistandard.org/201/activity-standard/iati-activities/iati-activity/iati-identifier/#definition" target="_blank">http://iatistandard.org/201/activity-standard/iati-activities/iati-activity/iati-identifier/#definition</a>', unique=True, verbose_name='IATI identifier', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='keywords',
            field=models.ManyToManyField(help_text='Choose a keyword to link to this project.', related_name='projects', verbose_name='keyword', to='rsr.Keyword', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='language',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the language used when entering the details for this project.', max_length=2, choices=[('de', 'German'), ('en', 'English'), ('es', 'Spanish'), ('fr', 'French'), ('nl', 'Dutch'), ('ru', 'Russian')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='notes',
            field=akvo.rsr.fields.ValidXMLTextField(help_text='The project comments are only for internal use and will not be displayed anywhere on the project page.', verbose_name='project comments', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='project_plan',
            field=akvo.rsr.fields.ValidXMLTextField(help_text='Detailed information about the implementation of the project: the what, how, who and when.', verbose_name='project plan', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='project_plan_summary',
            field=akvo.rsr.fields.ProjectLimitedTextField(help_text='Enter a brief summary. The summary should explain:<br>- Why the project is being carried out;<br>- Where it is taking place;<br>- Who will benefit and/or participate;<br>- What it specifically hopes to accomplish;<br>- How those specific goals will be reached', max_length=400, verbose_name='summary of project plan', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='status',
            field=akvo.rsr.fields.ValidXMLCharField(default='N', choices=[('N', ''), ('H', 'Needs funding'), ('A', 'Active'), ('C', 'Complete'), ('L', 'Cancelled'), ('R', 'Archived')], max_length=1, help_text='There are five different project statuses:<br/>1) Needs funding: this project still needs funding and implementation has not yet started.<br/>2) Active: the implementation phase has begun.<br/>3) Completed: the project has been completed.<br/>4) Cancelled: the project never took place or work stopped before it was fully implemented.<br/>5) Archived: projects are archived when the reporting partner no longer uses RSR.', verbose_name='status', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='subtitle',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=75, verbose_name='project subtitle', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='sustainability',
            field=akvo.rsr.fields.ValidXMLTextField(help_text='Describe how you aim to guarantee sustainability of the project until 10 years after project implementation. Think about the institutional setting, capacity-building, a cost recovery plan, products used, feasible arrangements for operation and maintenance, anticipation of environmental impact and social integration.', verbose_name='sustainability', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='target_group',
            field=akvo.rsr.fields.ProjectLimitedTextField(help_text='This should include information about the people, organisations or resources that are being impacted by this project.', max_length=600, verbose_name='target group', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='title',
            field=akvo.rsr.fields.ValidXMLCharField(db_index=True, max_length=45, verbose_name='project title', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcondition',
            name='text',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The text of a specific condition attached to the Project. Organisation-wide terms and conditions that apply to all activities should not be reported here, but in either iati-organisation/document-link or iati-activity-document-link.', max_length=100, verbose_name='condition', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcondition',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Condition type \u2013 e.g. policy, performance.<br/>1 - Policy: The condition attached requires a particular policy to be implemented by the recipient<br/>2 - Performance: The condition attached requires certain outputs or outcomes to be achieved by the recipient<br/>3 - Fiduciary: The condition attached requires use of certain public financial management or public accountability measures by the recipient', max_length=1, verbose_name='condition type', choices=[('1', '1 - Policy'), ('2', '2 - Performance'), ('3', '3 - Fiduciary')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='department',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='department', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='email',
            field=models.EmailField(max_length=75, verbose_name='contact email', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='job_title',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Job title of the contact person.', max_length=100, verbose_name='job title', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='mailing_address',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Address of the contact person. Avoid giving personal contact details.', max_length=255, verbose_name='contact address', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='organisation',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The organisation that the contact person works for.', max_length=100, verbose_name='contact organisation', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='person_name',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Please enter the name of the contact person for this project.', max_length=100, verbose_name='contact name', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='telephone',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Contact number for the contact person. Avoid giving personal contact details.', max_length=30, verbose_name='contact phone number', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='What types of enquiries this contact person is best-placed to handle.', max_length=1, verbose_name='contact type', choices=[('1', '1 - General Enquiries'), ('2', '2 - Project Management'), ('3', '3 - Financial Management'), ('4', '4 - Communications')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='website',
            field=models.URLField(help_text="The contact web address, if available. The web address should start with 'http://' or 'https://'.", verbose_name='contact website', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='category',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The description of the type of content contained within the document.', max_length=3, verbose_name='document category', choices=[('A01', 'A01 - Pre- and post-project impact appraisal'), ('A02', 'A02 - Objectives / Purpose of activity'), ('A03', 'A03 - Intended ultimate beneficiaries'), ('A04', 'A04 - Conditions'), ('A05', 'A05 - Budget'), ('A06', 'A06 - Summary information about contract'), ('A07', 'A07 - Review of project performance and evaluation'), ('A08', 'A08 - Results, outcomes and outputs'), ('A09', 'A09 - Memorandum of understanding (If agreed by all parties)'), ('A10', 'A10 - Tender'), ('A11', 'A11 - Contract'), ('A12', 'A12 - Activity web page'), ('B01', 'B01 - Annual report'), ('B02', 'B02 - Institutional Strategy paper'), ('B03', 'B03 - Country strategy paper'), ('B04', 'B04 - Aid Allocation Policy'), ('B05', 'B05 - Procurement Policy and Procedure'), ('B06', 'B06 - Institutional Audit Report'), ('B07', 'B07 - Country Audit Report'), ('B08', 'B08 - Exclusions Policy'), ('B09', 'B09 - Institutional Evaluation Report'), ('B10', 'B10 - Country Evaluation Report'), ('B11', 'B11 - Sector strategy'), ('B12', 'B12 - Thematic strategy'), ('B13', 'B13 - Country-level Memorandum of Understanding'), ('B14', 'B14 - Evaluations policy'), ('B15', 'B15 - General Terms and Conditions'), ('B16', 'B16 - Organisation web page'), ('B17', 'B17 - Country/Region web page'), ('B18', 'B18 - Sector web page')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='document',
            field=models.FileField(help_text="You can upload a document to your project. To upload multiple documents, press the 'Add another document' link.<br>These documents will be stored on the RSR server and will be publicly available for users to download and view to gain further insight in the project activities.", upload_to=akvo.rsr.models.project_document.document_path, verbose_name='document', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='format',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This provides the code for the Internet Media Type ("MIME type") of the document, and includes pdf, msword, rtf, xml, csv, etc. For a list of commonly used MIME types, visit this link: <a href="http://www.sitepoint.com/web-foundations/mime-types-summary-list/" target="_blank">http://www.sitepoint.com/web-foundations/mime-types-summary-list/</a>.', max_length=75, verbose_name='document format', choices=[('application/1d-interleaved-parityfec', 'application/1d-interleaved-parityfec'), ('application/3gpp-ims+xml', 'application/3gpp-ims+xml'), ('application/activemessage', 'application/activemessage'), ('application/activemessage', 'application/activemessage'), ('application/alto-costmap+json', 'application/alto-costmap+json'), ('application/alto-costmapfilter+json', 'application/alto-costmapfilter+json'), ('application/alto-directory+json', 'application/alto-directory+json'), ('application/alto-endpointprop+json', 'application/alto-endpointprop+json'), ('application/alto-endpointpropparams+json', 'application/alto-endpointpropparams+json'), ('application/alto-endpointcost+json', 'application/alto-endpointcost+json'), ('application/alto-endpointcostparams+json', 'application/alto-endpointcostparams+json'), ('application/alto-error+json', 'application/alto-error+json'), ('application/alto-networkmapfilter+json', 'application/alto-networkmapfilter+json'), ('application/alto-networkmap+json', 'application/alto-networkmap+json'), ('application/andrew-inset', 'application/andrew-inset'), ('application/applefile', 'application/applefile'), ('application/atom+xml', 'application/atom+xml'), ('application/atomcat+xml', 'application/atomcat+xml'), ('application/atomdeleted+xml', 'application/atomdeleted+xml'), ('application/atomicmail', 'application/atomicmail'), ('application/atomsvc+xml', 'application/atomsvc+xml'), ('application/auth-policy+xml', 'application/auth-policy+xml'), ('application/bacnet-xdd+zip', 'application/bacnet-xdd+zip'), ('application/batch-SMTP', 'application/batch-SMTP'), ('application/beep+xml', 'application/beep+xml'), ('application/calendar+json', 'application/calendar+json'), ('application/calendar+xml', 'application/calendar+xml'), ('application/call-completion', 'application/call-completion'), ('application/cals-1840', 'application/cals-1840'), ('application/cbor', 'application/cbor'), ('application/ccmp+xml', 'application/ccmp+xml'), ('application/ccxml+xml', 'application/ccxml+xml'), ('application/cdmi-capability', 'application/cdmi-capability'), ('application/cdmi-container', 'application/cdmi-container'), ('application/cdmi-domain', 'application/cdmi-domain'), ('application/cdmi-object', 'application/cdmi-object'), ('application/cdmi-queue', 'application/cdmi-queue'), ('application/cea-2018+xml', 'application/cea-2018+xml'), ('application/cellml+xml', 'application/cellml+xml'), ('application/cfw', 'application/cfw'), ('application/cms', 'application/cms'), ('application/cnrp+xml', 'application/cnrp+xml'), ('application/commonground', 'application/commonground'), ('application/conference-info+xml', 'application/conference-info+xml'), ('application/cpl+xml', 'application/cpl+xml'), ('application/csrattrs', 'application/csrattrs'), ('application/csta+xml', 'application/csta+xml'), ('application/CSTAdata+xml', 'application/CSTAdata+xml'), ('application/cybercash', 'application/cybercash'), ('application/dash+xml', 'application/dash+xml'), ('application/dashdelta', 'application/dashdelta'), ('application/davmount+xml', 'application/davmount+xml'), ('application/dca-rft', 'application/dca-rft'), ('application/dec-dx', 'application/dec-dx'), ('application/dialog-info+xml', 'application/dialog-info+xml'), ('application/dicom', 'application/dicom'), ('application/dns', 'application/dns'), ('application/dskpp+xml', 'application/dskpp+xml'), ('application/dssc+der', 'application/dssc+der'), ('application/dssc+xml', 'application/dssc+xml'), ('application/dvcs', 'application/dvcs'), ('application/ecmascript', 'application/ecmascript'), ('application/EDI-consent', 'application/EDI-consent'), ('application/EDIFACT', 'application/EDIFACT'), ('application/EDI-X12', 'application/EDI-X12'), ('application/emma+xml', 'application/emma+xml'), ('application/emotionml+xml', 'application/emotionml+xml'), ('application/encaprtp', 'application/encaprtp'), ('application/epp+xml', 'application/epp+xml'), ('application/eshop', 'application/eshop'), ('application/example', 'application/example'), ('application/exi', 'application/exi'), ('application/fastinfoset', 'application/fastinfoset'), ('application/fastsoap', 'application/fastsoap'), ('application/fdt+xml', 'application/fdt+xml'), ('application/fits', 'application/fits'), ('application/font-sfnt', 'application/font-sfnt'), ('application/font-tdpfr', 'application/font-tdpfr'), ('application/font-woff', 'application/font-woff'), ('application/framework-attributes+xml', 'application/framework-attributes+xml'), ('application/gzip', 'application/gzip'), ('application/H224', 'application/H224'), ('application/held+xml', 'application/held+xml'), ('application/http', 'application/http'), ('application/hyperstudio', 'application/hyperstudio'), ('application/ibe-key-request+xml', 'application/ibe-key-request+xml'), ('application/ibe-pkg-reply+xml', 'application/ibe-pkg-reply+xml'), ('application/ibe-pp-data', 'application/ibe-pp-data'), ('application/iges', 'application/iges'), ('application/im-iscomposing+xml', 'application/im-iscomposing+xml'), ('application/index', 'application/index'), ('application/index.cmd', 'application/index.cmd'), ('application/index.obj', 'application/index.obj'), ('application/index.response', 'application/index.response'), ('application/index.vnd', 'application/index.vnd'), ('application/inkml+xml', 'application/inkml+xml'), ('application/iotp', 'application/iotp'), ('application/ipfix', 'application/ipfix'), ('application/ipp', 'application/ipp'), ('application/isup', 'application/isup'), ('application/its+xml', 'application/its+xml'), ('application/javascript', 'application/javascript'), ('application/jrd+json', 'application/jrd+json'), ('application/json', 'application/json'), ('application/json-patch+json', 'application/json-patch+json'), ('application/kpml-request+xml', 'application/kpml-request+xml'), ('application/kpml-response+xml', 'application/kpml-response+xml'), ('application/ld+json', 'application/ld+json'), ('application/link-format', 'application/link-format'), ('application/load-control+xml', 'application/load-control+xml'), ('application/lost+xml', 'application/lost+xml'), ('application/lostsync+xml', 'application/lostsync+xml'), ('application/mac-binhex40', 'application/mac-binhex40'), ('application/macwriteii', 'application/macwriteii'), ('application/mads+xml', 'application/mads+xml'), ('application/marc', 'application/marc'), ('application/marcxml+xml', 'application/marcxml+xml'), ('application/mathematica', 'application/mathematica'), ('application/mathml-content+xml', 'application/mathml-content+xml'), ('application/mathml-presentation+xml', 'application/mathml-presentation+xml'), ('application/mathml+xml', 'application/mathml+xml'), ('application/mbms-associated-procedure-description+xml', 'application/mbms-associated-procedure-description+xml'), ('application/mbms-deregister+xml', 'application/mbms-deregister+xml'), ('application/mbms-envelope+xml', 'application/mbms-envelope+xml'), ('application/mbms-msk-response+xml', 'application/mbms-msk-response+xml'), ('application/mbms-msk+xml', 'application/mbms-msk+xml'), ('application/mbms-protection-description+xml', 'application/mbms-protection-description+xml'), ('application/mbms-reception-report+xml', 'application/mbms-reception-report+xml'), ('application/mbms-register-response+xml', 'application/mbms-register-response+xml'), ('application/mbms-register+xml', 'application/mbms-register+xml'), ('application/mbms-schedule+xml', 'application/mbms-schedule+xml'), ('application/mbms-user-service-description+xml', 'application/mbms-user-service-description+xml'), ('application/mbox', 'application/mbox'), ('application/media_control+xml', 'application/media_control+xml'), ('application/media-policy-dataset+xml', 'application/media-policy-dataset+xml'), ('application/mediaservercontrol+xml', 'application/mediaservercontrol+xml'), ('application/metalink4+xml', 'application/metalink4+xml'), ('application/mets+xml', 'application/mets+xml'), ('application/mikey', 'application/mikey'), ('application/mods+xml', 'application/mods+xml'), ('application/moss-keys', 'application/moss-keys'), ('application/moss-signature', 'application/moss-signature'), ('application/mosskey-data', 'application/mosskey-data'), ('application/mosskey-request', 'application/mosskey-request'), ('application/mp21', 'application/mp21'), ('application/mp4', 'application/mp4'), ('application/mpeg4-generic', 'application/mpeg4-generic'), ('application/mpeg4-iod', 'application/mpeg4-iod'), ('application/mpeg4-iod-xmt', 'application/mpeg4-iod-xmt'), ('application/mrb-consumer+xml', 'application/mrb-consumer+xml'), ('application/mrb-publish+xml', 'application/mrb-publish+xml'), ('application/msc-ivr+xml', 'application/msc-ivr+xml'), ('application/msc-mixer+xml', 'application/msc-mixer+xml'), ('application/msword', 'application/msword'), ('application/mxf', 'application/mxf'), ('application/nasdata', 'application/nasdata'), ('application/news-checkgroups', 'application/news-checkgroups'), ('application/news-groupinfo', 'application/news-groupinfo'), ('application/news-transmission', 'application/news-transmission'), ('application/nlsml+xml', 'application/nlsml+xml'), ('application/nss', 'application/nss'), ('application/ocsp-request', 'application/ocsp-request'), ('application/ocsp-response', 'application/ocsp-response'), ('application/octet-stream', 'application/octet-stream'), ('application/oda', 'application/oda'), ('application/ODX', 'application/ODX'), ('application/oebps-package+xml', 'application/oebps-package+xml'), ('application/ogg', 'application/ogg'), ('application/oxps', 'application/oxps'), ('application/p2p-overlay+xml', 'application/p2p-overlay+xml'), ('application/parityfec', 'application/parityfec'), ('application/patch-ops-error+xml', 'application/patch-ops-error+xml'), ('application/pdf', 'application/pdf'), ('application/PDX', 'application/PDX'), ('application/pgp-encrypted', 'application/pgp-encrypted'), ('application/pgp-keys', 'application/pgp-keys'), ('application/pgp-signature', 'application/pgp-signature'), ('application/pidf-diff+xml', 'application/pidf-diff+xml'), ('application/pidf+xml', 'application/pidf+xml'), ('application/pkcs10', 'application/pkcs10'), ('application/pkcs7-mime', 'application/pkcs7-mime'), ('application/pkcs7-signature', 'application/pkcs7-signature'), ('application/pkcs8', 'application/pkcs8'), ('application/pkix-attr-cert', 'application/pkix-attr-cert'), ('application/pkix-cert', 'application/pkix-cert'), ('application/pkix-crl', 'application/pkix-crl'), ('application/pkix-pkipath', 'application/pkix-pkipath'), ('application/pkixcmp', 'application/pkixcmp'), ('application/pls+xml', 'application/pls+xml'), ('application/poc-settings+xml', 'application/poc-settings+xml'), ('application/postscript', 'application/postscript'), ('application/provenance+xml', 'application/provenance+xml'), ('application/prs.alvestrand.titrax-sheet', 'application/prs.alvestrand.titrax-sheet'), ('application/prs.cww', 'application/prs.cww'), ('application/prs.hpub+zip', 'application/prs.hpub+zip'), ('application/prs.nprend', 'application/prs.nprend'), ('application/prs.plucker', 'application/prs.plucker'), ('application/prs.rdf-xml-crypt', 'application/prs.rdf-xml-crypt'), ('application/prs.xsf+xml', 'application/prs.xsf+xml'), ('application/pskc+xml', 'application/pskc+xml'), ('application/rdf+xml', 'application/rdf+xml'), ('application/qsig', 'application/qsig'), ('application/raptorfec', 'application/raptorfec'), ('application/reginfo+xml', 'application/reginfo+xml'), ('application/relax-ng-compact-syntax', 'application/relax-ng-compact-syntax'), ('application/remote-printing', 'application/remote-printing'), ('application/reputon+json', 'application/reputon+json'), ('application/resource-lists-diff+xml', 'application/resource-lists-diff+xml'), ('application/resource-lists+xml', 'application/resource-lists+xml'), ('application/riscos', 'application/riscos'), ('application/rlmi+xml', 'application/rlmi+xml'), ('application/rls-services+xml', 'application/rls-services+xml'), ('application/rpki-ghostbusters', 'application/rpki-ghostbusters'), ('application/rpki-manifest', 'application/rpki-manifest'), ('application/rpki-roa', 'application/rpki-roa'), ('application/rpki-updown', 'application/rpki-updown'), ('application/rtf', 'application/rtf'), ('application/rtploopback', 'application/rtploopback'), ('application/rtx', 'application/rtx'), ('application/samlassertion+xml', 'application/samlassertion+xml'), ('application/samlmetadata+xml', 'application/samlmetadata+xml'), ('application/sbml+xml', 'application/sbml+xml'), ('application/scvp-cv-request', 'application/scvp-cv-request'), ('application/scvp-cv-response', 'application/scvp-cv-response'), ('application/scvp-vp-request', 'application/scvp-vp-request'), ('application/scvp-vp-response', 'application/scvp-vp-response'), ('application/sdp', 'application/sdp'), ('application/sep-exi', 'application/sep-exi'), ('application/sep+xml', 'application/sep+xml'), ('application/session-info', 'application/session-info'), ('application/set-payment', 'application/set-payment'), ('application/set-payment-initiation', 'application/set-payment-initiation'), ('application/set-registration', 'application/set-registration'), ('application/set-registration-initiation', 'application/set-registration-initiation'), ('application/sgml', 'application/sgml'), ('application/sgml-open-catalog', 'application/sgml-open-catalog'), ('application/shf+xml', 'application/shf+xml'), ('application/sieve', 'application/sieve'), ('application/simple-filter+xml', 'application/simple-filter+xml'), ('application/simple-message-summary', 'application/simple-message-summary'), ('application/simpleSymbolContainer', 'application/simpleSymbolContainer'), ('application/slate', 'application/slate'), ('application/smil', 'application/smil'), ('application/smil+xml', 'application/smil+xml'), ('application/smpte336m', 'application/smpte336m'), ('application/soap+fastinfoset', 'application/soap+fastinfoset'), ('application/soap+xml', 'application/soap+xml'), ('application/sparql-query', 'application/sparql-query'), ('application/sparql-results+xml', 'application/sparql-results+xml'), ('application/spirits-event+xml', 'application/spirits-event+xml'), ('application/sql', 'application/sql'), ('application/srgs', 'application/srgs'), ('application/srgs+xml', 'application/srgs+xml'), ('application/sru+xml', 'application/sru+xml'), ('application/ssml+xml', 'application/ssml+xml'), ('application/tamp-apex-update', 'application/tamp-apex-update'), ('application/tamp-apex-update-confirm', 'application/tamp-apex-update-confirm'), ('application/tamp-community-update', 'application/tamp-community-update'), ('application/tamp-community-update-confirm', 'application/tamp-community-update-confirm'), ('application/tamp-error', 'application/tamp-error'), ('application/tamp-sequence-adjust', 'application/tamp-sequence-adjust'), ('application/tamp-sequence-adjust-confirm', 'application/tamp-sequence-adjust-confirm'), ('application/tamp-status-query', 'application/tamp-status-query'), ('application/tamp-status-response', 'application/tamp-status-response'), ('application/tamp-update', 'application/tamp-update'), ('application/tamp-update-confirm', 'application/tamp-update-confirm'), ('application/tei+xml', 'application/tei+xml'), ('application/thraud+xml', 'application/thraud+xml'), ('application/timestamp-query', 'application/timestamp-query'), ('application/timestamp-reply', 'application/timestamp-reply'), ('application/timestamped-data', 'application/timestamped-data'), ('application/ttml+xml', 'application/ttml+xml'), ('application/tve-trigger', 'application/tve-trigger'), ('application/ulpfec', 'application/ulpfec'), ('application/urc-grpsheet+xml', 'application/urc-grpsheet+xml'), ('application/urc-ressheet+xml', 'application/urc-ressheet+xml'), ('application/urc-targetdesc+xml', 'application/urc-targetdesc+xml'), ('application/urc-uisocketdesc+xml', 'application/urc-uisocketdesc+xml'), ('application/vcard+json', 'application/vcard+json'), ('application/vcard+xml', 'application/vcard+xml'), ('application/vemmi', 'application/vemmi'), ('application/vnd.3gpp.bsf+xml', 'application/vnd.3gpp.bsf+xml'), ('application/vnd.3gpp.pic-bw-large', 'application/vnd.3gpp.pic-bw-large'), ('application/vnd.3gpp.pic-bw-small', 'application/vnd.3gpp.pic-bw-small'), ('application/vnd.3gpp.pic-bw-var', 'application/vnd.3gpp.pic-bw-var'), ('application/vnd.3gpp.sms', 'application/vnd.3gpp.sms'), ('application/vnd.3gpp2.bcmcsinfo+xml', 'application/vnd.3gpp2.bcmcsinfo+xml'), ('application/vnd.3gpp2.sms', 'application/vnd.3gpp2.sms'), ('application/vnd.3gpp2.tcap', 'application/vnd.3gpp2.tcap'), ('application/vnd.3M.Post-it-Notes', 'application/vnd.3M.Post-it-Notes'), ('application/vnd.accpac.simply.aso', 'application/vnd.accpac.simply.aso'), ('application/vnd.accpac.simply.imp', 'application/vnd.accpac.simply.imp'), ('application/vnd.acucobol', 'application/vnd.acucobol'), ('application/vnd.acucorp', 'application/vnd.acucorp'), ('application/vnd.adobe.flash.movie', 'application/vnd.adobe.flash.movie'), ('application/vnd.adobe.formscentral.fcdt', 'application/vnd.adobe.formscentral.fcdt'), ('application/vnd.adobe.fxp', 'application/vnd.adobe.fxp'), ('application/vnd.adobe.partial-upload', 'application/vnd.adobe.partial-upload'), ('application/vnd.adobe.xdp+xml', 'application/vnd.adobe.xdp+xml'), ('application/vnd.adobe.xfdf', 'application/vnd.adobe.xfdf'), ('application/vnd.aether.imp', 'application/vnd.aether.imp'), ('application/vnd.ah-barcode', 'application/vnd.ah-barcode'), ('application/vnd.ahead.space', 'application/vnd.ahead.space'), ('application/vnd.airzip.filesecure.azf', 'application/vnd.airzip.filesecure.azf'), ('application/vnd.airzip.filesecure.azs', 'application/vnd.airzip.filesecure.azs'), ('application/vnd.americandynamics.acc', 'application/vnd.americandynamics.acc'), ('application/vnd.amiga.ami', 'application/vnd.amiga.ami'), ('application/vnd.amundsen.maze+xml', 'application/vnd.amundsen.maze+xml'), ('application/vnd.anser-web-certificate-issue-initiation', 'application/vnd.anser-web-certificate-issue-initiation'), ('application/vnd.antix.game-component', 'application/vnd.antix.game-component'), ('application/vnd.api+json', 'application/vnd.api+json'), ('application/vnd.apple.mpegurl', 'application/vnd.apple.mpegurl'), ('application/vnd.apple.installer+xml', 'application/vnd.apple.installer+xml'), ('application/vnd.arastra.swi', 'application/vnd.arastra.swi'), ('application/vnd.aristanetworks.swi', 'application/vnd.aristanetworks.swi'), ('application/vnd.astraea-software.iota', 'application/vnd.astraea-software.iota'), ('application/vnd.audiograph', 'application/vnd.audiograph'), ('application/vnd.autopackage', 'application/vnd.autopackage'), ('application/vnd.avistar+xml', 'application/vnd.avistar+xml'), ('application/vnd.balsamiq.bmml+xml', 'application/vnd.balsamiq.bmml+xml'), ('application/vnd.bekitzur-stech+json', 'application/vnd.bekitzur-stech+json'), ('application/vnd.blueice.multipass', 'application/vnd.blueice.multipass'), ('application/vnd.bluetooth.ep.oob', 'application/vnd.bluetooth.ep.oob'), ('application/vnd.bluetooth.le.oob', 'application/vnd.bluetooth.le.oob'), ('application/vnd.bmi', 'application/vnd.bmi'), ('application/vnd.businessobjects', 'application/vnd.businessobjects'), ('application/vnd.cab-jscript', 'application/vnd.cab-jscript'), ('application/vnd.canon-cpdl', 'application/vnd.canon-cpdl'), ('application/vnd.canon-lips', 'application/vnd.canon-lips'), ('application/vnd.cendio.thinlinc.clientconf', 'application/vnd.cendio.thinlinc.clientconf'), ('application/vnd.century-systems.tcp_stream', 'application/vnd.century-systems.tcp_stream'), ('application/vnd.chemdraw+xml', 'application/vnd.chemdraw+xml'), ('application/vnd.chipnuts.karaoke-mmd', 'application/vnd.chipnuts.karaoke-mmd'), ('application/vnd.cinderella', 'application/vnd.cinderella'), ('application/vnd.cirpack.isdn-ext', 'application/vnd.cirpack.isdn-ext'), ('application/vnd.claymore', 'application/vnd.claymore'), ('application/vnd.cloanto.rp9', 'application/vnd.cloanto.rp9'), ('application/vnd.clonk.c4group', 'application/vnd.clonk.c4group'), ('application/vnd.cluetrust.cartomobile-config', 'application/vnd.cluetrust.cartomobile-config'), ('application/vnd.cluetrust.cartomobile-config-pkg', 'application/vnd.cluetrust.cartomobile-config-pkg'), ('application/vnd.collection.doc+json', 'application/vnd.collection.doc+json'), ('application/vnd.collection+json', 'application/vnd.collection+json'), ('application/vnd.collection.next+json', 'application/vnd.collection.next+json'), ('application/vnd.commerce-battelle', 'application/vnd.commerce-battelle'), ('application/vnd.commonspace', 'application/vnd.commonspace'), ('application/vnd.cosmocaller', 'application/vnd.cosmocaller'), ('application/vnd.contact.cmsg', 'application/vnd.contact.cmsg'), ('application/vnd.crick.clicker', 'application/vnd.crick.clicker'), ('application/vnd.crick.clicker.keyboard', 'application/vnd.crick.clicker.keyboard'), ('application/vnd.crick.clicker.palette', 'application/vnd.crick.clicker.palette'), ('application/vnd.crick.clicker.template', 'application/vnd.crick.clicker.template'), ('application/vnd.crick.clicker.wordbank', 'application/vnd.crick.clicker.wordbank'), ('application/vnd.criticaltools.wbs+xml', 'application/vnd.criticaltools.wbs+xml'), ('application/vnd.ctc-posml', 'application/vnd.ctc-posml'), ('application/vnd.ctct.ws+xml', 'application/vnd.ctct.ws+xml'), ('application/vnd.cups-pdf', 'application/vnd.cups-pdf'), ('application/vnd.cups-postscript', 'application/vnd.cups-postscript'), ('application/vnd.cups-ppd', 'application/vnd.cups-ppd'), ('application/vnd.cups-raster', 'application/vnd.cups-raster'), ('application/vnd.cups-raw', 'application/vnd.cups-raw'), ('application/vnd.curl', 'application/vnd.curl'), ('application/vnd.cyan.dean.root+xml', 'application/vnd.cyan.dean.root+xml'), ('application/vnd.cybank', 'application/vnd.cybank'), ('application/vnd.dart', 'application/vnd.dart'), ('application/vnd.data-vision.rdz', 'application/vnd.data-vision.rdz'), ('application/vnd.dece.data', 'application/vnd.dece.data'), ('application/vnd.dece.ttml+xml', 'application/vnd.dece.ttml+xml'), ('application/vnd.dece.unspecified', 'application/vnd.dece.unspecified'), ('application/vnd.dece.zip', 'application/vnd.dece.zip'), ('application/vnd.denovo.fcselayout-link', 'application/vnd.denovo.fcselayout-link'), ('application/vnd.desmume.movie', 'application/vnd.desmume.movie'), ('application/vnd.dir-bi.plate-dl-nosuffix', 'application/vnd.dir-bi.plate-dl-nosuffix'), ('application/vnd.dm.delegation+xml', 'application/vnd.dm.delegation+xml'), ('application/vnd.dna', 'application/vnd.dna'), ('application/vnd.document+json', 'application/vnd.document+json'), ('application/vnd.dolby.mobile.1', 'application/vnd.dolby.mobile.1'), ('application/vnd.dolby.mobile.2', 'application/vnd.dolby.mobile.2'), ('application/vnd.dpgraph', 'application/vnd.dpgraph'), ('application/vnd.dreamfactory', 'application/vnd.dreamfactory'), ('application/vnd.dtg.local', 'application/vnd.dtg.local'), ('application/vnd.dtg.local.flash', 'application/vnd.dtg.local.flash'), ('application/vnd.dtg.local.html', 'application/vnd.dtg.local.html'), ('application/vnd.dvb.ait', 'application/vnd.dvb.ait'), ('application/vnd.dvb.dvbj', 'application/vnd.dvb.dvbj'), ('application/vnd.dvb.esgcontainer', 'application/vnd.dvb.esgcontainer'), ('application/vnd.dvb.ipdcdftnotifaccess', 'application/vnd.dvb.ipdcdftnotifaccess'), ('application/vnd.dvb.ipdcesgaccess', 'application/vnd.dvb.ipdcesgaccess'), ('application/vnd.dvb.ipdcesgaccess2', 'application/vnd.dvb.ipdcesgaccess2'), ('application/vnd.dvb.ipdcesgpdd', 'application/vnd.dvb.ipdcesgpdd'), ('application/vnd.dvb.ipdcroaming', 'application/vnd.dvb.ipdcroaming'), ('application/vnd.dvb.iptv.alfec-base', 'application/vnd.dvb.iptv.alfec-base'), ('application/vnd.dvb.iptv.alfec-enhancement', 'application/vnd.dvb.iptv.alfec-enhancement'), ('application/vnd.dvb.notif-aggregate-root+xml', 'application/vnd.dvb.notif-aggregate-root+xml'), ('application/vnd.dvb.notif-container+xml', 'application/vnd.dvb.notif-container+xml'), ('application/vnd.dvb.notif-generic+xml', 'application/vnd.dvb.notif-generic+xml'), ('application/vnd.dvb.notif-ia-msglist+xml', 'application/vnd.dvb.notif-ia-msglist+xml'), ('application/vnd.dvb.notif-ia-registration-request+xml', 'application/vnd.dvb.notif-ia-registration-request+xml'), ('application/vnd.dvb.notif-ia-registration-response+xml', 'application/vnd.dvb.notif-ia-registration-response+xml'), ('application/vnd.dvb.notif-init+xml', 'application/vnd.dvb.notif-init+xml'), ('application/vnd.dvb.pfr', 'application/vnd.dvb.pfr'), ('application/vnd.dvb.service', 'application/vnd.dvb.service'), ('application/vnd.dxr', 'application/vnd.dxr'), ('application/vnd.dynageo', 'application/vnd.dynageo'), ('application/vnd.easykaraoke.cdgdownload', 'application/vnd.easykaraoke.cdgdownload'), ('application/vnd.ecdis-update', 'application/vnd.ecdis-update'), ('application/vnd.ecowin.chart', 'application/vnd.ecowin.chart'), ('application/vnd.ecowin.filerequest', 'application/vnd.ecowin.filerequest'), ('application/vnd.ecowin.fileupdate', 'application/vnd.ecowin.fileupdate'), ('application/vnd.ecowin.series', 'application/vnd.ecowin.series'), ('application/vnd.ecowin.seriesrequest', 'application/vnd.ecowin.seriesrequest'), ('application/vnd.ecowin.seriesupdate', 'application/vnd.ecowin.seriesupdate'), ('application/vnd.emclient.accessrequest+xml', 'application/vnd.emclient.accessrequest+xml'), ('application/vnd.enliven', 'application/vnd.enliven'), ('application/vnd.eprints.data+xml', 'application/vnd.eprints.data+xml'), ('application/vnd.epson.esf', 'application/vnd.epson.esf'), ('application/vnd.epson.msf', 'application/vnd.epson.msf'), ('application/vnd.epson.quickanime', 'application/vnd.epson.quickanime'), ('application/vnd.epson.salt', 'application/vnd.epson.salt'), ('application/vnd.epson.ssf', 'application/vnd.epson.ssf'), ('application/vnd.ericsson.quickcall', 'application/vnd.ericsson.quickcall'), ('application/vnd.eszigno3+xml', 'application/vnd.eszigno3+xml'), ('application/vnd.etsi.aoc+xml', 'application/vnd.etsi.aoc+xml'), ('application/vnd.etsi.asic-s+zip', 'application/vnd.etsi.asic-s+zip'), ('application/vnd.etsi.asic-e+zip', 'application/vnd.etsi.asic-e+zip'), ('application/vnd.etsi.cug+xml', 'application/vnd.etsi.cug+xml'), ('application/vnd.etsi.iptvcommand+xml', 'application/vnd.etsi.iptvcommand+xml'), ('application/vnd.etsi.iptvdiscovery+xml', 'application/vnd.etsi.iptvdiscovery+xml'), ('application/vnd.etsi.iptvprofile+xml', 'application/vnd.etsi.iptvprofile+xml'), ('application/vnd.etsi.iptvsad-bc+xml', 'application/vnd.etsi.iptvsad-bc+xml'), ('application/vnd.etsi.iptvsad-cod+xml', 'application/vnd.etsi.iptvsad-cod+xml'), ('application/vnd.etsi.iptvsad-npvr+xml', 'application/vnd.etsi.iptvsad-npvr+xml'), ('application/vnd.etsi.iptvservice+xml', 'application/vnd.etsi.iptvservice+xml'), ('application/vnd.etsi.iptvsync+xml', 'application/vnd.etsi.iptvsync+xml'), ('application/vnd.etsi.iptvueprofile+xml', 'application/vnd.etsi.iptvueprofile+xml'), ('application/vnd.etsi.mcid+xml', 'application/vnd.etsi.mcid+xml'), ('application/vnd.etsi.mheg5', 'application/vnd.etsi.mheg5'), ('application/vnd.etsi.overload-control-policy-dataset+xml', 'application/vnd.etsi.overload-control-policy-dataset+xml'), ('application/vnd.etsi.pstn+xml', 'application/vnd.etsi.pstn+xml'), ('application/vnd.etsi.sci+xml', 'application/vnd.etsi.sci+xml'), ('application/vnd.etsi.simservs+xml', 'application/vnd.etsi.simservs+xml'), ('application/vnd.etsi.timestamp-token', 'application/vnd.etsi.timestamp-token'), ('application/vnd.etsi.tsl+xml', 'application/vnd.etsi.tsl+xml'), ('application/vnd.etsi.tsl.der', 'application/vnd.etsi.tsl.der'), ('application/vnd.eudora.data', 'application/vnd.eudora.data'), ('application/vnd.ezpix-album', 'application/vnd.ezpix-album'), ('application/vnd.ezpix-package', 'application/vnd.ezpix-package'), ('application/vnd.f-secure.mobile', 'application/vnd.f-secure.mobile'), ('application/vnd.fdf', 'application/vnd.fdf'), ('application/vnd.fdsn.mseed', 'application/vnd.fdsn.mseed'), ('application/vnd.fdsn.seed', 'application/vnd.fdsn.seed'), ('application/vnd.ffsns', 'application/vnd.ffsns'), ('application/vnd.fints', 'application/vnd.fints'), ('application/vnd.FloGraphIt', 'application/vnd.FloGraphIt'), ('application/vnd.fluxtime.clip', 'application/vnd.fluxtime.clip'), ('application/vnd.font-fontforge-sfd', 'application/vnd.font-fontforge-sfd'), ('application/vnd.framemaker', 'application/vnd.framemaker'), ('application/vnd.frogans.fnc', 'application/vnd.frogans.fnc'), ('application/vnd.frogans.ltf', 'application/vnd.frogans.ltf'), ('application/vnd.fsc.weblaunch', 'application/vnd.fsc.weblaunch'), ('application/vnd.fujitsu.oasys', 'application/vnd.fujitsu.oasys'), ('application/vnd.fujitsu.oasys2', 'application/vnd.fujitsu.oasys2'), ('application/vnd.fujitsu.oasys3', 'application/vnd.fujitsu.oasys3'), ('application/vnd.fujitsu.oasysgp', 'application/vnd.fujitsu.oasysgp'), ('application/vnd.fujitsu.oasysprs', 'application/vnd.fujitsu.oasysprs'), ('application/vnd.fujixerox.ART4', 'application/vnd.fujixerox.ART4'), ('application/vnd.fujixerox.ART-EX', 'application/vnd.fujixerox.ART-EX'), ('application/vnd.fujixerox.ddd', 'application/vnd.fujixerox.ddd'), ('application/vnd.fujixerox.docuworks', 'application/vnd.fujixerox.docuworks'), ('application/vnd.fujixerox.docuworks.binder', 'application/vnd.fujixerox.docuworks.binder'), ('application/vnd.fujixerox.docuworks.container', 'application/vnd.fujixerox.docuworks.container'), ('application/vnd.fujixerox.HBPL', 'application/vnd.fujixerox.HBPL'), ('application/vnd.fut-misnet', 'application/vnd.fut-misnet'), ('application/vnd.fuzzysheet', 'application/vnd.fuzzysheet'), ('application/vnd.genomatix.tuxedo', 'application/vnd.genomatix.tuxedo'), ('application/vnd.geocube+xml', 'application/vnd.geocube+xml'), ('application/vnd.geogebra.file', 'application/vnd.geogebra.file'), ('application/vnd.geogebra.tool', 'application/vnd.geogebra.tool'), ('application/vnd.geometry-explorer', 'application/vnd.geometry-explorer'), ('application/vnd.geonext', 'application/vnd.geonext'), ('application/vnd.geoplan', 'application/vnd.geoplan'), ('application/vnd.geospace', 'application/vnd.geospace'), ('application/vnd.globalplatform.card-content-mgt', 'application/vnd.globalplatform.card-content-mgt'), ('application/vnd.globalplatform.card-content-mgt-response', 'application/vnd.globalplatform.card-content-mgt-response'), ('application/vnd.gmx', 'application/vnd.gmx'), ('application/vnd.google-earth.kml+xml', 'application/vnd.google-earth.kml+xml'), ('application/vnd.google-earth.kmz', 'application/vnd.google-earth.kmz'), ('application/vnd.grafeq', 'application/vnd.grafeq'), ('application/vnd.gridmp', 'application/vnd.gridmp'), ('application/vnd.groove-account', 'application/vnd.groove-account'), ('application/vnd.groove-help', 'application/vnd.groove-help'), ('application/vnd.groove-identity-message', 'application/vnd.groove-identity-message'), ('application/vnd.groove-injector', 'application/vnd.groove-injector'), ('application/vnd.groove-tool-message', 'application/vnd.groove-tool-message'), ('application/vnd.groove-tool-template', 'application/vnd.groove-tool-template'), ('application/vnd.groove-vcard', 'application/vnd.groove-vcard'), ('application/vnd.hal+json', 'application/vnd.hal+json'), ('application/vnd.hal+xml', 'application/vnd.hal+xml'), ('application/vnd.HandHeld-Entertainment+xml', 'application/vnd.HandHeld-Entertainment+xml'), ('application/vnd.hbci', 'application/vnd.hbci'), ('application/vnd.hcl-bireports', 'application/vnd.hcl-bireports'), ('application/vnd.heroku+json', 'application/vnd.heroku+json'), ('application/vnd.hhe.lesson-player', 'application/vnd.hhe.lesson-player'), ('application/vnd.hp-HPGL', 'application/vnd.hp-HPGL'), ('application/vnd.hp-hpid', 'application/vnd.hp-hpid'), ('application/vnd.hp-hps', 'application/vnd.hp-hps'), ('application/vnd.hp-jlyt', 'application/vnd.hp-jlyt'), ('application/vnd.hp-PCL', 'application/vnd.hp-PCL'), ('application/vnd.hp-PCLXL', 'application/vnd.hp-PCLXL'), ('application/vnd.httphone', 'application/vnd.httphone'), ('application/vnd.hydrostatix.sof-data', 'application/vnd.hydrostatix.sof-data'), ('application/vnd.hzn-3d-crossword', 'application/vnd.hzn-3d-crossword'), ('application/vnd.ibm.afplinedata', 'application/vnd.ibm.afplinedata'), ('application/vnd.ibm.electronic-media', 'application/vnd.ibm.electronic-media'), ('application/vnd.ibm.MiniPay', 'application/vnd.ibm.MiniPay'), ('application/vnd.ibm.modcap', 'application/vnd.ibm.modcap'), ('application/vnd.ibm.rights-management', 'application/vnd.ibm.rights-management'), ('application/vnd.ibm.secure-container', 'application/vnd.ibm.secure-container'), ('application/vnd.iccprofile', 'application/vnd.iccprofile'), ('application/vnd.ieee.1905', 'application/vnd.ieee.1905'), ('application/vnd.igloader', 'application/vnd.igloader'), ('application/vnd.immervision-ivp', 'application/vnd.immervision-ivp'), ('application/vnd.immervision-ivu', 'application/vnd.immervision-ivu'), ('application/vnd.informedcontrol.rms+xml', 'application/vnd.informedcontrol.rms+xml'), ('application/vnd.infotech.project', 'application/vnd.infotech.project'), ('application/vnd.infotech.project+xml', 'application/vnd.infotech.project+xml'), ('application/vnd.informix-visionary', 'application/vnd.informix-visionary'), ('application/vnd.innopath.wamp.notification', 'application/vnd.innopath.wamp.notification'), ('application/vnd.insors.igm', 'application/vnd.insors.igm'), ('application/vnd.intercon.formnet', 'application/vnd.intercon.formnet'), ('application/vnd.intergeo', 'application/vnd.intergeo'), ('application/vnd.intertrust.digibox', 'application/vnd.intertrust.digibox'), ('application/vnd.intertrust.nncp', 'application/vnd.intertrust.nncp'), ('application/vnd.intu.qbo', 'application/vnd.intu.qbo'), ('application/vnd.intu.qfx', 'application/vnd.intu.qfx'), ('application/vnd.iptc.g2.catalogitem+xml', 'application/vnd.iptc.g2.catalogitem+xml'), ('application/vnd.iptc.g2.conceptitem+xml', 'application/vnd.iptc.g2.conceptitem+xml'), ('application/vnd.iptc.g2.knowledgeitem+xml', 'application/vnd.iptc.g2.knowledgeitem+xml'), ('application/vnd.iptc.g2.newsitem+xml', 'application/vnd.iptc.g2.newsitem+xml'), ('application/vnd.iptc.g2.newsmessage+xml', 'application/vnd.iptc.g2.newsmessage+xml'), ('application/vnd.iptc.g2.packageitem+xml', 'application/vnd.iptc.g2.packageitem+xml'), ('application/vnd.iptc.g2.planningitem+xml', 'application/vnd.iptc.g2.planningitem+xml'), ('application/vnd.ipunplugged.rcprofile', 'application/vnd.ipunplugged.rcprofile'), ('application/vnd.irepository.package+xml', 'application/vnd.irepository.package+xml'), ('application/vnd.is-xpr', 'application/vnd.is-xpr'), ('application/vnd.isac.fcs', 'application/vnd.isac.fcs'), ('application/vnd.jam', 'application/vnd.jam'), ('application/vnd.japannet-directory-service', 'application/vnd.japannet-directory-service'), ('application/vnd.japannet-jpnstore-wakeup', 'application/vnd.japannet-jpnstore-wakeup'), ('application/vnd.japannet-payment-wakeup', 'application/vnd.japannet-payment-wakeup'), ('application/vnd.japannet-registration', 'application/vnd.japannet-registration'), ('application/vnd.japannet-registration-wakeup', 'application/vnd.japannet-registration-wakeup'), ('application/vnd.japannet-setstore-wakeup', 'application/vnd.japannet-setstore-wakeup'), ('application/vnd.japannet-verification', 'application/vnd.japannet-verification'), ('application/vnd.japannet-verification-wakeup', 'application/vnd.japannet-verification-wakeup'), ('application/vnd.jcp.javame.midlet-rms', 'application/vnd.jcp.javame.midlet-rms'), ('application/vnd.jisp', 'application/vnd.jisp'), ('application/vnd.joost.joda-archive', 'application/vnd.joost.joda-archive'), ('application/vnd.jsk.isdn-ngn', 'application/vnd.jsk.isdn-ngn'), ('application/vnd.kahootz', 'application/vnd.kahootz'), ('application/vnd.kde.karbon', 'application/vnd.kde.karbon'), ('application/vnd.kde.kchart', 'application/vnd.kde.kchart'), ('application/vnd.kde.kformula', 'application/vnd.kde.kformula'), ('application/vnd.kde.kivio', 'application/vnd.kde.kivio'), ('application/vnd.kde.kontour', 'application/vnd.kde.kontour'), ('application/vnd.kde.kpresenter', 'application/vnd.kde.kpresenter'), ('application/vnd.kde.kspread', 'application/vnd.kde.kspread'), ('application/vnd.kde.kword', 'application/vnd.kde.kword'), ('application/vnd.kenameaapp', 'application/vnd.kenameaapp'), ('application/vnd.kidspiration', 'application/vnd.kidspiration'), ('application/vnd.Kinar', 'application/vnd.Kinar'), ('application/vnd.koan', 'application/vnd.koan'), ('application/vnd.kodak-descriptor', 'application/vnd.kodak-descriptor'), ('application/vnd.las.las+xml', 'application/vnd.las.las+xml'), ('application/vnd.liberty-request+xml', 'application/vnd.liberty-request+xml'), ('application/vnd.llamagraphics.life-balance.desktop', 'application/vnd.llamagraphics.life-balance.desktop'), ('application/vnd.llamagraphics.life-balance.exchange+xml', 'application/vnd.llamagraphics.life-balance.exchange+xml'), ('application/vnd.lotus-1-2-3', 'application/vnd.lotus-1-2-3'), ('application/vnd.lotus-approach', 'application/vnd.lotus-approach'), ('application/vnd.lotus-freelance', 'application/vnd.lotus-freelance'), ('application/vnd.lotus-notes', 'application/vnd.lotus-notes'), ('application/vnd.lotus-organizer', 'application/vnd.lotus-organizer'), ('application/vnd.lotus-screencam', 'application/vnd.lotus-screencam'), ('application/vnd.lotus-wordpro', 'application/vnd.lotus-wordpro'), ('application/vnd.macports.portpkg', 'application/vnd.macports.portpkg'), ('application/vnd.marlin.drm.actiontoken+xml', 'application/vnd.marlin.drm.actiontoken+xml'), ('application/vnd.marlin.drm.conftoken+xml', 'application/vnd.marlin.drm.conftoken+xml'), ('application/vnd.marlin.drm.license+xml', 'application/vnd.marlin.drm.license+xml'), ('application/vnd.marlin.drm.mdcf', 'application/vnd.marlin.drm.mdcf'), ('application/vnd.mason+json', 'application/vnd.mason+json'), ('application/vnd.mcd', 'application/vnd.mcd'), ('application/vnd.medcalcdata', 'application/vnd.medcalcdata'), ('application/vnd.mediastation.cdkey', 'application/vnd.mediastation.cdkey'), ('application/vnd.meridian-slingshot', 'application/vnd.meridian-slingshot'), ('application/vnd.MFER', 'application/vnd.MFER'), ('application/vnd.mfmp', 'application/vnd.mfmp'), ('application/vnd.micrografx.flo', 'application/vnd.micrografx.flo'), ('application/vnd.micrografx.igx', 'application/vnd.micrografx.igx'), ('application/vnd.mif', 'application/vnd.mif'), ('application/vnd.minisoft-hp3000-save', 'application/vnd.minisoft-hp3000-save'), ('application/vnd.mitsubishi.misty-guard.trustweb', 'application/vnd.mitsubishi.misty-guard.trustweb'), ('application/vnd.Mobius.DAF', 'application/vnd.Mobius.DAF'), ('application/vnd.Mobius.DIS', 'application/vnd.Mobius.DIS'), ('application/vnd.Mobius.MBK', 'application/vnd.Mobius.MBK'), ('application/vnd.Mobius.MQY', 'application/vnd.Mobius.MQY'), ('application/vnd.Mobius.MSL', 'application/vnd.Mobius.MSL'), ('application/vnd.Mobius.PLC', 'application/vnd.Mobius.PLC'), ('application/vnd.Mobius.TXF', 'application/vnd.Mobius.TXF'), ('application/vnd.mophun.application', 'application/vnd.mophun.application'), ('application/vnd.mophun.certificate', 'application/vnd.mophun.certificate'), ('application/vnd.motorola.flexsuite', 'application/vnd.motorola.flexsuite'), ('application/vnd.motorola.flexsuite.adsi', 'application/vnd.motorola.flexsuite.adsi'), ('application/vnd.motorola.flexsuite.fis', 'application/vnd.motorola.flexsuite.fis'), ('application/vnd.motorola.flexsuite.gotap', 'application/vnd.motorola.flexsuite.gotap'), ('application/vnd.motorola.flexsuite.kmr', 'application/vnd.motorola.flexsuite.kmr'), ('application/vnd.motorola.flexsuite.ttc', 'application/vnd.motorola.flexsuite.ttc'), ('application/vnd.motorola.flexsuite.wem', 'application/vnd.motorola.flexsuite.wem'), ('application/vnd.motorola.iprm', 'application/vnd.motorola.iprm'), ('application/vnd.mozilla.xul+xml', 'application/vnd.mozilla.xul+xml'), ('application/vnd.ms-artgalry', 'application/vnd.ms-artgalry'), ('application/vnd.ms-asf', 'application/vnd.ms-asf'), ('application/vnd.ms-cab-compressed', 'application/vnd.ms-cab-compressed'), ('application/vnd.mseq', 'application/vnd.mseq'), ('application/vnd.ms-excel', 'application/vnd.ms-excel'), ('application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12'), ('application/vnd.ms-excel.sheet.binary.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'), ('application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.sheet.macroEnabled.12'), ('application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12'), ('application/vnd.ms-fontobject', 'application/vnd.ms-fontobject'), ('application/vnd.ms-htmlhelp', 'application/vnd.ms-htmlhelp'), ('application/vnd.ms-ims', 'application/vnd.ms-ims'), ('application/vnd.ms-lrm', 'application/vnd.ms-lrm'), ('application/vnd.ms-office.activeX+xml', 'application/vnd.ms-office.activeX+xml'), ('application/vnd.ms-officetheme', 'application/vnd.ms-officetheme'), ('application/vnd.ms-playready.initiator+xml', 'application/vnd.ms-playready.initiator+xml'), ('application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint'), ('application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.addin.macroEnabled.12'), ('application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'), ('application/vnd.ms-powerpoint.slide.macroEnabled.12', 'application/vnd.ms-powerpoint.slide.macroEnabled.12'), ('application/vnd.ms-powerpoint.slideshow.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'), ('application/vnd.ms-powerpoint.template.macroEnabled.12', 'application/vnd.ms-powerpoint.template.macroEnabled.12'), ('application/vnd.ms-project', 'application/vnd.ms-project'), ('application/vnd.ms-tnef', 'application/vnd.ms-tnef'), ('application/vnd.ms-windows.printerpairing', 'application/vnd.ms-windows.printerpairing'), ('application/vnd.ms-wmdrm.lic-chlg-req', 'application/vnd.ms-wmdrm.lic-chlg-req'), ('application/vnd.ms-wmdrm.lic-resp', 'application/vnd.ms-wmdrm.lic-resp'), ('application/vnd.ms-wmdrm.meter-chlg-req', 'application/vnd.ms-wmdrm.meter-chlg-req'), ('application/vnd.ms-wmdrm.meter-resp', 'application/vnd.ms-wmdrm.meter-resp'), ('application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.document.macroEnabled.12'), ('application/vnd.ms-word.template.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'), ('application/vnd.ms-works', 'application/vnd.ms-works'), ('application/vnd.ms-wpl', 'application/vnd.ms-wpl'), ('application/vnd.ms-xpsdocument', 'application/vnd.ms-xpsdocument'), ('application/vnd.msign', 'application/vnd.msign'), ('application/vnd.multiad.creator', 'application/vnd.multiad.creator'), ('application/vnd.multiad.creator.cif', 'application/vnd.multiad.creator.cif'), ('application/vnd.musician', 'application/vnd.musician'), ('application/vnd.music-niff', 'application/vnd.music-niff'), ('application/vnd.muvee.style', 'application/vnd.muvee.style'), ('application/vnd.mynfc', 'application/vnd.mynfc'), ('application/vnd.ncd.control', 'application/vnd.ncd.control'), ('application/vnd.ncd.reference', 'application/vnd.ncd.reference'), ('application/vnd.nervana', 'application/vnd.nervana'), ('application/vnd.netfpx', 'application/vnd.netfpx'), ('application/vnd.neurolanguage.nlu', 'application/vnd.neurolanguage.nlu'), ('application/vnd.nintendo.snes.rom', 'application/vnd.nintendo.snes.rom'), ('application/vnd.nintendo.nitro.rom', 'application/vnd.nintendo.nitro.rom'), ('application/vnd.nitf', 'application/vnd.nitf'), ('application/vnd.noblenet-directory', 'application/vnd.noblenet-directory'), ('application/vnd.noblenet-sealer', 'application/vnd.noblenet-sealer'), ('application/vnd.noblenet-web', 'application/vnd.noblenet-web'), ('application/vnd.nokia.catalogs', 'application/vnd.nokia.catalogs'), ('application/vnd.nokia.conml+wbxml', 'application/vnd.nokia.conml+wbxml'), ('application/vnd.nokia.conml+xml', 'application/vnd.nokia.conml+xml'), ('application/vnd.nokia.iptv.config+xml', 'application/vnd.nokia.iptv.config+xml'), ('application/vnd.nokia.iSDS-radio-presets', 'application/vnd.nokia.iSDS-radio-presets'), ('application/vnd.nokia.landmark+wbxml', 'application/vnd.nokia.landmark+wbxml'), ('application/vnd.nokia.landmark+xml', 'application/vnd.nokia.landmark+xml'), ('application/vnd.nokia.landmarkcollection+xml', 'application/vnd.nokia.landmarkcollection+xml'), ('application/vnd.nokia.ncd', 'application/vnd.nokia.ncd'), ('application/vnd.nokia.n-gage.ac+xml', 'application/vnd.nokia.n-gage.ac+xml'), ('application/vnd.nokia.n-gage.data', 'application/vnd.nokia.n-gage.data'), ('application/vnd.nokia.n-gage.symbian.install', 'application/vnd.nokia.n-gage.symbian.install'), ('application/vnd.nokia.pcd+wbxml', 'application/vnd.nokia.pcd+wbxml'), ('application/vnd.nokia.pcd+xml', 'application/vnd.nokia.pcd+xml'), ('application/vnd.nokia.radio-preset', 'application/vnd.nokia.radio-preset'), ('application/vnd.nokia.radio-presets', 'application/vnd.nokia.radio-presets'), ('application/vnd.novadigm.EDM', 'application/vnd.novadigm.EDM'), ('application/vnd.novadigm.EDX', 'application/vnd.novadigm.EDX'), ('application/vnd.novadigm.EXT', 'application/vnd.novadigm.EXT'), ('application/vnd.ntt-local.content-share', 'application/vnd.ntt-local.content-share'), ('application/vnd.ntt-local.file-transfer', 'application/vnd.ntt-local.file-transfer'), ('application/vnd.ntt-local.sip-ta_remote', 'application/vnd.ntt-local.sip-ta_remote'), ('application/vnd.ntt-local.sip-ta_tcp_stream', 'application/vnd.ntt-local.sip-ta_tcp_stream'), ('application/vnd.oasis.opendocument.chart', 'application/vnd.oasis.opendocument.chart'), ('application/vnd.oasis.opendocument.chart-template', 'application/vnd.oasis.opendocument.chart-template'), ('application/vnd.oasis.opendocument.database', 'application/vnd.oasis.opendocument.database'), ('application/vnd.oasis.opendocument.formula', 'application/vnd.oasis.opendocument.formula'), ('application/vnd.oasis.opendocument.formula-template', 'application/vnd.oasis.opendocument.formula-template'), ('application/vnd.oasis.opendocument.graphics', 'application/vnd.oasis.opendocument.graphics'), ('application/vnd.oasis.opendocument.graphics-template', 'application/vnd.oasis.opendocument.graphics-template'), ('application/vnd.oasis.opendocument.image', 'application/vnd.oasis.opendocument.image'), ('application/vnd.oasis.opendocument.image-template', 'application/vnd.oasis.opendocument.image-template'), ('application/vnd.oasis.opendocument.presentation', 'application/vnd.oasis.opendocument.presentation'), ('application/vnd.oasis.opendocument.presentation-template', 'application/vnd.oasis.opendocument.presentation-template'), ('application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.spreadsheet'), ('application/vnd.oasis.opendocument.spreadsheet-template', 'application/vnd.oasis.opendocument.spreadsheet-template'), ('application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.text'), ('application/vnd.oasis.opendocument.text-master', 'application/vnd.oasis.opendocument.text-master'), ('application/vnd.oasis.opendocument.text-template', 'application/vnd.oasis.opendocument.text-template'), ('application/vnd.oasis.opendocument.text-web', 'application/vnd.oasis.opendocument.text-web'), ('application/vnd.obn', 'application/vnd.obn'), ('application/vnd.oftn.l10n+json', 'application/vnd.oftn.l10n+json'), ('application/vnd.oipf.contentaccessdownload+xml', 'application/vnd.oipf.contentaccessdownload+xml'), ('application/vnd.oipf.contentaccessstreaming+xml', 'application/vnd.oipf.contentaccessstreaming+xml'), ('application/vnd.oipf.cspg-hexbinary', 'application/vnd.oipf.cspg-hexbinary'), ('application/vnd.oipf.dae.svg+xml', 'application/vnd.oipf.dae.svg+xml'), ('application/vnd.oipf.dae.xhtml+xml', 'application/vnd.oipf.dae.xhtml+xml'), ('application/vnd.oipf.mippvcontrolmessage+xml', 'application/vnd.oipf.mippvcontrolmessage+xml'), ('application/vnd.oipf.pae.gem', 'application/vnd.oipf.pae.gem'), ('application/vnd.oipf.spdiscovery+xml', 'application/vnd.oipf.spdiscovery+xml'), ('application/vnd.oipf.spdlist+xml', 'application/vnd.oipf.spdlist+xml'), ('application/vnd.oipf.ueprofile+xml', 'application/vnd.oipf.ueprofile+xml'), ('application/vnd.oipf.userprofile+xml', 'application/vnd.oipf.userprofile+xml'), ('application/vnd.olpc-sugar', 'application/vnd.olpc-sugar'), ('application/vnd.oma.bcast.associated-procedure-parameter+xml', 'application/vnd.oma.bcast.associated-procedure-parameter+xml'), ('application/vnd.oma.bcast.drm-trigger+xml', 'application/vnd.oma.bcast.drm-trigger+xml'), ('application/vnd.oma.bcast.imd+xml', 'application/vnd.oma.bcast.imd+xml'), ('application/vnd.oma.bcast.ltkm', 'application/vnd.oma.bcast.ltkm'), ('application/vnd.oma.bcast.notification+xml', 'application/vnd.oma.bcast.notification+xml'), ('application/vnd.oma.bcast.provisioningtrigger', 'application/vnd.oma.bcast.provisioningtrigger'), ('application/vnd.oma.bcast.sgboot', 'application/vnd.oma.bcast.sgboot'), ('application/vnd.oma.bcast.sgdd+xml', 'application/vnd.oma.bcast.sgdd+xml'), ('application/vnd.oma.bcast.sgdu', 'application/vnd.oma.bcast.sgdu'), ('application/vnd.oma.bcast.simple-symbol-container', 'application/vnd.oma.bcast.simple-symbol-container'), ('application/vnd.oma.bcast.smartcard-trigger+xml', 'application/vnd.oma.bcast.smartcard-trigger+xml'), ('application/vnd.oma.bcast.sprov+xml', 'application/vnd.oma.bcast.sprov+xml'), ('application/vnd.oma.bcast.stkm', 'application/vnd.oma.bcast.stkm'), ('application/vnd.oma.cab-address-book+xml', 'application/vnd.oma.cab-address-book+xml'), ('application/vnd.oma.cab-feature-handler+xml', 'application/vnd.oma.cab-feature-handler+xml'), ('application/vnd.oma.cab-pcc+xml', 'application/vnd.oma.cab-pcc+xml'), ('application/vnd.oma.cab-subs-invite+xml', 'application/vnd.oma.cab-subs-invite+xml'), ('application/vnd.oma.cab-user-prefs+xml', 'application/vnd.oma.cab-user-prefs+xml'), ('application/vnd.oma.dcd', 'application/vnd.oma.dcd'), ('application/vnd.oma.dcdc', 'application/vnd.oma.dcdc'), ('application/vnd.oma.dd2+xml', 'application/vnd.oma.dd2+xml'), ('application/vnd.oma.drm.risd+xml', 'application/vnd.oma.drm.risd+xml'), ('application/vnd.oma.group-usage-list+xml', 'application/vnd.oma.group-usage-list+xml'), ('application/vnd.oma.pal+xml', 'application/vnd.oma.pal+xml'), ('application/vnd.oma.poc.detailed-progress-report+xml', 'application/vnd.oma.poc.detailed-progress-report+xml'), ('application/vnd.oma.poc.final-report+xml', 'application/vnd.oma.poc.final-report+xml'), ('application/vnd.oma.poc.groups+xml', 'application/vnd.oma.poc.groups+xml'), ('application/vnd.oma.poc.invocation-descriptor+xml', 'application/vnd.oma.poc.invocation-descriptor+xml'), ('application/vnd.oma.poc.optimized-progress-report+xml', 'application/vnd.oma.poc.optimized-progress-report+xml'), ('application/vnd.oma.push', 'application/vnd.oma.push'), ('application/vnd.oma.scidm.messages+xml', 'application/vnd.oma.scidm.messages+xml'), ('application/vnd.oma.xcap-directory+xml', 'application/vnd.oma.xcap-directory+xml'), ('application/vnd.omads-email+xml', 'application/vnd.omads-email+xml'), ('application/vnd.omads-file+xml', 'application/vnd.omads-file+xml'), ('application/vnd.omads-folder+xml', 'application/vnd.omads-folder+xml'), ('application/vnd.omaloc-supl-init', 'application/vnd.omaloc-supl-init'), ('application/vnd.oma-scws-config', 'application/vnd.oma-scws-config'), ('application/vnd.oma-scws-http-request', 'application/vnd.oma-scws-http-request'), ('application/vnd.oma-scws-http-response', 'application/vnd.oma-scws-http-response'), ('application/vnd.openeye.oeb', 'application/vnd.openeye.oeb'), ('application/vnd.openxmlformats-officedocument.custom-properties+xml', 'application/vnd.openxmlformats-officedocument.custom-properties+xml'), ('application/vnd.openxmlformats-officedocument.customXmlProperties+xml', 'application/vnd.openxmlformats-officedocument.customXmlProperties+xml'), ('application/vnd.openxmlformats-officedocument.drawing+xml', 'application/vnd.openxmlformats-officedocument.drawing+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.chart+xml', 'application/vnd.openxmlformats-officedocument.drawingml.chart+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml', 'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml'), ('application/vnd.openxmlformats-officedocument.extended-properties+xml', 'application/vnd.openxmlformats-officedocument.extended-properties+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml', 'application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.comments+xml', 'application/vnd.openxmlformats-officedocument.presentationml.comments+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml', 'application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'), ('application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.presProps+xml', 'application/vnd.openxmlformats-officedocument.presentationml.presProps+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slide', 'application/vnd.openxmlformats-officedocument.presentationml.slide'), ('application/vnd.openxmlformats-officedocument.presentationml.slide+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slide+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'), ('application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml', 'application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.tags+xml', 'application/vnd.openxmlformats-officedocument.presentationml.tags+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.template'), ('application/vnd.openxmlformats-officedocument.presentationml.template.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml', 'application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'), ('application/vnd.openxmlformats-officedocument.theme+xml', 'application/vnd.openxmlformats-officedocument.theme+xml'), ('application/vnd.openxmlformats-officedocument.themeOverride+xml', 'application/vnd.openxmlformats-officedocument.themeOverride+xml'), ('application/vnd.openxmlformats-officedocument.vmlDrawing', 'application/vnd.openxmlformats-officedocument.vmlDrawing'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml'), ('application/vnd.openxmlformats-package.core-properties+xml', 'application/vnd.openxmlformats-package.core-properties+xml'), ('application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml', 'application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml'), ('application/vnd.openxmlformats-package.relationships+xml', 'application/vnd.openxmlformats-package.relationships+xml'), ('application/vnd.orange.indata', 'application/vnd.orange.indata'), ('application/vnd.osa.netdeploy', 'application/vnd.osa.netdeploy'), ('application/vnd.osgeo.mapguide.package', 'application/vnd.osgeo.mapguide.package'), ('application/vnd.osgi.bundle', 'application/vnd.osgi.bundle'), ('application/vnd.osgi.dp', 'application/vnd.osgi.dp'), ('application/vnd.osgi.subsystem', 'application/vnd.osgi.subsystem'), ('application/vnd.otps.ct-kip+xml', 'application/vnd.otps.ct-kip+xml'), ('application/vnd.palm', 'application/vnd.palm'), ('application/vnd.paos.xml', 'application/vnd.paos.xml'), ('application/vnd.pawaafile', 'application/vnd.pawaafile'), ('application/vnd.pcos', 'application/vnd.pcos'), ('application/vnd.pg.format', 'application/vnd.pg.format'), ('application/vnd.pg.osasli', 'application/vnd.pg.osasli'), ('application/vnd.piaccess.application-licence', 'application/vnd.piaccess.application-licence'), ('application/vnd.picsel', 'application/vnd.picsel'), ('application/vnd.pmi.widget', 'application/vnd.pmi.widget'), ('application/vnd.poc.group-advertisement+xml', 'application/vnd.poc.group-advertisement+xml'), ('application/vnd.pocketlearn', 'application/vnd.pocketlearn'), ('application/vnd.powerbuilder6', 'application/vnd.powerbuilder6'), ('application/vnd.powerbuilder6-s', 'application/vnd.powerbuilder6-s'), ('application/vnd.powerbuilder7', 'application/vnd.powerbuilder7'), ('application/vnd.powerbuilder75', 'application/vnd.powerbuilder75'), ('application/vnd.powerbuilder75-s', 'application/vnd.powerbuilder75-s'), ('application/vnd.powerbuilder7-s', 'application/vnd.powerbuilder7-s'), ('application/vnd.preminet', 'application/vnd.preminet'), ('application/vnd.previewsystems.box', 'application/vnd.previewsystems.box'), ('application/vnd.proteus.magazine', 'application/vnd.proteus.magazine'), ('application/vnd.publishare-delta-tree', 'application/vnd.publishare-delta-tree'), ('application/vnd.pvi.ptid1', 'application/vnd.pvi.ptid1'), ('application/vnd.pwg-multiplexed', 'application/vnd.pwg-multiplexed'), ('application/vnd.pwg-xhtml-print+xml', 'application/vnd.pwg-xhtml-print+xml'), ('application/vnd.qualcomm.brew-app-res', 'application/vnd.qualcomm.brew-app-res'), ('application/vnd.Quark.QuarkXPress', 'application/vnd.Quark.QuarkXPress'), ('application/vnd.quobject-quoxdocument', 'application/vnd.quobject-quoxdocument'), ('application/vnd.radisys.moml+xml', 'application/vnd.radisys.moml+xml'), ('application/vnd.radisys.msml-audit-conf+xml', 'application/vnd.radisys.msml-audit-conf+xml'), ('application/vnd.radisys.msml-audit-conn+xml', 'application/vnd.radisys.msml-audit-conn+xml'), ('application/vnd.radisys.msml-audit-dialog+xml', 'application/vnd.radisys.msml-audit-dialog+xml'), ('application/vnd.radisys.msml-audit-stream+xml', 'application/vnd.radisys.msml-audit-stream+xml'), ('application/vnd.radisys.msml-audit+xml', 'application/vnd.radisys.msml-audit+xml'), ('application/vnd.radisys.msml-conf+xml', 'application/vnd.radisys.msml-conf+xml'), ('application/vnd.radisys.msml-dialog-base+xml', 'application/vnd.radisys.msml-dialog-base+xml'), ('application/vnd.radisys.msml-dialog-fax-detect+xml', 'application/vnd.radisys.msml-dialog-fax-detect+xml'), ('application/vnd.radisys.msml-dialog-fax-sendrecv+xml', 'application/vnd.radisys.msml-dialog-fax-sendrecv+xml'), ('application/vnd.radisys.msml-dialog-group+xml', 'application/vnd.radisys.msml-dialog-group+xml'), ('application/vnd.radisys.msml-dialog-speech+xml', 'application/vnd.radisys.msml-dialog-speech+xml'), ('application/vnd.radisys.msml-dialog-transform+xml', 'application/vnd.radisys.msml-dialog-transform+xml'), ('application/vnd.radisys.msml-dialog+xml', 'application/vnd.radisys.msml-dialog+xml'), ('application/vnd.radisys.msml+xml', 'application/vnd.radisys.msml+xml'), ('application/vnd.rainstor.data', 'application/vnd.rainstor.data'), ('application/vnd.rapid', 'application/vnd.rapid'), ('application/vnd.realvnc.bed', 'application/vnd.realvnc.bed'), ('application/vnd.recordare.musicxml', 'application/vnd.recordare.musicxml'), ('application/vnd.recordare.musicxml+xml', 'application/vnd.recordare.musicxml+xml'), ('application/vnd.RenLearn.rlprint', 'application/vnd.RenLearn.rlprint'), ('application/vnd.rig.cryptonote', 'application/vnd.rig.cryptonote'), ('application/vnd.route66.link66+xml', 'application/vnd.route66.link66+xml'), ('application/vnd.rs-274x', 'application/vnd.rs-274x'), ('application/vnd.ruckus.download', 'application/vnd.ruckus.download'), ('application/vnd.s3sms', 'application/vnd.s3sms'), ('application/vnd.sailingtracker.track', 'application/vnd.sailingtracker.track'), ('application/vnd.sbm.cid', 'application/vnd.sbm.cid'), ('application/vnd.sbm.mid2', 'application/vnd.sbm.mid2'), ('application/vnd.scribus', 'application/vnd.scribus'), ('application/vnd.sealed.3df', 'application/vnd.sealed.3df'), ('application/vnd.sealed.csf', 'application/vnd.sealed.csf'), ('application/vnd.sealed.doc', 'application/vnd.sealed.doc'), ('application/vnd.sealed.eml', 'application/vnd.sealed.eml'), ('application/vnd.sealed.mht', 'application/vnd.sealed.mht'), ('application/vnd.sealed.net', 'application/vnd.sealed.net'), ('application/vnd.sealed.ppt', 'application/vnd.sealed.ppt'), ('application/vnd.sealed.tiff', 'application/vnd.sealed.tiff'), ('application/vnd.sealed.xls', 'application/vnd.sealed.xls'), ('application/vnd.sealedmedia.softseal.html', 'application/vnd.sealedmedia.softseal.html'), ('application/vnd.sealedmedia.softseal.pdf', 'application/vnd.sealedmedia.softseal.pdf'), ('application/vnd.seemail', 'application/vnd.seemail'), ('application/vnd.sema', 'application/vnd.sema'), ('application/vnd.semd', 'application/vnd.semd'), ('application/vnd.semf', 'application/vnd.semf'), ('application/vnd.shana.informed.formdata', 'application/vnd.shana.informed.formdata'), ('application/vnd.shana.informed.formtemplate', 'application/vnd.shana.informed.formtemplate'), ('application/vnd.shana.informed.interchange', 'application/vnd.shana.informed.interchange'), ('application/vnd.shana.informed.package', 'application/vnd.shana.informed.package'), ('application/vnd.SimTech-MindMapper', 'application/vnd.SimTech-MindMapper'), ('application/vnd.siren+json', 'application/vnd.siren+json'), ('application/vnd.smaf', 'application/vnd.smaf'), ('application/vnd.smart.notebook', 'application/vnd.smart.notebook'), ('application/vnd.smart.teacher', 'application/vnd.smart.teacher'), ('application/vnd.software602.filler.form+xml', 'application/vnd.software602.filler.form+xml'), ('application/vnd.software602.filler.form-xml-zip', 'application/vnd.software602.filler.form-xml-zip'), ('application/vnd.solent.sdkm+xml', 'application/vnd.solent.sdkm+xml'), ('application/vnd.spotfire.dxp', 'application/vnd.spotfire.dxp'), ('application/vnd.spotfire.sfs', 'application/vnd.spotfire.sfs'), ('application/vnd.sss-cod', 'application/vnd.sss-cod'), ('application/vnd.sss-dtf', 'application/vnd.sss-dtf'), ('application/vnd.sss-ntf', 'application/vnd.sss-ntf'), ('application/vnd.stepmania.package', 'application/vnd.stepmania.package'), ('application/vnd.stepmania.stepchart', 'application/vnd.stepmania.stepchart'), ('application/vnd.street-stream', 'application/vnd.street-stream'), ('application/vnd.sun.wadl+xml', 'application/vnd.sun.wadl+xml'), ('application/vnd.sus-calendar', 'application/vnd.sus-calendar'), ('application/vnd.svd', 'application/vnd.svd'), ('application/vnd.swiftview-ics', 'application/vnd.swiftview-ics'), ('application/vnd.syncml.dm.notification', 'application/vnd.syncml.dm.notification'), ('application/vnd.syncml.dmddf+xml', 'application/vnd.syncml.dmddf+xml'), ('application/vnd.syncml.dmtnds+wbxml', 'application/vnd.syncml.dmtnds+wbxml'), ('application/vnd.syncml.dmtnds+xml', 'application/vnd.syncml.dmtnds+xml'), ('application/vnd.syncml.dmddf+wbxml', 'application/vnd.syncml.dmddf+wbxml'), ('application/vnd.syncml.dm+wbxml', 'application/vnd.syncml.dm+wbxml'), ('application/vnd.syncml.dm+xml', 'application/vnd.syncml.dm+xml'), ('application/vnd.syncml.ds.notification', 'application/vnd.syncml.ds.notification'), ('application/vnd.syncml+xml', 'application/vnd.syncml+xml'), ('application/vnd.tao.intent-module-archive', 'application/vnd.tao.intent-module-archive'), ('application/vnd.tcpdump.pcap', 'application/vnd.tcpdump.pcap'), ('application/vnd.tmobile-livetv', 'application/vnd.tmobile-livetv'), ('application/vnd.trid.tpt', 'application/vnd.trid.tpt'), ('application/vnd.triscape.mxs', 'application/vnd.triscape.mxs'), ('application/vnd.trueapp', 'application/vnd.trueapp'), ('application/vnd.truedoc', 'application/vnd.truedoc'), ('application/vnd.ubisoft.webplayer', 'application/vnd.ubisoft.webplayer'), ('application/vnd.ufdl', 'application/vnd.ufdl'), ('application/vnd.uiq.theme', 'application/vnd.uiq.theme'), ('application/vnd.umajin', 'application/vnd.umajin'), ('application/vnd.unity', 'application/vnd.unity'), ('application/vnd.uoml+xml', 'application/vnd.uoml+xml'), ('application/vnd.uplanet.alert', 'application/vnd.uplanet.alert'), ('application/vnd.uplanet.alert-wbxml', 'application/vnd.uplanet.alert-wbxml'), ('application/vnd.uplanet.bearer-choice', 'application/vnd.uplanet.bearer-choice'), ('application/vnd.uplanet.bearer-choice-wbxml', 'application/vnd.uplanet.bearer-choice-wbxml'), ('application/vnd.uplanet.cacheop', 'application/vnd.uplanet.cacheop'), ('application/vnd.uplanet.cacheop-wbxml', 'application/vnd.uplanet.cacheop-wbxml'), ('application/vnd.uplanet.channel', 'application/vnd.uplanet.channel'), ('application/vnd.uplanet.channel-wbxml', 'application/vnd.uplanet.channel-wbxml'), ('application/vnd.uplanet.list', 'application/vnd.uplanet.list'), ('application/vnd.uplanet.listcmd', 'application/vnd.uplanet.listcmd'), ('application/vnd.uplanet.listcmd-wbxml', 'application/vnd.uplanet.listcmd-wbxml'), ('application/vnd.uplanet.list-wbxml', 'application/vnd.uplanet.list-wbxml'), ('application/vnd.uplanet.signal', 'application/vnd.uplanet.signal'), ('application/vnd.vcx', 'application/vnd.vcx'), ('application/vnd.vd-study', 'application/vnd.vd-study'), ('application/vnd.vectorworks', 'application/vnd.vectorworks'), ('application/vnd.verimatrix.vcas', 'application/vnd.verimatrix.vcas'), ('application/vnd.vidsoft.vidconference', 'application/vnd.vidsoft.vidconference'), ('application/vnd.visio', 'application/vnd.visio'), ('application/vnd.visionary', 'application/vnd.visionary'), ('application/vnd.vividence.scriptfile', 'application/vnd.vividence.scriptfile'), ('application/vnd.vsf', 'application/vnd.vsf'), ('application/vnd.wap.sic', 'application/vnd.wap.sic'), ('application/vnd.wap.slc', 'application/vnd.wap.slc'), ('application/vnd.wap.wbxml', 'application/vnd.wap.wbxml'), ('application/vnd.wap.wmlc', 'application/vnd.wap.wmlc'), ('application/vnd.wap.wmlscriptc', 'application/vnd.wap.wmlscriptc'), ('application/vnd.webturbo', 'application/vnd.webturbo'), ('application/vnd.wfa.p2p', 'application/vnd.wfa.p2p'), ('application/vnd.wfa.wsc', 'application/vnd.wfa.wsc'), ('application/vnd.windows.devicepairing', 'application/vnd.windows.devicepairing'), ('application/vnd.wmc', 'application/vnd.wmc'), ('application/vnd.wmf.bootstrap', 'application/vnd.wmf.bootstrap'), ('application/vnd.wolfram.mathematica', 'application/vnd.wolfram.mathematica'), ('application/vnd.wolfram.mathematica.package', 'application/vnd.wolfram.mathematica.package'), ('application/vnd.wolfram.player', 'application/vnd.wolfram.player'), ('application/vnd.wordperfect', 'application/vnd.wordperfect'), ('application/vnd.wqd', 'application/vnd.wqd'), ('application/vnd.wrq-hp3000-labelled', 'application/vnd.wrq-hp3000-labelled'), ('application/vnd.wt.stf', 'application/vnd.wt.stf'), ('application/vnd.wv.csp+xml', 'application/vnd.wv.csp+xml'), ('application/vnd.wv.csp+wbxml', 'application/vnd.wv.csp+wbxml'), ('application/vnd.wv.ssp+xml', 'application/vnd.wv.ssp+xml'), ('application/vnd.xacml+json', 'application/vnd.xacml+json'), ('application/vnd.xara', 'application/vnd.xara'), ('application/vnd.xfdl', 'application/vnd.xfdl'), ('application/vnd.xfdl.webform', 'application/vnd.xfdl.webform'), ('application/vnd.xmi+xml', 'application/vnd.xmi+xml'), ('application/vnd.xmpie.cpkg', 'application/vnd.xmpie.cpkg'), ('application/vnd.xmpie.dpkg', 'application/vnd.xmpie.dpkg'), ('application/vnd.xmpie.plan', 'application/vnd.xmpie.plan'), ('application/vnd.xmpie.ppkg', 'application/vnd.xmpie.ppkg'), ('application/vnd.xmpie.xlim', 'application/vnd.xmpie.xlim'), ('application/vnd.yamaha.hv-dic', 'application/vnd.yamaha.hv-dic'), ('application/vnd.yamaha.hv-script', 'application/vnd.yamaha.hv-script'), ('application/vnd.yamaha.hv-voice', 'application/vnd.yamaha.hv-voice'), ('application/vnd.yamaha.openscoreformat.osfpvg+xml', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'), ('application/vnd.yamaha.openscoreformat', 'application/vnd.yamaha.openscoreformat'), ('application/vnd.yamaha.remote-setup', 'application/vnd.yamaha.remote-setup'), ('application/vnd.yamaha.smaf-audio', 'application/vnd.yamaha.smaf-audio'), ('application/vnd.yamaha.smaf-phrase', 'application/vnd.yamaha.smaf-phrase'), ('application/vnd.yamaha.through-ngn', 'application/vnd.yamaha.through-ngn'), ('application/vnd.yamaha.tunnel-udpencap', 'application/vnd.yamaha.tunnel-udpencap'), ('application/vnd.yellowriver-custom-menu', 'application/vnd.yellowriver-custom-menu'), ('application/vnd.zul', 'application/vnd.zul'), ('application/vnd.zzazz.deck+xml', 'application/vnd.zzazz.deck+xml'), ('application/voicexml+xml', 'application/voicexml+xml'), ('application/vq-rtcpxr', 'application/vq-rtcpxr'), ('application/watcherinfo+xml', 'application/watcherinfo+xml'), ('application/whoispp-query', 'application/whoispp-query'), ('application/whoispp-response', 'application/whoispp-response'), ('application/widget', 'application/widget'), ('application/wita', 'application/wita'), ('application/wordperfect5.1', 'application/wordperfect5.1'), ('application/wsdl+xml', 'application/wsdl+xml'), ('application/wspolicy+xml', 'application/wspolicy+xml'), ('application/x400-bp', 'application/x400-bp'), ('application/xacml+xml', 'application/xacml+xml'), ('application/xcap-att+xml', 'application/xcap-att+xml'), ('application/xcap-caps+xml', 'application/xcap-caps+xml'), ('application/xcap-diff+xml', 'application/xcap-diff+xml'), ('application/xcap-el+xml', 'application/xcap-el+xml'), ('application/xcap-error+xml', 'application/xcap-error+xml'), ('application/xcap-ns+xml', 'application/xcap-ns+xml'), ('application/xcon-conference-info-diff+xml', 'application/xcon-conference-info-diff+xml'), ('application/xcon-conference-info+xml', 'application/xcon-conference-info+xml'), ('application/xenc+xml', 'application/xenc+xml'), ('application/xhtml-voice+xml', 'application/xhtml-voice+xml'), ('application/xhtml+xml', 'application/xhtml+xml'), ('application/xml', 'application/xml'), ('application/xml-dtd', 'application/xml-dtd'), ('application/xml-external-parsed-entity', 'application/xml-external-parsed-entity'), ('application/xmpp+xml', 'application/xmpp+xml'), ('application/xop+xml', 'application/xop+xml'), ('application/xslt+xml', 'application/xslt+xml'), ('application/xv+xml', 'application/xv+xml'), ('application/yang', 'application/yang'), ('application/yin+xml', 'application/yin+xml'), ('application/zip', 'application/zip'), ('application/zlib', 'application/zlib'), ('audio/1d-interleaved-parityfec', 'audio/1d-interleaved-parityfec'), ('audio/32kadpcm', 'audio/32kadpcm'), ('audio/3gpp', 'audio/3gpp'), ('audio/3gpp2', 'audio/3gpp2'), ('audio/ac3', 'audio/ac3'), ('audio/AMR', 'audio/AMR'), ('audio/AMR-WB', 'audio/AMR-WB'), ('audio/amr-wb', 'audio/amr-wb'), ('audio/asc', 'audio/asc'), ('audio/ATRAC-ADVANCED-LOSSLESS', 'audio/ATRAC-ADVANCED-LOSSLESS'), ('audio/ATRAC-X', 'audio/ATRAC-X'), ('audio/ATRAC3', 'audio/ATRAC3'), ('audio/basic', 'audio/basic'), ('audio/BV16', 'audio/BV16'), ('audio/BV32', 'audio/BV32'), ('audio/clearmode', 'audio/clearmode'), ('audio/CN', 'audio/CN'), ('audio/DAT12', 'audio/DAT12'), ('audio/dls', 'audio/dls'), ('audio/dsr-es201108', 'audio/dsr-es201108'), ('audio/dsr-es202050', 'audio/dsr-es202050'), ('audio/dsr-es202211', 'audio/dsr-es202211'), ('audio/dsr-es202212', 'audio/dsr-es202212'), ('audio/DV', 'audio/DV'), ('audio/DVI4', 'audio/DVI4'), ('audio/eac3', 'audio/eac3'), ('audio/encaprtp', 'audio/encaprtp'), ('audio/EVRC', 'audio/EVRC'), ('audio/EVRC-QCP', 'audio/EVRC-QCP'), ('audio/EVRC0', 'audio/EVRC0'), ('audio/EVRC1', 'audio/EVRC1'), ('audio/EVRCB', 'audio/EVRCB'), ('audio/EVRCB0', 'audio/EVRCB0'), ('audio/EVRCB1', 'audio/EVRCB1'), ('audio/EVRCNW', 'audio/EVRCNW'), ('audio/EVRCNW0', 'audio/EVRCNW0'), ('audio/EVRCNW1', 'audio/EVRCNW1'), ('audio/EVRCWB', 'audio/EVRCWB'), ('audio/EVRCWB0', 'audio/EVRCWB0'), ('audio/EVRCWB1', 'audio/EVRCWB1'), ('audio/example', 'audio/example'), ('audio/fwdred', 'audio/fwdred'), ('audio/G719', 'audio/G719'), ('audio/G722', 'audio/G722'), ('audio/G7221', 'audio/G7221'), ('audio/G723', 'audio/G723'), ('audio/G726-16', 'audio/G726-16'), ('audio/G726-24', 'audio/G726-24'), ('audio/G726-32', 'audio/G726-32'), ('audio/G726-40', 'audio/G726-40'), ('audio/G728', 'audio/G728'), ('audio/G729', 'audio/G729'), ('audio/G7291', 'audio/G7291'), ('audio/G729D', 'audio/G729D'), ('audio/G729E', 'audio/G729E'), ('audio/GSM', 'audio/GSM'), ('audio/GSM-EFR', 'audio/GSM-EFR'), ('audio/GSM-HR-08', 'audio/GSM-HR-08'), ('audio/iLBC', 'audio/iLBC'), ('audio/ip-mr_v2.5', 'audio/ip-mr_v2.5'), ('audio/L8', 'audio/L8'), ('audio/L16', 'audio/L16'), ('audio/L20', 'audio/L20'), ('audio/L24', 'audio/L24'), ('audio/LPC', 'audio/LPC'), ('audio/mobile-xmf', 'audio/mobile-xmf'), ('audio/MPA', 'audio/MPA'), ('audio/mp4', 'audio/mp4'), ('audio/MP4A-LATM', 'audio/MP4A-LATM'), ('audio/mpa-robust', 'audio/mpa-robust'), ('audio/mpeg', 'audio/mpeg'), ('audio/mpeg4-generic', 'audio/mpeg4-generic'), ('audio/ogg', 'audio/ogg'), ('audio/parityfec', 'audio/parityfec'), ('audio/PCMA', 'audio/PCMA'), ('audio/PCMA-WB', 'audio/PCMA-WB'), ('audio/PCMU', 'audio/PCMU'), ('audio/PCMU-WB', 'audio/PCMU-WB'), ('audio/prs.sid', 'audio/prs.sid'), ('audio/QCELP', 'audio/QCELP'), ('audio/raptorfec', 'audio/raptorfec'), ('audio/RED', 'audio/RED'), ('audio/rtp-enc-aescm128', 'audio/rtp-enc-aescm128'), ('audio/rtploopback', 'audio/rtploopback'), ('audio/rtp-midi', 'audio/rtp-midi'), ('audio/rtx', 'audio/rtx'), ('audio/SMV', 'audio/SMV'), ('audio/SMV0', 'audio/SMV0'), ('audio/SMV-QCP', 'audio/SMV-QCP'), ('audio/sp-midi', 'audio/sp-midi'), ('audio/speex', 'audio/speex'), ('audio/t140c', 'audio/t140c'), ('audio/t38', 'audio/t38'), ('audio/telephone-event', 'audio/telephone-event'), ('audio/tone', 'audio/tone'), ('audio/UEMCLIP', 'audio/UEMCLIP'), ('audio/ulpfec', 'audio/ulpfec'), ('audio/VDVI', 'audio/VDVI'), ('audio/VMR-WB', 'audio/VMR-WB'), ('audio/vnd.3gpp.iufp', 'audio/vnd.3gpp.iufp'), ('audio/vnd.4SB', 'audio/vnd.4SB'), ('audio/vnd.audiokoz', 'audio/vnd.audiokoz'), ('audio/vnd.CELP', 'audio/vnd.CELP'), ('audio/vnd.cisco.nse', 'audio/vnd.cisco.nse'), ('audio/vnd.cmles.radio-events', 'audio/vnd.cmles.radio-events'), ('audio/vnd.cns.anp1', 'audio/vnd.cns.anp1'), ('audio/vnd.cns.inf1', 'audio/vnd.cns.inf1'), ('audio/vnd.dece.audio', 'audio/vnd.dece.audio'), ('audio/vnd.digital-winds', 'audio/vnd.digital-winds'), ('audio/vnd.dlna.adts', 'audio/vnd.dlna.adts'), ('audio/vnd.dolby.heaac.1', 'audio/vnd.dolby.heaac.1'), ('audio/vnd.dolby.heaac.2', 'audio/vnd.dolby.heaac.2'), ('audio/vnd.dolby.mlp', 'audio/vnd.dolby.mlp'), ('audio/vnd.dolby.mps', 'audio/vnd.dolby.mps'), ('audio/vnd.dolby.pl2', 'audio/vnd.dolby.pl2'), ('audio/vnd.dolby.pl2x', 'audio/vnd.dolby.pl2x'), ('audio/vnd.dolby.pl2z', 'audio/vnd.dolby.pl2z'), ('audio/vnd.dolby.pulse.1', 'audio/vnd.dolby.pulse.1'), ('audio/vnd.dra', 'audio/vnd.dra'), ('audio/vnd.dts', 'audio/vnd.dts'), ('audio/vnd.dts.hd', 'audio/vnd.dts.hd'), ('audio/vnd.dvb.file', 'audio/vnd.dvb.file'), ('audio/vnd.everad.plj', 'audio/vnd.everad.plj'), ('audio/vnd.hns.audio', 'audio/vnd.hns.audio'), ('audio/vnd.lucent.voice', 'audio/vnd.lucent.voice'), ('audio/vnd.ms-playready.media.pya', 'audio/vnd.ms-playready.media.pya'), ('audio/vnd.nokia.mobile-xmf', 'audio/vnd.nokia.mobile-xmf'), ('audio/vnd.nortel.vbk', 'audio/vnd.nortel.vbk'), ('audio/vnd.nuera.ecelp4800', 'audio/vnd.nuera.ecelp4800'), ('audio/vnd.nuera.ecelp7470', 'audio/vnd.nuera.ecelp7470'), ('audio/vnd.nuera.ecelp9600', 'audio/vnd.nuera.ecelp9600'), ('audio/vnd.octel.sbc', 'audio/vnd.octel.sbc'), ('audio/vnd.qcelp', 'audio/vnd.qcelp'), ('audio/vnd.rhetorex.32kadpcm', 'audio/vnd.rhetorex.32kadpcm'), ('audio/vnd.rip', 'audio/vnd.rip'), ('audio/vnd.sealedmedia.softseal.mpeg', 'audio/vnd.sealedmedia.softseal.mpeg'), ('audio/vnd.vmx.cvsd', 'audio/vnd.vmx.cvsd'), ('audio/vorbis', 'audio/vorbis'), ('audio/vorbis-config', 'audio/vorbis-config'), ('image/cgm', 'image/cgm'), ('image/example', 'image/example'), ('image/fits', 'image/fits'), ('image/g3fax', 'image/g3fax'), ('image/gif', 'image/gif'), ('image/ief', 'image/ief'), ('image/jp2', 'image/jp2'), ('image/jpeg', 'image/jpeg'), ('image/jpm', 'image/jpm'), ('image/jpx', 'image/jpx'), ('image/ktx', 'image/ktx'), ('image/naplps', 'image/naplps'), ('image/png', 'image/png'), ('image/prs.btif', 'image/prs.btif'), ('image/prs.pti', 'image/prs.pti'), ('image/pwg-raster', 'image/pwg-raster'), ('image/svg+xml', 'image/svg+xml'), ('image/t38', 'image/t38'), ('image/tiff', 'image/tiff'), ('image/tiff-fx', 'image/tiff-fx'), ('image/vnd.adobe.photoshop', 'image/vnd.adobe.photoshop'), ('image/vnd.airzip.accelerator.azv', 'image/vnd.airzip.accelerator.azv'), ('image/vnd.cns.inf2', 'image/vnd.cns.inf2'), ('image/vnd.dece.graphic', 'image/vnd.dece.graphic'), ('image/vnd.djvu', 'image/vnd.djvu'), ('image/vnd.dwg', 'image/vnd.dwg'), ('image/vnd.dxf', 'image/vnd.dxf'), ('image/vnd.dvb.subtitle', 'image/vnd.dvb.subtitle'), ('image/vnd.fastbidsheet', 'image/vnd.fastbidsheet'), ('image/vnd.fpx', 'image/vnd.fpx'), ('image/vnd.fst', 'image/vnd.fst'), ('image/vnd.fujixerox.edmics-mmr', 'image/vnd.fujixerox.edmics-mmr'), ('image/vnd.fujixerox.edmics-rlc', 'image/vnd.fujixerox.edmics-rlc'), ('image/vnd.globalgraphics.pgb', 'image/vnd.globalgraphics.pgb'), ('image/vnd.microsoft.icon', 'image/vnd.microsoft.icon'), ('image/vnd.mix', 'image/vnd.mix'), ('image/vnd.ms-modi', 'image/vnd.ms-modi'), ('image/vnd.net-fpx', 'image/vnd.net-fpx'), ('image/vnd.radiance', 'image/vnd.radiance'), ('image/vnd.sealed.png', 'image/vnd.sealed.png'), ('image/vnd.sealedmedia.softseal.gif', 'image/vnd.sealedmedia.softseal.gif'), ('image/vnd.sealedmedia.softseal.jpg', 'image/vnd.sealedmedia.softseal.jpg'), ('image/vnd.svf', 'image/vnd.svf'), ('image/vnd.valve.source.texture', 'image/vnd.valve.source.texture'), ('image/vnd.wap.wbmp', 'image/vnd.wap.wbmp'), ('image/vnd.xiff', 'image/vnd.xiff'), ('message/CPIM', 'message/CPIM'), ('message/delivery-status', 'message/delivery-status'), ('message/disposition-notification', 'message/disposition-notification'), ('message/example', 'message/example'), ('message/external-body', 'message/external-body'), ('message/feedback-report', 'message/feedback-report'), ('message/global', 'message/global'), ('message/global-delivery-status', 'message/global-delivery-status'), ('message/global-disposition-notification', 'message/global-disposition-notification'), ('message/global-headers', 'message/global-headers'), ('message/http', 'message/http'), ('message/imdn+xml', 'message/imdn+xml'), ('message/news', 'message/news'), ('message/partial', 'message/partial'), ('message/rfc822', 'message/rfc822'), ('message/s-http', 'message/s-http'), ('message/sip', 'message/sip'), ('message/sipfrag', 'message/sipfrag'), ('message/tracking-status', 'message/tracking-status'), ('message/vnd.si.simp', 'message/vnd.si.simp'), ('message/vnd.wfa.wsc', 'message/vnd.wfa.wsc'), ('model/example', 'model/example'), ('model/iges', 'model/iges'), ('model/mesh', 'model/mesh'), ('model/vnd.collada+xml', 'model/vnd.collada+xml'), ('model/vnd.dwf', 'model/vnd.dwf'), ('model/vnd.flatland.3dml', 'model/vnd.flatland.3dml'), ('model/vnd.gdl', 'model/vnd.gdl'), ('model/vnd.gs-gdl', 'model/vnd.gs-gdl'), ('model/vnd.gtw', 'model/vnd.gtw'), ('model/vnd.moml+xml', 'model/vnd.moml+xml'), ('model/vnd.mts', 'model/vnd.mts'), ('model/vnd.parasolid.transmit.binary', 'model/vnd.parasolid.transmit.binary'), ('model/vnd.parasolid.transmit.text', 'model/vnd.parasolid.transmit.text'), ('model/vnd.vtu', 'model/vnd.vtu'), ('model/vrml', 'model/vrml'), ('model/x3d-vrml', 'model/x3d-vrml'), ('model/x3d+fastinfoset', 'model/x3d+fastinfoset'), ('model/x3d+xml', 'model/x3d+xml'), ('multipart/alternative', 'multipart/alternative'), ('multipart/appledouble', 'multipart/appledouble'), ('multipart/byteranges', 'multipart/byteranges'), ('multipart/digest', 'multipart/digest'), ('multipart/encrypted', 'multipart/encrypted'), ('multipart/example', 'multipart/example'), ('multipart/form-data', 'multipart/form-data'), ('multipart/header-set', 'multipart/header-set'), ('multipart/mixed', 'multipart/mixed'), ('multipart/parallel', 'multipart/parallel'), ('multipart/related', 'multipart/related'), ('multipart/report', 'multipart/report'), ('multipart/signed', 'multipart/signed'), ('multipart/voice-message', 'multipart/voice-message'), ('text/1d-interleaved-parityfec', 'text/1d-interleaved-parityfec'), ('text/calendar', 'text/calendar'), ('text/css', 'text/css'), ('text/csv', 'text/csv'), ('text/directory', 'text/directory'), ('text/dns', 'text/dns'), ('text/ecmascript', 'text/ecmascript'), ('text/encaprtp', 'text/encaprtp'), ('text/enriched', 'text/enriched'), ('text/example', 'text/example'), ('text/fwdred', 'text/fwdred'), ('text/grammar-ref-list', 'text/grammar-ref-list'), ('text/html', 'text/html'), ('text/javascript', 'text/javascript'), ('text/jcr-cnd', 'text/jcr-cnd'), ('text/mizar', 'text/mizar'), ('text/n3', 'text/n3'), ('text/parameters', 'text/parameters'), ('text/parityfec', 'text/parityfec'), ('text/plain', 'text/plain'), ('text/provenance-notation', 'text/provenance-notation'), ('text/prs.fallenstein.rst', 'text/prs.fallenstein.rst'), ('text/prs.lines.tag', 'text/prs.lines.tag'), ('text/raptorfec', 'text/raptorfec'), ('text/RED', 'text/RED'), ('text/rfc822-headers', 'text/rfc822-headers'), ('text/richtext', 'text/richtext'), ('text/rtf', 'text/rtf'), ('text/rtp-enc-aescm128', 'text/rtp-enc-aescm128'), ('text/rtploopback', 'text/rtploopback'), ('text/rtx', 'text/rtx'), ('text/sgml', 'text/sgml'), ('text/t140', 'text/t140'), ('text/tab-separated-values', 'text/tab-separated-values'), ('text/troff', 'text/troff'), ('text/turtle', 'text/turtle'), ('text/ulpfec', 'text/ulpfec'), ('text/uri-list', 'text/uri-list'), ('text/vcard', 'text/vcard'), ('text/vnd.a', 'text/vnd.a'), ('text/vnd.abc', 'text/vnd.abc'), ('text/vnd.curl', 'text/vnd.curl'), ('text/vnd.debian.copyright', 'text/vnd.debian.copyright'), ('text/vnd.DMClientScript', 'text/vnd.DMClientScript'), ('text/vnd.dvb.subtitle', 'text/vnd.dvb.subtitle'), ('text/vnd.esmertec.theme-descriptor', 'text/vnd.esmertec.theme-descriptor'), ('text/vnd.fly', 'text/vnd.fly'), ('text/vnd.fmi.flexstor', 'text/vnd.fmi.flexstor'), ('text/vnd.graphviz', 'text/vnd.graphviz'), ('text/vnd.in3d.3dml', 'text/vnd.in3d.3dml'), ('text/vnd.in3d.spot', 'text/vnd.in3d.spot'), ('text/vnd.IPTC.NewsML', 'text/vnd.IPTC.NewsML'), ('text/vnd.IPTC.NITF', 'text/vnd.IPTC.NITF'), ('text/vnd.latex-z', 'text/vnd.latex-z'), ('text/vnd.motorola.reflex', 'text/vnd.motorola.reflex'), ('text/vnd.ms-mediapackage', 'text/vnd.ms-mediapackage'), ('text/vnd.net2phone.commcenter.command', 'text/vnd.net2phone.commcenter.command'), ('text/vnd.radisys.msml-basic-layout', 'text/vnd.radisys.msml-basic-layout'), ('text/vnd.si.uricatalogue', 'text/vnd.si.uricatalogue'), ('text/vnd.sun.j2me.app-descriptor', 'text/vnd.sun.j2me.app-descriptor'), ('text/vnd.trolltech.linguist', 'text/vnd.trolltech.linguist'), ('text/vnd.wap.si', 'text/vnd.wap.si'), ('text/vnd.wap.sl', 'text/vnd.wap.sl'), ('text/vnd.wap.wml', 'text/vnd.wap.wml'), ('text/vnd.wap.wmlscript', 'text/vnd.wap.wmlscript'), ('text/xml', 'text/xml'), ('text/xml-external-parsed-entity', 'text/xml-external-parsed-entity'), ('video/1d-interleaved-parityfec', 'video/1d-interleaved-parityfec'), ('video/3gpp', 'video/3gpp'), ('video/3gpp2', 'video/3gpp2'), ('video/3gpp-tt', 'video/3gpp-tt'), ('video/BMPEG', 'video/BMPEG'), ('video/BT656', 'video/BT656'), ('video/CelB', 'video/CelB'), ('video/DV', 'video/DV'), ('video/encaprtp', 'video/encaprtp'), ('video/example', 'video/example'), ('video/H261', 'video/H261'), ('video/H263', 'video/H263'), ('video/H263-1998', 'video/H263-1998'), ('video/H263-2000', 'video/H263-2000'), ('video/H264', 'video/H264'), ('video/H264-RCDO', 'video/H264-RCDO'), ('video/H264-SVC', 'video/H264-SVC'), ('video/iso.segment', 'video/iso.segment'), ('video/JPEG', 'video/JPEG'), ('video/jpeg2000', 'video/jpeg2000'), ('video/MJ2', 'video/MJ2'), ('video/MP1S', 'video/MP1S'), ('video/MP2P', 'video/MP2P'), ('video/MP2T', 'video/MP2T'), ('video/mp4', 'video/mp4'), ('video/MP4V-ES', 'video/MP4V-ES'), ('video/MPV', 'video/MPV'), ('video/mpeg', 'video/mpeg'), ('video/mpeg4-generic', 'video/mpeg4-generic'), ('video/nv', 'video/nv'), ('video/ogg', 'video/ogg'), ('video/parityfec', 'video/parityfec'), ('video/pointer', 'video/pointer'), ('video/quicktime', 'video/quicktime'), ('video/raptorfec', 'video/raptorfec'), ('video/raw', 'video/raw'), ('video/rtp-enc-aescm128', 'video/rtp-enc-aescm128'), ('video/rtploopback', 'video/rtploopback'), ('video/rtx', 'video/rtx'), ('video/SMPTE292M', 'video/SMPTE292M'), ('video/ulpfec', 'video/ulpfec'), ('video/vc1', 'video/vc1'), ('video/vnd.CCTV', 'video/vnd.CCTV'), ('video/vnd.dece.hd', 'video/vnd.dece.hd'), ('video/vnd.dece.mobile', 'video/vnd.dece.mobile'), ('video/vnd.dece.mp4', 'video/vnd.dece.mp4'), ('video/vnd.dece.pd', 'video/vnd.dece.pd'), ('video/vnd.dece.sd', 'video/vnd.dece.sd'), ('video/vnd.dece.video', 'video/vnd.dece.video'), ('video/vnd.directv.mpeg', 'video/vnd.directv.mpeg'), ('video/vnd.directv.mpeg-tts', 'video/vnd.directv.mpeg-tts'), ('video/vnd.dlna.mpeg-tts', 'video/vnd.dlna.mpeg-tts'), ('video/vnd.dvb.file', 'video/vnd.dvb.file'), ('video/vnd.fvt', 'video/vnd.fvt'), ('video/vnd.hns.video', 'video/vnd.hns.video'), ('video/vnd.iptvforum.1dparityfec-1010', 'video/vnd.iptvforum.1dparityfec-1010'), ('video/vnd.iptvforum.1dparityfec-2005', 'video/vnd.iptvforum.1dparityfec-2005'), ('video/vnd.iptvforum.2dparityfec-1010', 'video/vnd.iptvforum.2dparityfec-1010'), ('video/vnd.iptvforum.2dparityfec-2005', 'video/vnd.iptvforum.2dparityfec-2005'), ('video/vnd.iptvforum.ttsavc', 'video/vnd.iptvforum.ttsavc'), ('video/vnd.iptvforum.ttsmpeg2', 'video/vnd.iptvforum.ttsmpeg2'), ('video/vnd.motorola.video', 'video/vnd.motorola.video'), ('video/vnd.motorola.videop', 'video/vnd.motorola.videop'), ('video/vnd.mpegurl', 'video/vnd.mpegurl'), ('video/vnd.ms-playready.media.pyv', 'video/vnd.ms-playready.media.pyv'), ('video/vnd.nokia.interleaved-multimedia', 'video/vnd.nokia.interleaved-multimedia'), ('video/vnd.nokia.videovoip', 'video/vnd.nokia.videovoip'), ('video/vnd.objectvideo', 'video/vnd.objectvideo'), ('video/vnd.radgamettools.bink', 'video/vnd.radgamettools.bink'), ('video/vnd.radgamettools.smacker', 'video/vnd.radgamettools.smacker'), ('video/vnd.sealed.mpeg1', 'video/vnd.sealed.mpeg1'), ('video/vnd.sealed.mpeg4', 'video/vnd.sealed.mpeg4'), ('video/vnd.sealed.swf', 'video/vnd.sealed.swf'), ('video/vnd.sealedmedia.softseal.mov', 'video/vnd.sealedmedia.softseal.mov'), ('video/vnd.uvvu.mp4', 'video/vnd.uvvu.mp4'), ('video/vnd.vivo', 'video/vnd.vivo')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='language',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language that the document is written in.', max_length=2, verbose_name='document language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='title',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter the title of your document.', max_length=100, verbose_name='document title', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='url',
            field=models.URLField(help_text="Enter the online location of your document. The URL should start with 'http://' or 'https://'.", verbose_name='document url', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='activity_description',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='A description that qualifies the activity taking place at the location. This should not duplicate information provided in the main activity description, and should typically be used to distinguish between activities at multiple locations within a single iati-activity record.', max_length=255, verbose_name='activity description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='address_1',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 1', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='address_2',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 2', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='city',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='city', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='country',
            field=models.ForeignKey(verbose_name='country', to='rsr.Country', help_text='The country or countries that benefit(s) from the activity.', blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='description',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='This provides free text space for providing an additional description, if needed, of the actual target of the activity. A description that qualifies the location, not the activity.', max_length=255, verbose_name='location description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='exactness',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Defines whether the location represents the most distinct point reasonably possible for this type of activity or is an approximation due to lack of more detailed information.', max_length=1, verbose_name='location precision', choices=[('1', '1 - Exact'), ('2', '2 - Approximate')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='feature_designation',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='A more refined coded classification of the type of feature referred to by this location. For reference: <a href="http://iatistandard.org/201/codelists/LocationType/" target="_blank">http://iatistandard.org/201/codelists/LocationType/</a>.', max_length=5, verbose_name='feature designation', choices=[('AIRQ', 'AIRQ - abandoned airfield'), ('CMPQ', 'CMPQ - abandoned camp'), ('CNLQ', 'CNLQ - abandoned canal'), ('MFGQ', 'MFGQ - abandoned factory'), ('FRMQ', 'FRMQ - abandoned farm'), ('MNQ', 'MNQ - abandoned mine'), ('MSSNQ', 'MSSNQ - abandoned mission'), ('OILQ', 'OILQ - abandoned oil well'), ('PPQ', 'PPQ - abandoned police post'), ('PPLQ', 'PPLQ - abandoned populated place'), ('PRNQ', 'PRNQ - abandoned prison'), ('RRQ', 'RRQ - abandoned railroad'), ('RSTNQ', 'RSTNQ - abandoned railroad station'), ('RSTPQ', 'RSTPQ - abandoned railroad stop'), ('STMQ', 'STMQ - abandoned watercourse'), ('WLLQ', 'WLLQ - abandoned well'), ('ADMD', 'ADMD - administrative division'), ('ADMF', 'ADMF - administrative facility'), ('AGRC', 'AGRC - agricultural colony'), ('AGRF', 'AGRF - agricultural facility'), ('RESA', 'RESA - agricultural reserve'), ('SCHA', 'SCHA - agricultural school'), ('AIRB', 'AIRB - airbase'), ('AIRF', 'AIRF - airfield'), ('AIRP', 'AIRP - airport'), ('AMTH', 'AMTH - amphitheater'), ('STMA', 'STMA - anabranch'), ('ANCH', 'ANCH - anchorage'), ('RDA', 'RDA - ancient road'), ('ANS', 'ANS - ancient site'), ('WALLA', 'WALLA - ancient wall'), ('BLDA', 'BLDA - apartment building'), ('AQC', 'AQC - aquaculture facility'), ('CNLA', 'CNLA - aqueduct'), ('ARCH', 'ARCH - arch'), ('LAND', 'LAND - Arctic land'), ('AREA', 'AREA - area'), ('ISLF', 'ISLF - artificial island'), ('RNGA', 'RNGA - artillery range'), ('ASPH', 'ASPH - asphalt lake'), ('ASTR', 'ASTR - astronomical station'), ('ASYL', 'ASYL - asylum'), ('ATHF', 'ATHF - athletic field'), ('ATOL', 'ATOL - atoll(s)'), ('CTRA', 'CTRA - atomic center'), ('BDLD', 'BDLD - badlands'), ('BSTN', 'BSTN - baling station'), ('ESTB', 'ESTB - banana plantation'), ('BAN', 'BAN - bank'), ('BNK', 'BNK - bank(s)'), ('BAR', 'BAR - bar'), ('BRKS', 'BRKS - barracks'), ('BTL', 'BTL - battlefield'), ('BAY', 'BAY - bay'), ('BAYS', 'BAYS - bays'), ('BCH', 'BCH - beach'), ('RDGB', 'RDGB - beach ridge'), ('BCHS', 'BCHS - beaches'), ('BCN', 'BCN - beacon'), ('BNCH', 'BNCH - bench'), ('BGHT', 'BGHT - bight(s)'), ('BLHL', 'BLHL - blowhole(s)'), ('BLOW', 'BLOW - blowout(s)'), ('BTYD', 'BTYD - boatyard'), ('BOG', 'BOG - bog(s)'), ('PSTB', 'PSTB - border post'), ('BLDR', 'BLDR - boulder field'), ('BP', 'BP - boundary marker'), ('BRKW', 'BRKW - breakwater'), ('MFGB', 'MFGB - brewery'), ('BDG', 'BDG - bridge'), ('ZNB', 'ZNB - buffer zone'), ('BLDG', 'BLDG - building(s)'), ('BUR', 'BUR - burial cave(s)'), ('BUSH', 'BUSH - bush(es)'), ('CTRB', 'CTRB - business center'), ('BUTE', 'BUTE - butte(s)'), ('CARN', 'CARN - cairn'), ('CLDA', 'CLDA - caldera'), ('CMP', 'CMP - camp(s)'), ('CNL', 'CNL - canal'), ('CNLB', 'CNLB - canal bend'), ('TNLC', 'TNLC - canal tunnel'), ('STMC', 'STMC - canalized stream'), ('MFGC', 'MFGC - cannery'), ('CNYN', 'CNYN - canyon'), ('CAPE', 'CAPE - cape'), ('PPLC', 'PPLC - capital of a political entity'), ('RTE', 'RTE - caravan route'), ('CSNO', 'CSNO - casino'), ('CSTL', 'CSTL - castle'), ('TNKD', 'TNKD - cattle dipping tank'), ('CSWY', 'CSWY - causeway'), ('CAVE', 'CAVE - cave(s)'), ('CMTY', 'CMTY - cemetery'), ('CHN', 'CHN - channel'), ('MNCR', 'MNCR - chrome mine(s)'), ('CH', 'CH - church'), ('CRQ', 'CRQ - cirque'), ('CRQS', 'CRQS - cirques'), ('CLG', 'CLG - clearing'), ('CFT', 'CFT - cleft(s)'), ('CLF', 'CLF - cliff(s)'), ('HSPC', 'HSPC - clinic'), ('MNC', 'MNC - coal mine(s)'), ('COLF', 'COLF - coalfield'), ('CST', 'CST - coast'), ('STNC', 'STNC - coast guard station'), ('GRVC', 'GRVC - coconut grove'), ('SCHC', 'SCHC - college'), ('CMN', 'CMN - common'), ('COMC', 'COMC - communication center'), ('CTRCM', 'CTRCM - community center'), ('CNS', 'CNS - concession area'), ('CONE', 'CONE - cone(s)'), ('CNFL', 'CNFL - confluence'), ('CRSU', 'CRSU - continental rise'), ('CVNT', 'CVNT - convent'), ('MNCU', 'MNCU - copper mine(s)'), ('MFGCU', 'MFGCU - copper works'), ('RFC', 'RFC - coral reef(s)'), ('CRRL', 'CRRL - corral(s)'), ('CRDR', 'CRDR - corridor'), ('ESTC', 'ESTC - cotton plantation'), ('HSEC', 'HSEC - country house'), ('CTHSE', 'CTHSE - courthouse'), ('COVE', 'COVE - cove(s)'), ('LKC', 'LKC - crater lake'), ('LKSC', 'LKSC - crater lakes'), ('CRTR', 'CRTR - crater(s)'), ('CUET', 'CUET - cuesta(s)'), ('CULT', 'CULT - cultivated area'), ('CRNT', 'CRNT - current'), ('CSTM', 'CSTM - customs house'), ('PSTC', 'PSTC - customs post'), ('CUTF', 'CUTF - cutoff'), ('DARY', 'DARY - dairy'), ('DAM', 'DAM - dam'), ('DEPU', 'DEPU - deep'), ('DLTA', 'DLTA - delta'), ('PCLD', 'PCLD - dependent political entity'), ('DPR', 'DPR - depression(s)'), ('DSRT', 'DSRT - desert'), ('PPLW', 'PPLW - destroyed populated place'), ('MNDT', 'MNDT - diatomite mine(s)'), ('DIKE', 'DIKE - dike'), ('DIP', 'DIP - diplomatic facility'), ('HSPD', 'HSPD - dispensary'), ('STMD', 'STMD - distributary(-ies)'), ('DTCH', 'DTCH - ditch'), ('DTCHM', 'DTCHM - ditch mouth(s)'), ('DVD', 'DVD - divide'), ('DCK', 'DCK - dock(s)'), ('DCKB', 'DCKB - docking basin'), ('DCKY', 'DCKY - dockyard'), ('BSND', 'BSND - drainage basin'), ('CNLD', 'CNLD - drainage canal'), ('DTCHD', 'DTCHD - drainage ditch'), ('DCKD', 'DCKD - dry dock'), ('SBED', 'SBED - dry stream bed'), ('DUNE', 'DUNE - dune(s)'), ('RGNE', 'RGNE - economic region'), ('SCRP', 'SCRP - escarpment'), ('EST', 'EST - estate(s)'), ('ESTY', 'ESTY - estuary'), ('STNE', 'STNE - experiment station'), ('FCL', 'FCL - facility'), ('CTRF', 'CTRF - facility center'), ('MFG', 'MFG - factory'), ('FAN', 'FAN - fan(s)'), ('FRM', 'FRM - farm'), ('PPLF', 'PPLF - farm village'), ('FRMS', 'FRMS - farms'), ('FRMT', 'FRMT - farmstead'), ('FY', 'FY - ferry'), ('FYT', 'FYT - ferry terminal'), ('FLD', 'FLD - field(s)'), ('FIRE', 'FIRE - fire station'), ('ADM1', 'ADM1 - first-order administrative division'), ('FISH', 'FISH - fishing area'), ('PNDSF', 'PNDSF - fishponds'), ('FSR', 'FSR - fissure'), ('FJD', 'FJD - fjord'), ('FJDS', 'FJDS - fjords'), ('FORD', 'FORD - ford'), ('RESF', 'RESF - forest reserve'), ('STNF', 'STNF - forest station'), ('FRST', 'FRST - forest(s)'), ('INLTQ', 'INLTQ - former inlet'), ('MLSGQ', 'MLSGQ - former sugar mill'), ('FT', 'FT - fort'), ('FRSTF', 'FRSTF - fossilized forest'), ('FNDY', 'FNDY - foundry'), ('ADM4', 'ADM4 - fourth-order administrative division'), ('ZNF', 'ZNF - free trade zone'), ('PCLF', 'PCLF - freely associated state'), ('DPOF', 'DPOF - fuel depot'), ('GAP', 'GAP - gap'), ('GDN', 'GDN - garden(s)'), ('GOSP', 'GOSP - gas-oil separator plant'), ('GASF', 'GASF - gasfield'), ('GATE', 'GATE - gate'), ('GYSR', 'GYSR - geyser'), ('GHAT', 'GHAT - gh\xc4\x81t'), ('GLCR', 'GLCR - glacier(s)'), ('MNAU', 'MNAU - gold mine(s)'), ('RECG', 'RECG - golf course'), ('GRGE', 'GRGE - gorge(s)'), ('GRSLD', 'GRSLD - grassland'), ('GRVE', 'GRVE - grave'), ('GVL', 'GVL - gravel area'), ('GRAZ', 'GRAZ - grazing area'), ('GHSE', 'GHSE - guest house'), ('GULF', 'GULF - gulf'), ('HLT', 'HLT - halting place'), ('HMCK', 'HMCK - hammock(s)'), ('AIRG', 'AIRG - hangar'), ('VALG', 'VALG - hanging valley'), ('HBR', 'HBR - harbor(s)'), ('HDLD', 'HDLD - headland'), ('STMH', 'STMH - headwaters'), ('HTH', 'HTH - heath'), ('AIRH', 'AIRH - heliport'), ('HERM', 'HERM - hermitage'), ('HLL', 'HLL - hill'), ('HLLS', 'HLLS - hills'), ('ADMDH', 'ADMDH - historical administrative division'), ('ADM1H', 'ADM1H - historical first-order administrative division'), ('ADM4H', 'ADM4H - historical fourth-order administrative division'), ('PCLH', 'PCLH - historical political entity'), ('PPLH', 'PPLH - historical populated place'), ('RRH', 'RRH - historical railroad'), ('RSTNH', 'RSTNH - historical railroad station'), ('RGNH', 'RGNH - historical region'), ('ADM2H', 'ADM2H - historical second-order administrative division'), ('HSTS', 'HSTS - historical site'), ('ADM3H', 'ADM3H - historical third-order administrative division'), ('UFHU', 'UFHU - historical undersea feature'), ('HMSD', 'HMSD - homestead'), ('HSP', 'HSP - hospital'), ('SPNT', 'SPNT - hot spring(s)'), ('HTL', 'HTL - hotel'), ('HSE', 'HSE - house(s)'), ('DEVH', 'DEVH - housing development'), ('RESH', 'RESH - hunting reserve'), ('HUT', 'HUT - hut'), ('HUTS', 'HUTS - huts'), ('PSH', 'PSH - hydroelectric power station'), ('CAPG', 'CAPG - icecap'), ('DPRG', 'DPRG - icecap depression'), ('DOMG', 'DOMG - icecap dome'), ('RDGG', 'RDGG - icecap ridge'), ('PCLI', 'PCLI - independent political entity'), ('INDS', 'INDS - industrial area'), ('INLT', 'INLT - inlet'), ('STNI', 'STNI - inspection station'), ('TRGD', 'TRGD - interdune trough(s)'), ('INTF', 'INTF - interfluve'), ('LKI', 'LKI - intermittent lake'), ('LKSI', 'LKSI - intermittent lakes'), ('LKOI', 'LKOI - intermittent oxbow lake'), ('PNDI', 'PNDI - intermittent pond'), ('PNDSI', 'PNDSI - intermittent ponds'), ('POOLI', 'POOLI - intermittent pool'), ('RSVI', 'RSVI - intermittent reservoir'), ('LKNI', 'LKNI - intermittent salt lake'), ('LKSNI', 'LKSNI - intermittent salt lakes'), ('PNDNI', 'PNDNI - intermittent salt pond(s)'), ('STMI', 'STMI - intermittent stream'), ('WTLDI', 'WTLDI - intermittent wetland'), ('RDIN', 'RDIN - intersection'), ('MNFE', 'MNFE - iron mine(s)'), ('FLDI', 'FLDI - irrigated field(s)'), ('CNLI', 'CNLI - irrigation canal'), ('DTCHI', 'DTCHI - irrigation ditch'), ('SYSI', 'SYSI - irrigation system'), ('ISL', 'ISL - island'), ('ISLS', 'ISLS - islands'), ('STLMT', 'STLMT - Israeli settlement'), ('ISTH', 'ISTH - isthmus'), ('JTY', 'JTY - jetty'), ('KRST', 'KRST - karst area'), ('CMPLA', 'CMPLA - labor camp'), ('LGN', 'LGN - lagoon'), ('LGNS', 'LGNS - lagoons'), ('LK', 'LK - lake'), ('LBED', 'LBED - lake bed(s)'), ('CHNL', 'CHNL - lake channel(s)'), ('RGNL', 'RGNL - lake region'), ('LKS', 'LKS - lakes'), ('ISLT', 'ISLT - land-tied island'), ('LNDF', 'LNDF - landfill'), ('LDNG', 'LDNG - landing'), ('LAVA', 'LAVA - lava area'), ('MNPB', 'MNPB - lead mine(s)'), ('LTER', 'LTER - leased area'), ('LEPC', 'LEPC - leper colony'), ('HSPL', 'HSPL - leprosarium'), ('LEV', 'LEV - levee'), ('LTHSE', 'LTHSE - lighthouse'), ('MFGLM', 'MFGLM - limekiln'), ('GOVL', 'GOVL - local government office'), ('LCTY', 'LCTY - locality'), ('LOCK', 'LOCK - lock(s)'), ('CMPL', 'CMPL - logging camp'), ('STMSB', 'STMSB - lost river'), ('MVA', 'MVA - maneuver area'), ('ISLM', 'ISLM - mangrove island'), ('MGV', 'MGV - mangrove swamp'), ('MAR', 'MAR - marina'), ('CHNM', 'CHNM - marine channel'), ('SCHN', 'SCHN - maritime school'), ('MKT', 'MKT - market'), ('MRSH', 'MRSH - marsh(es)'), ('MDW', 'MDW - meadow'), ('NKM', 'NKM - meander neck'), ('CTRM', 'CTRM - medical center'), ('MESA', 'MESA - mesa(s)'), ('STNM', 'STNM - meteorological station'), ('MILB', 'MILB - military base'), ('INSM', 'INSM - military installation'), ('SCHM', 'SCHM - military school'), ('ML', 'ML - mill(s)'), ('MN', 'MN - mine(s)'), ('MNA', 'MNA - mining area'), ('CMPMN', 'CMPMN - mining camp'), ('MSSN', 'MSSN - mission'), ('MOLE', 'MOLE - mole'), ('MSTY', 'MSTY - monastery'), ('MNMT', 'MNMT - monument'), ('MOOR', 'MOOR - moor(s)'), ('MRN', 'MRN - moraine'), ('MSQE', 'MSQE - mosque'), ('MND', 'MND - mound(s)'), ('MT', 'MT - mountain'), ('MTS', 'MTS - mountains'), ('FLTM', 'FLTM - mud flat(s)'), ('MFGM', 'MFGM - munitions plant'), ('MUS', 'MUS - museum'), ('NRWS', 'NRWS - narrows'), ('TNLN', 'TNLN - natural tunnel'), ('RESN', 'RESN - nature reserve'), ('NVB', 'NVB - naval base'), ('CNLN', 'CNLN - navigation canal(s)'), ('CHNN', 'CHNN - navigation channel'), ('MNNI', 'MNNI - nickel mine(s)'), ('NOV', 'NOV - novitiate'), ('PSN', 'PSN - nuclear power station'), ('NTK', 'NTK - nunatak'), ('NTKS', 'NTKS - nunataks'), ('NSY', 'NSY - nursery(-ies)'), ('OAS', 'OAS - oasis(-es)'), ('OBPT', 'OBPT - observation point'), ('OBS', 'OBS - observatory'), ('OCN', 'OCN - ocean'), ('BLDO', 'BLDO - office building'), ('CMPO', 'CMPO - oil camp'), ('ESTO', 'ESTO - oil palm plantation'), ('OILP', 'OILP - oil pipeline'), ('OILJ', 'OILJ - oil pipeline junction'), ('TRMO', 'TRMO - oil pipeline terminal'), ('PMPO', 'PMPO - oil pumping station'), ('OILR', 'OILR - oil refinery'), ('OILW', 'OILW - oil well'), ('OILF', 'OILF - oilfield'), ('GRVO', 'GRVO - olive grove'), ('MLO', 'MLO - olive oil mill'), ('OCH', 'OCH - orchard(s)'), ('MLM', 'MLM - ore treatment plant'), ('OVF', 'OVF - overfalls'), ('LKO', 'LKO - oxbow lake'), ('PGDA', 'PGDA - pagoda'), ('PAL', 'PAL - palace'), ('GRVP', 'GRVP - palm grove'), ('RESP', 'RESP - palm tree reserve'), ('PAN', 'PAN - pan'), ('PANS', 'PANS - pans'), ('PRSH', 'PRSH - parish'), ('PRK', 'PRK - park'), ('PRKGT', 'PRKGT - park gate'), ('PRKHQ', 'PRKHQ - park headquarters'), ('GARG', 'GARG - parking garage'), ('PKLT', 'PKLT - parking lot'), ('PASS', 'PASS - pass'), ('PSTP', 'PSTP - patrol post'), ('PK', 'PK - peak'), ('PKS', 'PKS - peaks'), ('PEAT', 'PEAT - peat cutting area'), ('PEN', 'PEN - peninsula'), ('BSNP', 'BSNP - petroleum basin'), ('MFGPH', 'MFGPH - phosphate works'), ('PIER', 'PIER - pier'), ('GRVPN', 'GRVPN - pine grove'), ('MNPL', 'MNPL - placer mine(s)'), ('PLN', 'PLN - plain(s)'), ('PLAT', 'PLAT - plateau'), ('PT', 'PT - point'), ('PTS', 'PTS - points'), ('PLDR', 'PLDR - polder'), ('PP', 'PP - police post'), ('PCL', 'PCL - political entity'), ('PND', 'PND - pond'), ('PNDS', 'PNDS - ponds'), ('POOL', 'POOL - pool(s)'), ('PPLL', 'PPLL - populated locality'), ('PPL', 'PPL - populated place'), ('PPLS', 'PPLS - populated places'), ('PRT', 'PRT - port'), ('PTGE', 'PTGE - portage'), ('PO', 'PO - post office'), ('PS', 'PS - power station'), ('PRN', 'PRN - prison'), ('PRMN', 'PRMN - promenade'), ('PROM', 'PROM - promontory(-ies)'), ('PYR', 'PYR - pyramid'), ('PYRS', 'PYRS - pyramids'), ('MNQR', 'MNQR - quarry(-ies)'), ('QUAY', 'QUAY - quay'), ('QCKS', 'QCKS - quicksand'), ('RECR', 'RECR - racetrack'), ('OBSR', 'OBSR - radio observatory'), ('STNR', 'STNR - radio station'), ('RR', 'RR - railroad'), ('RJCT', 'RJCT - railroad junction'), ('RSD', 'RSD - railroad siding'), ('RSGNL', 'RSGNL - railroad signal'), ('RSTN', 'RSTN - railroad station'), ('RSTP', 'RSTP - railroad stop'), ('TNLRR', 'TNLRR - railroad tunnel'), ('RYD', 'RYD - railroad yard'), ('RNCH', 'RNCH - ranch(es)'), ('RPDS', 'RPDS - rapids'), ('RVN', 'RVN - ravine(s)'), ('RCH', 'RCH - reach'), ('RF', 'RF - reef(s)'), ('PRNJ', 'PRNJ - reformatory'), ('CMPRF', 'CMPRF - refugee camp'), ('RGN', 'RGN - region'), ('CTRR', 'CTRR - religious center'), ('PPLR', 'PPLR - religious populated place'), ('RLG', 'RLG - religious site'), ('ITTR', 'ITTR - research institute'), ('RESV', 'RESV - reservation'), ('RES', 'RES - reserve'), ('RSV', 'RSV - reservoir(s)'), ('RSRT', 'RSRT - resort'), ('RHSE', 'RHSE - resthouse'), ('RLGR', 'RLGR - retreat'), ('RDGE', 'RDGE - ridge(s)'), ('RD', 'RD - road'), ('RDB', 'RDB - road bend'), ('RDCUT', 'RDCUT - road cut'), ('RDJCT', 'RDJCT - road junction'), ('TNLRD', 'TNLRD - road tunnel'), ('RDST', 'RDST - roadstead'), ('RK', 'RK - rock'), ('HMDA', 'HMDA - rock desert'), ('RKFL', 'RKFL - rockfall'), ('RKS', 'RKS - rocks'), ('RKRY', 'RKRY - rookery'), ('ESTR', 'ESTR - rubber plantation'), ('RUIN', 'RUIN - ruin(s)'), ('BDGQ', 'BDGQ - ruined bridge'), ('DAMQ', 'DAMQ - ruined dam'), ('SBKH', 'SBKH - sabkha(s)'), ('SDL', 'SDL - saddle'), ('SALT', 'SALT - salt area'), ('MFGN', 'MFGN - salt evaporation ponds'), ('LKN', 'LKN - salt lake'), ('LKSN', 'LKSN - salt lakes'), ('MRSHN', 'MRSHN - salt marsh'), ('MNN', 'MNN - salt mine(s)'), ('PNDN', 'PNDN - salt pond'), ('PNDSN', 'PNDSN - salt ponds'), ('SNTR', 'SNTR - sanatorium'), ('SAND', 'SAND - sand area'), ('ERG', 'ERG - sandy desert'), ('STNS', 'STNS - satellite station'), ('MLSW', 'MLSW - sawmill'), ('SCH', 'SCH - school'), ('ADMS', 'ADMS - school district'), ('STNB', 'STNB - scientific research base'), ('SCRB', 'SCRB - scrubland'), ('SEA', 'SEA - sea'), ('SCNU', 'SCNU - seachannel'), ('SCSU', 'SCSU - seachannels'), ('SMU', 'SMU - seamount'), ('SMSU', 'SMSU - seamounts'), ('AIRS', 'AIRS - seaplane landing area'), ('PPLA', 'PPLA - seat of a first-order administrative division'), ('PPLA4', 'PPLA4 - seat of a fourth-order administrative division'), ('PPLA2', 'PPLA2 - seat of a second-order administrative division'), ('PPLA3', 'PPLA3 - seat of a third-order administrative division'), ('ADM2', 'ADM2 - second-order administrative division'), ('BNKX', 'BNKX - section of bank'), ('CNLX', 'CNLX - section of canal'), ('ESTX', 'ESTX - section of estate'), ('HBRX', 'HBRX - section of harbor'), ('PCLIX', 'PCLIX - section of independent political entity'), ('STMIX', 'STMIX - section of intermittent stream'), ('ISLX', 'ISLX - section of island'), ('LGNX', 'LGNX - section of lagoon'), ('LKX', 'LKX - section of lake'), ('PENX', 'PENX - section of peninsula'), ('PLNX', 'PLNX - section of plain'), ('PLATX', 'PLATX - section of plateau'), ('PPLX', 'PPLX - section of populated place'), ('RFX', 'RFX - section of reef'), ('STMX', 'STMX - section of stream'), ('VALX', 'VALX - section of valley'), ('WADX', 'WADX - section of wadi'), ('FLLSX', 'FLLSX - section of waterfall(s)'), ('PCLS', 'PCLS - semi-independent political entity'), ('SWT', 'SWT - sewage treatment plant'), ('SHPF', 'SHPF - sheepfold'), ('SHOL', 'SHOL - shoal(s)'), ('SHOPC', 'SHOPC - shopping center or mall'), ('SHOR', 'SHOR - shore'), ('SHRN', 'SHRN - shrine'), ('SILL', 'SILL - sill'), ('SINK', 'SINK - sinkhole'), ('ESTSL', 'ESTSL - sisal plantation'), ('SLID', 'SLID - slide'), ('SLP', 'SLP - slope(s)'), ('SLCE', 'SLCE - sluice'), ('SNOW', 'SNOW - snowfield'), ('SD', 'SD - sound'), ('SPA', 'SPA - spa'), ('CTRS', 'CTRS - space center'), ('SPLY', 'SPLY - spillway'), ('SPIT', 'SPIT - spit'), ('SPNG', 'SPNG - spring(s)'), ('SPUR', 'SPUR - spur(s)'), ('SQR', 'SQR - square'), ('STBL', 'STBL - stable'), ('STDM', 'STDM - stadium'), ('STPS', 'STPS - steps'), ('STKR', 'STKR - stock route'), ('REG', 'REG - stony desert'), ('RET', 'RET - store'), ('SHSE', 'SHSE - storehouse'), ('STRT', 'STRT - strait'), ('STM', 'STM - stream'), ('BNKR', 'BNKR - stream bank'), ('STMB', 'STMB - stream bend'), ('STMGS', 'STMGS - stream gauging station'), ('STMM', 'STMM - stream mouth(s)'), ('STMS', 'STMS - streams'), ('ST', 'ST - street'), ('DAMSB', 'DAMSB - sub-surface dam'), ('SUBW', 'SUBW - subway'), ('SUBS', 'SUBS - subway station'), ('MLSG', 'MLSG - sugar mill'), ('ESTSG', 'ESTSG - sugar plantation'), ('MFGSG', 'MFGSG - sugar refinery'), ('SPNS', 'SPNS - sulphur spring(s)'), ('SWMP', 'SWMP - swamp'), ('SYG', 'SYG - synagogue'), ('TMTU', 'TMTU - tablemount (or guyot)'), ('TMSU', 'TMSU - tablemounts (or guyots)'), ('TAL', 'TAL - talus slope'), ('OILT', 'OILT - tank farm'), ('ESTT', 'ESTT - tea plantation'), ('SCHT', 'SCHT - technical school'), ('TMPL', 'TMPL - temple(s)'), ('AIRT', 'AIRT - terminal'), ('TRR', 'TRR - terrace'), ('TERR', 'TERR - territory'), ('ADM3', 'ADM3 - third-order administrative division'), ('CRKT', 'CRKT - tidal creek(s)'), ('FLTT', 'FLTT - tidal flat(s)'), ('MNSN', 'MNSN - tin mine(s)'), ('TOLL', 'TOLL - toll gate/barrier'), ('TMB', 'TMB - tomb(s)'), ('TOWR', 'TOWR - tower'), ('RDCR', 'RDCR - traffic circle'), ('TRL', 'TRL - trail'), ('TRANT', 'TRANT - transit terminal'), ('TREE', 'TREE - tree(s)'), ('TRIG', 'TRIG - triangulation station'), ('TRB', 'TRB - tribal area'), ('TUND', 'TUND - tundra'), ('TNL', 'TNL - tunnel'), ('TNLS', 'TNLS - tunnels'), ('CNLSB', 'CNLSB - underground irrigation canal(s)'), ('LKSB', 'LKSB - underground lake'), ('APNU', 'APNU - undersea apron'), ('ARCU', 'ARCU - undersea arch'), ('ARRU', 'ARRU - undersea arrugado'), ('BNKU', 'BNKU - undersea bank'), ('BKSU', 'BKSU - undersea banks'), ('BSNU', 'BSNU - undersea basin'), ('BNCU', 'BNCU - undersea bench'), ('BDLU', 'BDLU - undersea borderland'), ('CNYU', 'CNYU - undersea canyon'), ('CNSU', 'CNSU - undersea canyons'), ('CDAU', 'CDAU - undersea cordillera'), ('ESCU', 'ESCU - undersea escarpment (or scarp)'), ('FANU', 'FANU - undersea fan'), ('FLTU', 'FLTU - undersea flat'), ('FRKU', 'FRKU - undersea fork'), ('FRSU', 'FRSU - undersea forks'), ('FRZU', 'FRZU - undersea fracture zone'), ('FURU', 'FURU - undersea furrow'), ('GAPU', 'GAPU - undersea gap'), ('GLYU', 'GLYU - undersea gully'), ('HLLU', 'HLLU - undersea hill'), ('HLSU', 'HLSU - undersea hills'), ('HOLU', 'HOLU - undersea hole'), ('KNLU', 'KNLU - undersea knoll'), ('KNSU', 'KNSU - undersea knolls'), ('LDGU', 'LDGU - undersea ledge'), ('LEVU', 'LEVU - undersea levee'), ('MDVU', 'MDVU - undersea median valley'), ('MESU', 'MESU - undersea mesa'), ('MOTU', 'MOTU - undersea moat'), ('MNDU', 'MNDU - undersea mound'), ('MTU', 'MTU - undersea mountain'), ('MTSU', 'MTSU - undersea mountains'), ('PKU', 'PKU - undersea peak'), ('PKSU', 'PKSU - undersea peaks'), ('PNLU', 'PNLU - undersea pinnacle'), ('PLNU', 'PLNU - undersea plain'), ('PLTU', 'PLTU - undersea plateau'), ('PLFU', 'PLFU - undersea platform'), ('PRVU', 'PRVU - undersea province'), ('RMPU', 'RMPU - undersea ramp'), ('RNGU', 'RNGU - undersea range'), ('RAVU', 'RAVU - undersea ravine'), ('RFU', 'RFU - undersea reef'), ('RFSU', 'RFSU - undersea reefs'), ('RDGU', 'RDGU - undersea ridge'), ('RDSU', 'RDSU - undersea ridges'), ('RISU', 'RISU - undersea rise'), ('SDLU', 'SDLU - undersea saddle'), ('SHFU', 'SHFU - undersea shelf'), ('EDGU', 'EDGU - undersea shelf edge'), ('SHVU', 'SHVU - undersea shelf valley'), ('SHLU', 'SHLU - undersea shoal'), ('SHSU', 'SHSU - undersea shoals'), ('SILU', 'SILU - undersea sill'), ('SLPU', 'SLPU - undersea slope'), ('SPRU', 'SPRU - undersea spur'), ('TERU', 'TERU - undersea terrace'), ('TNGU', 'TNGU - undersea tongue'), ('TRNU', 'TRNU - undersea trench'), ('TRGU', 'TRGU - undersea trough'), ('VALU', 'VALU - undersea valley'), ('VLSU', 'VLSU - undersea valleys'), ('USGE', 'USGE - United States Government Establishment'), ('UPLD', 'UPLD - upland'), ('VAL', 'VAL - valley'), ('VALS', 'VALS - valleys'), ('VETF', 'VETF - veterinary facility'), ('VIN', 'VIN - vineyard'), ('VINS', 'VINS - vineyards'), ('VLC', 'VLC - volcano'), ('WAD', 'WAD - wadi'), ('WADB', 'WADB - wadi bend'), ('WADJ', 'WADJ - wadi junction'), ('WADM', 'WADM - wadi mouth'), ('WADS', 'WADS - wadies'), ('WALL', 'WALL - wall'), ('MLWTR', 'MLWTR - water mill'), ('PMPW', 'PMPW - water pumping station'), ('RSVT', 'RSVT - water tank'), ('WTRC', 'WTRC - watercourse'), ('FLLS', 'FLLS - waterfall(s)'), ('WTRH', 'WTRH - waterhole(s)'), ('WTRW', 'WTRW - waterworks'), ('WEIR', 'WEIR - weir(s)'), ('WLL', 'WLL - well'), ('WLLS', 'WLLS - wells'), ('WTLD', 'WTLD - wetland'), ('STNW', 'STNW - whaling station'), ('WHRF', 'WHRF - wharf(-ves)'), ('WHRL', 'WHRL - whirlpool'), ('RESW', 'RESW - wildlife reserve'), ('MLWND', 'MLWND - windmill'), ('WRCK', 'WRCK - wreck'), ('ZN', 'ZN - zone'), ('ZOO', 'ZOO - zoo')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='latitude',
            field=akvo.rsr.fields.LatitudeField(default=0, help_text='Use a period to denote decimals.', blank=True, null=True, verbose_name='latitude', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='location_class',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Does the location refer to a physical structure such as a building, a populated place (e.g. city or village), an administrative division, or another topological feature (e.g. river, nature reserve)? For reference: <a href="http://iatistandard.org/201/codelists/GeographicLocationClass/" target="_blank">http://iatistandard.org/201/codelists/GeographicLocationClass/</a>.', max_length=1, verbose_name='class', choices=[('1', '1 - Administrative Region'), ('2', '2 - Populated Place'), ('3', '3 - Structure'), ('4', '4 - Other Topographical Feature')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='location_code',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter a code to identify the region. Codes are based on DAC region codes. Where an activity is considered global, the code 998 can be used. For reference: <a href="http://www.oecd.org/dac/stats/dacandcrscodelists.htm" target="_blank">http://www.oecd.org/dac/stats/dacandcrscodelists.htm</a>.', max_length=25, verbose_name='code', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='location_reach',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Does this location describe where the activity takes place or where the intended beneficiaries reside?', max_length=1, verbose_name='reach', choices=[('1', '1 - Activity'), ('2', '2 - Intended Beneficiaries')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='longitude',
            field=akvo.rsr.fields.LongitudeField(default=0, help_text='Use a period to denote decimals.', blank=True, null=True, verbose_name='longitude', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='name',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The human-readable name for the location.', max_length=100, verbose_name='name', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='postcode',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=10, verbose_name='postal code', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='reference',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='An internal reference that describes the location in the reporting organisation\'s own system. For reference see: <a href="http://iatistandard.org/201/activity-standard/iati-activities/iati-activity/location/#attributes" target="_blank">http://iatistandard.org/201/activity-standard/iati-activities/iati-activity/location/#attributes</a>.', max_length=50, verbose_name='reference', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='state',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='state', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='address_1',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 1', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='address_2',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 2', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='city',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='city', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='latitude',
            field=akvo.rsr.fields.LatitudeField(default=0, help_text='Use a period to denote decimals.', blank=True, null=True, verbose_name='latitude', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='longitude',
            field=akvo.rsr.fields.LongitudeField(default=0, help_text='Use a period to denote decimals.', blank=True, null=True, verbose_name='longitude', db_index=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='postcode',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=10, verbose_name='postal code', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectupdatelocation',
            name='state',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='state', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientcountry',
            name='country',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The country that benefits from the project.', max_length=2, verbose_name='recipient country', choices=[('AF', 'AF - Afghanistan'), ('AX', 'AX - \xc5land Islands'), ('AL', 'AL - Albania'), ('DZ', 'DZ - Algeria'), ('AS', 'AS - American Samoa'), ('AD', 'AD - Andorra'), ('AO', 'AO - Angola'), ('AI', 'AI - Anguilla'), ('AQ', 'AQ - Antarctica'), ('AG', 'AG - Antigua and Barbuda'), ('AR', 'AR - Argentina'), ('AM', 'AM - Armenia'), ('AW', 'AW - Aruba'), ('AU', 'AU - Australia'), ('AT', 'AT - Austria'), ('AZ', 'AZ - Azerbaijan'), ('BS', 'BS - Bahamas'), ('BH', 'BH - Bahrain'), ('BD', 'BD - Bangladesh'), ('BB', 'BB - Barbados'), ('BY', 'BY - Belarus'), ('BE', 'BE - Belgium'), ('BZ', 'BZ - Belize'), ('BJ', 'BJ - Benin'), ('BM', 'BM - Bermuda'), ('BT', 'BT - Bhutan'), ('BO', 'BO - Bolivia, Plurinational State of'), ('BQ', 'BQ - Bonaire, Saint Eustatius and Saba'), ('BA', 'BA - Bosnia and Herzegovina'), ('BW', 'BW - Botswana'), ('BV', 'BV - Bouvet Island'), ('BR', 'BR - Brazil'), ('IO', 'IO - British Indian Ocean Territory'), ('BN', 'BN - Brunei Darussalam'), ('BG', 'BG - Bulgaria'), ('BF', 'BF - Burkina Faso'), ('BI', 'BI - Burundi'), ('KH', 'KH - Cambodia'), ('CM', 'CM - Cameroon'), ('CA', 'CA - Canada'), ('CV', 'CV - Cape Verde'), ('KY', 'KY - Cayman Islands'), ('CF', 'CF - Central African Republic'), ('TD', 'TD - Chad'), ('CL', 'CL - Chile'), ('CN', 'CN - China'), ('CX', 'CX - Christmas Island'), ('CC', 'CC - Cocos (Keeling) Islands'), ('CO', 'CO - Colombia'), ('KM', 'KM - Comoros'), ('CG', 'CG - Congo'), ('CD', 'CD - Congo, The Democratic Republic of the'), ('CK', 'CK - Cook Islands'), ('CR', 'CR - Costa Rica'), ('CI', 'CI - C\xf4te Divoire'), ('HR', 'HR - Croatia'), ('CU', 'CU - Cuba'), ('CW', 'CW - Cura\xe7ao'), ('CY', 'CY - Cyprus'), ('CZ', 'CZ - Czech Republic'), ('DK', 'DK - Denmark'), ('DJ', 'DJ - Djibouti'), ('DM', 'DM - Dominica'), ('DO', 'DO - Dominican Republic'), ('EC', 'EC - Ecuador'), ('EG', 'EG - Egypt'), ('SV', 'SV - El Salvador'), ('GQ', 'GQ - Equatorial Guinea'), ('ER', 'ER - Eritrea'), ('EE', 'EE - Estonia'), ('ET', 'ET - Ethiopia'), ('FK', 'FK - Falkland Islands (Malvinas)'), ('FO', 'FO - Faroe Islands'), ('FJ', 'FJ - Fiji'), ('FI', 'FI - Finland'), ('FR', 'FR - France'), ('GF', 'GF - French Guiana'), ('PF', 'PF - French Polynesia'), ('TF', 'TF - French Southern Territories'), ('GA', 'GA - Gabon'), ('GM', 'GM - Gambia'), ('GE', 'GE - Georgia'), ('DE', 'DE - Germany'), ('GH', 'GH - Ghana'), ('GI', 'GI - Gibraltar'), ('GR', 'GR - Greece'), ('GL', 'GL - Greenland'), ('GD', 'GD - Grenada'), ('GP', 'GP - Guadeloupe'), ('GU', 'GU - Guam'), ('GT', 'GT - Guatemala'), ('GG', 'GG - Guernsey'), ('GN', 'GN - Guinea'), ('GW', 'GW - Guinea-Bissau'), ('GY', 'GY - Guyana'), ('HT', 'HT - Haiti'), ('HM', 'HM - Heard Island and Mcdonald Islands'), ('VA', 'VA - Holy See (Vatican City State)'), ('HN', 'HN - Honduras'), ('HK', 'HK - Hong Kong'), ('HU', 'HU - Hungary'), ('IS', 'IS - Iceland'), ('IN', 'IN - India'), ('ID', 'ID - Indonesia'), ('IR', 'IR - Iran, Islamic Republic of'), ('IQ', 'IQ - Iraq'), ('IE', 'IE - Ireland'), ('IM', 'IM - Isle of Man'), ('IL', 'IL - Israel'), ('IT', 'IT - Italy'), ('JM', 'JM - Jamaica'), ('JP', 'JP - Japan'), ('JE', 'JE - Jersey'), ('JO', 'JO - Jordan'), ('KZ', 'KZ - Kazakhstan'), ('KE', 'KE - Kenya'), ('KI', 'KI - Kiribati'), ('KP', 'KP - Korea, Democratic Peoples Republic of'), ('KR', 'KR - Korea, Republic of'), ('XK', 'XK - Kosovo'), ('KW', 'KW - Kuwait'), ('KG', 'KG - Kyrgyzstan'), ('LA', 'LA - Lao Peoples Democratic Republic'), ('LV', 'LV - Latvia'), ('LB', 'LB - Lebanon'), ('LS', 'LS - Lesotho'), ('LR', 'LR - Liberia'), ('LY', 'LY - Libyan Arab Jamahiriya'), ('LI', 'LI - Liechtenstein'), ('LT', 'LT - Lithuania'), ('LU', 'LU - Luxembourg'), ('MO', 'MO - Macao'), ('MK', 'MK - Macedonia, The Former Yugoslav Republic of'), ('MG', 'MG - Madagascar'), ('MW', 'MW - Malawi'), ('MY', 'MY - Malaysia'), ('MV', 'MV - Maldives'), ('ML', 'ML - Mali'), ('MT', 'MT - Malta'), ('MH', 'MH - Marshall Islands'), ('MQ', 'MQ - Martinique'), ('MR', 'MR - Mauritania'), ('MU', 'MU - Mauritius'), ('YT', 'YT - Mayotte'), ('MX', 'MX - Mexico'), ('FM', 'FM - Micronesia, Federated States of'), ('MD', 'MD - Moldova, Republic of'), ('MC', 'MC - Monaco'), ('MN', 'MN - Mongolia'), ('ME', 'ME - Montenegro'), ('MS', 'MS - Montserrat'), ('MA', 'MA - Morocco'), ('MZ', 'MZ - Mozambique'), ('MM', 'MM - Myanmar'), ('NA', 'NA - Namibia'), ('NR', 'NR - Nauru'), ('NP', 'NP - Nepal'), ('NL', 'NL - Netherlands'), ('AN', 'AN - Netherland Antilles'), ('NC', 'NC - New Caledonia'), ('NZ', 'NZ - New Zealand'), ('NI', 'NI - Nicaragua'), ('NE', 'NE - Niger'), ('NG', 'NG - Nigeria'), ('NU', 'NU - Niue'), ('NF', 'NF - Norfolk Island'), ('MP', 'MP - Northern Mariana Islands'), ('NO', 'NO - Norway'), ('OM', 'OM - Oman'), ('PK', 'PK - Pakistan'), ('PW', 'PW - Palau'), ('PS', 'PS - Palestinian Territory, Occupied'), ('PA', 'PA - Panama'), ('PG', 'PG - Papua New Guinea'), ('PY', 'PY - Paraguay'), ('PE', 'PE - Peru'), ('PH', 'PH - Philippines'), ('PN', 'PN - Pitcairn'), ('PL', 'PL - Poland'), ('PT', 'PT - Portugal'), ('PR', 'PR - Puerto Rico'), ('QA', 'QA - Qatar'), ('RE', 'RE - Reunion'), ('RO', 'RO - Romania'), ('RU', 'RU - Russian Federation'), ('RW', 'RW - Rwanda'), ('BL', 'BL - Saint Barth\xe9lemy'), ('SH', 'SH - Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'KN - Saint Kitts and Nevis'), ('LC', 'LC - Saint Lucia'), ('MF', 'MF - Saint Martin (French Part)'), ('PM', 'PM - Saint Pierre and Miquelon'), ('VC', 'VC - Saint Vincent and the Grenadines'), ('WS', 'WS - Samoa'), ('SM', 'SM - San Marino'), ('ST', 'ST - Sao Tome and Principe'), ('SA', 'SA - Saudi Arabia'), ('SN', 'SN - Senegal'), ('RS', 'RS - Serbia'), ('SC', 'SC - Seychelles'), ('SL', 'SL - Sierra Leone'), ('SG', 'SG - Singapore'), ('SX', 'SX - Sint Maarten (Dutch Part)'), ('SK', 'SK - Slovakia'), ('SI', 'SI - Slovenia'), ('SB', 'SB - Solomon Islands'), ('SO', 'SO - Somalia'), ('ZA', 'ZA - South Africa'), ('GS', 'GS - South Georgia and the South Sandwich Islands'), ('SS', 'SS - South Sudan'), ('ES', 'ES - Spain'), ('LK', 'LK - Sri Lanka'), ('SD', 'SD - Sudan'), ('SR', 'SR - Suriname'), ('SJ', 'SJ - Svalbard and Jan Mayen'), ('SZ', 'SZ - Swaziland'), ('SE', 'SE - Sweden'), ('CH', 'CH - Switzerland'), ('SY', 'SY - Syrian Arab Republic'), ('TW', 'TW - Taiwan, Province of China'), ('TJ', 'TJ - Tajikistan'), ('TZ', 'TZ - Tanzania, United Republic of'), ('TH', 'TH - Thailand'), ('TL', 'TL - Timor-Leste'), ('TG', 'TG - Togo'), ('TK', 'TK - Tokelau'), ('TO', 'TO - Tonga'), ('TT', 'TT - Trinidad and Tobago'), ('TN', 'TN - Tunisia'), ('TR', 'TR - Turkey'), ('TM', 'TM - Turkmenistan'), ('TC', 'TC - Turks and Caicos Islands'), ('TV', 'TV - Tuvalu'), ('UG', 'UG - Uganda'), ('UA', 'UA - Ukraine'), ('AE', 'AE - United Arab Emirates'), ('GB', 'GB - United Kingdom'), ('US', 'US - United States'), ('UM', 'UM - United States Minor Outlying Islands'), ('UY', 'UY - Uruguay'), ('UZ', 'UZ - Uzbekistan'), ('VU', 'VU - Vanuatu'), ('VE', 'VE - Venezuela, Bolivarian Republic of'), ('VN', 'VN - Viet Nam'), ('VG', 'VG - Virgin Islands, British'), ('VI', 'VI - Virgin Islands, U.S.'), ('WF', 'WF - Wallis and Futuna'), ('EH', 'EH - Western Sahara'), ('YE', 'YE - Yemen'), ('ZM', 'ZM - Zambia'), ('ZW', 'ZW - Zimbabwe')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientcountry',
            name='percentage',
            field=models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='The percentage of total commitments or total activity budget allocated to this country. Content must be a positive decimal number between 0 and 100, with no percentage sign. Percentages for all reported countries and regions MUST add up to 100%. Use a period to denote decimals.', null=True, verbose_name='recipient country percentage'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientcountry',
            name='text',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter additional information about the recipient country, if necessary.', max_length=50, verbose_name='recipient country description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientregion',
            name='percentage',
            field=models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='If the activity occurs in more than one region, the percentage of activity commitment allocated to each region should be provided if available. Percentages should add up to 100% of the activity being reported if they are shown for each region. Use a period to denote decimals.', null=True, verbose_name='recipient region percentage'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientregion',
            name='region',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This identifies the region in which the activity takes place. Regions can be supra-national (a geographical or administrative grouping of countries into a region - e.g. Sub-Saharan Africa, Mekong Delta) or \'global\' (activities benefiting substantially all developing countries). For the codes to use, please see <a href="http://iatistandard.org/201/codelists/Region/" target="_blank">http://iatistandard.org/201/codelists/Region/</a>.', max_length=3, verbose_name='recipient region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North and Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South and Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientregion',
            name='region_vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The vocabulary from which the region code is drawn. If it is not present 1 \u2013 \'OECD DAC\' is assumed. For more information, see <a href="http://iatistandard.org/201/codelists/RegionVocabulary/" target="_blank">http://iatistandard.org/201/codelists/RegionVocabulary/</a>.', max_length=1, verbose_name='recipient region vocabulary', choices=[('1', '1 - OECD DAC'), ('2', '2 - UN')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientregion',
            name='text',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a description.', max_length=50, verbose_name='recipient region description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='relatedproject',
            name='related_iati_id',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='In case you know the IATI identifier of a project that does not exist in RSR, you can point out the IATI identifier here.', max_length=100, verbose_name='related project iati identifier', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='relatedproject',
            name='relation',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The relationship between a project and related project. There are five types of relationships:<br/>1 - Parent: the project you are now creating is a sub-component of the selected related project.<br/>2 - Child: the selected related project is a sub-component of the project you are now creating.<br/>3 - Sibling: the selected related project and the project you are now creating are both sub-components of a parent project.<br/>4 - Co-funded: a project that receives funding from more than one organisation.<br/>5 - Third party: a report by another organisation on the same project that you are reporting on.', max_length=1, verbose_name='relation', choices=[('1', '1 - Parent'), ('2', '2 - Child'), ('3', '3 - Sibling'), ('4', '4 - Co-funded'), ('5', '5 - Third Party')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='result',
            name='aggregation_status',
            field=models.BooleanField(null=True, help_text='Indicate whether the data in the result set can be accumulated.', verbose_name='aggregation status'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='result',
            name='description',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='You can provide further information of the result here.', max_length=2000, verbose_name='result description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='result',
            name='title',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The aim of the project in one sentence. This doesn\u2019t need to be something that can be directly counted, but it should describe an overall goal of the project. There can be multiple results for one project.', max_length=255, verbose_name='result title', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='result',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Choose whether the result is an output, outcome or impact.<br/>1 - Output: Direct result of the project activities. E.g. number of booklets produced, workshops held, people trained, latrines build.<br/>2 - Outcome: The changes or benefits that result from the program activities and resulting outputs. E.g number of beneficiaries reached, knowledge increased, capacity build, monitored behaviour change.<br/>3 - Impact: Long-term results of program (on population) that can be attributed to the project outputs and outcomes. E.g improved health, increased political participation of women.<br/>9 - Other: Another type of result, not specified above.', max_length=1, verbose_name='result type', choices=[('1', '1 - Output'), ('2', '2 - Outcome'), ('3', '3 - Impact'), ('9', '9 - Other')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='sector',
            name='percentage',
            field=models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text="Percentages should add up to 100% of the activity being reported if they are shown for each sector. Fill in 100% if there's one sector. Use a period to denote decimals.", null=True, verbose_name='sector percentage'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='sector',
            name='sector_code',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Please select DAC-5 or DAC-3 as the sector vocabulary first, then this fieldwill be populated with the corresponding codes. For other vocabularies, it is possible to fill in any code. See these lists for the DAC-5 and DAC-3 sector codes: <a href="http://iatistandard.org/201/codelists/Sector/" target="_blank">DAC-5 sector codes</a> and <a href="http://iatistandard.org/201/codelists/SectorCategory/" target="_blank">DAC-3 sector codes</a>.', max_length=5, verbose_name='sector code', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='sector',
            name='text',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a description.', max_length=100, verbose_name='sector description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='sector',
            name='vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the code for the vocabulary used to describe the sector. Sectors should be mapped to DAC sectors to enable international comparison.', max_length=5, verbose_name='sector vocabulary', choices=[('1', '1 - OECD DAC CRS Purpose Codes (5 digit)'), ('2', '2 - OECD DAC CRS Purpose Codes (3 digit)'), ('3', '3 - Classification of the Functions of Government (UN)'), ('4', '4 - Statistical classification of economic activities in the European Community'), ('5', '5 - National Taxonomy for Exempt Entities (USA)'), ('6', '6 - AidData'), ('99', '99 - Reporting Organisation'), ('98', '98 - Reporting Organisation 2')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='aid_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the type of aid being supplied. For reference, please visit: <a href="http://iatistandard.org/201/codelists/AidType/" target="_blank">http://iatistandard.org/201/codelists/AidType/</a>.', max_length=3, verbose_name='transaction aid type', choices=[('A01', 'A01 - General budget support'), ('A02', 'A02 - Sector budget support'), ('B01', 'B01 - Core support to NGOs, other private bodies, PPPs and research institutes'), ('B02', 'B02 - Core contributions to multilateral institutions'), ('B03', 'B03 - Contributions to specific-purpose programmes and funds managed by international organisations (multilateral, INGO)'), ('B04', 'B04 - Basket funds/pooled funding'), ('C01', 'C01 - Project-type interventions'), ('D01', 'D01 - Donor country personnel'), ('D02', 'D02 - Other technical assistance'), ('E01', 'E01 - Scholarships/training in donor country'), ('E02', 'E02 - Imputed student costs'), ('F01', 'F01 - Debt relief'), ('G01', 'G01 - Administrative costs not included elsewhere'), ('H01', 'H01 - Development awareness'), ('H02', 'H02 - Refugees in donor countries')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='description',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter additional information for the transaction, if necessary.', max_length=255, verbose_name='transaction description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='disbursement_channel',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the channel through which the funds will flow for this transaction, from an IATI codelist. For reference, please visit: <a href="http://iatistandard.org/201/codelists/DisbursementChannel/" target="_blank">http://iatistandard.org/201/codelists/DisbursementChannel/</a>.', max_length=1, verbose_name='transaction disbursement channel', choices=[('1', '1 - Money is disbursed through central Ministry of Finance or Treasury'), ('2', '2 - Money is disbursed directly to the implementing institution and managed through a separate bank account'), ('3', '3 - Aid in kind: Donors utilise third party agencies, e.g. NGOs or management companies'), ('4', '4 - Aid in kind: Donors manage funds themselves')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='finance_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='For reference, please visit: <a href="http://iatistandard.org/201/codelists/FinanceType/" target="_blank">http://iatistandard.org/201/codelists/FinanceType/</a>.', max_length=3, verbose_name='transaction finance type', choices=[('110', '110 - Aid grant excluding debt reorganisation'), ('111', '111 - Subsidies to national private investors'), ('210', '210 - Interest subsidy grant in AF'), ('211', '211 - Interest subsidy to national private exporters'), ('310', '310 - Deposit basis'), ('311', '311 - Encashment basis'), ('410', '410 - Aid loan excluding debt reorganisation'), ('411', '411 - Investment-related loan to developing countries'), ('412', '412 - Loan in a joint venture with the recipient'), ('413', '413 - Loan to national private investor'), ('414', '414 - Loan to national private exporter'), ('451', '451 - Non-banks guaranteed export credits'), ('452', '452 - Non-banks non-guaranteed portions of guaranteed export credits'), ('453', '453 - Bank export credits'), ('510', '510 - Acquisition of equity as part of a joint venture with the recipient'), ('511', '511 - Acquisition of equity not part of joint venture in developing countries'), ('512', '512 - Other acquisition of equity. Investment in a country on the DAC List of ODA Recipients that is not made to acquire a lasting interest in an enterprise.'), ('610', '610 - Debt forgiveness: ODA claims (P)'), ('611', '611 - Debt forgiveness: ODA claims (I)'), ('612', '612 - Debt forgiveness: OOF claims (P)'), ('613', '613 - Debt forgiveness: OOF claims (I)'), ('614', '614 - Debt forgiveness: Private claims (P)'), ('615', '615 - Debt forgiveness: Private claims (I)'), ('616', '616 - Debt forgiveness: OOF claims (DSR)'), ('617', '617 - Debt forgiveness: Private claims (DSR)'), ('618', '618 - Debt forgiveness: Other'), ('620', '620 - Debt rescheduling: ODA claims (P)'), ('621', '621 - Debt rescheduling: ODA claims (I)'), ('622', '622 - Debt rescheduling: OOF claims (P)'), ('623', '623 - Debt rescheduling: OOF claims (I)'), ('624', '624 - Debt rescheduling: Private claims (P)'), ('625', '625 - Debt rescheduling: Private claims (I)'), ('626', '626 - Debt rescheduling: OOF claims (DSR)'), ('627', '627 - Debt rescheduling: Private claims (DSR)'), ('630', '630 - Debt rescheduling: OOF claim (DSR - original loan principal)'), ('631', '631 - Debt rescheduling: OOF claim (DSR - original loan interest)'), ('632', '632 - Debt rescheduling: Private claim (DSR - original loan principal)'), ('710', '710 - Foreign direct investment'), ('711', '711 - Other foreign direct investment, including reinvested earnings'), ('810', '810 - Bank bonds'), ('811', '811 - Non-bank bonds'), ('910', '910 - Other bank securities/claims'), ('911', '911 - Other non-bank securities/claims'), ('912', '912 - Securities and other instruments issued by multilateral agencies')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='flow_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='For reference, please visit: <a href="http://iatistandard.org/201/codelists/FlowType/" target="_blank">http://iatistandard.org/201/codelists/FlowType/</a>.', max_length=2, verbose_name='transaction flow type', choices=[('10', '10 - ODA'), ('20', '20 - OOF'), ('30', '30 - Private NGO and other private sources'), ('35', '35 - Private Market'), ('40', '40 - Non flow'), ('50', '50 - Other flows')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='provider_organisation_activity',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='If incoming funds are being provided from the budget of another activity that is reported to IATI, it is STRONGLY RECOMMENDED that this should record the provider\u2019s unique IATI activity identifier for that activity.', max_length=50, verbose_name='provider organisation activity id', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='receiver_organisation_activity',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The internal identifier used by the receiver organisation for its activity that receives the funds from this transaction (not to be confused with the IATI identifier for the target activity).', max_length=50, verbose_name='receiver organisation activity id', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='recipient_country',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the country that will benefit from this transaction. It can only be one country per transaction. For reference, please visit: <a href="http://iatistandard.org/201/codelists/Country/" target="_blank">http://iatistandard.org/201/codelists/Country/</a>.', max_length=2, verbose_name='transaction recipient country', choices=[('AF', 'AF - Afghanistan'), ('AX', 'AX - \xc5land Islands'), ('AL', 'AL - Albania'), ('DZ', 'DZ - Algeria'), ('AS', 'AS - American Samoa'), ('AD', 'AD - Andorra'), ('AO', 'AO - Angola'), ('AI', 'AI - Anguilla'), ('AQ', 'AQ - Antarctica'), ('AG', 'AG - Antigua and Barbuda'), ('AR', 'AR - Argentina'), ('AM', 'AM - Armenia'), ('AW', 'AW - Aruba'), ('AU', 'AU - Australia'), ('AT', 'AT - Austria'), ('AZ', 'AZ - Azerbaijan'), ('BS', 'BS - Bahamas'), ('BH', 'BH - Bahrain'), ('BD', 'BD - Bangladesh'), ('BB', 'BB - Barbados'), ('BY', 'BY - Belarus'), ('BE', 'BE - Belgium'), ('BZ', 'BZ - Belize'), ('BJ', 'BJ - Benin'), ('BM', 'BM - Bermuda'), ('BT', 'BT - Bhutan'), ('BO', 'BO - Bolivia, Plurinational State of'), ('BQ', 'BQ - Bonaire, Saint Eustatius and Saba'), ('BA', 'BA - Bosnia and Herzegovina'), ('BW', 'BW - Botswana'), ('BV', 'BV - Bouvet Island'), ('BR', 'BR - Brazil'), ('IO', 'IO - British Indian Ocean Territory'), ('BN', 'BN - Brunei Darussalam'), ('BG', 'BG - Bulgaria'), ('BF', 'BF - Burkina Faso'), ('BI', 'BI - Burundi'), ('KH', 'KH - Cambodia'), ('CM', 'CM - Cameroon'), ('CA', 'CA - Canada'), ('CV', 'CV - Cape Verde'), ('KY', 'KY - Cayman Islands'), ('CF', 'CF - Central African Republic'), ('TD', 'TD - Chad'), ('CL', 'CL - Chile'), ('CN', 'CN - China'), ('CX', 'CX - Christmas Island'), ('CC', 'CC - Cocos (Keeling) Islands'), ('CO', 'CO - Colombia'), ('KM', 'KM - Comoros'), ('CG', 'CG - Congo'), ('CD', 'CD - Congo, The Democratic Republic of the'), ('CK', 'CK - Cook Islands'), ('CR', 'CR - Costa Rica'), ('CI', 'CI - C\xf4te Divoire'), ('HR', 'HR - Croatia'), ('CU', 'CU - Cuba'), ('CW', 'CW - Cura\xe7ao'), ('CY', 'CY - Cyprus'), ('CZ', 'CZ - Czech Republic'), ('DK', 'DK - Denmark'), ('DJ', 'DJ - Djibouti'), ('DM', 'DM - Dominica'), ('DO', 'DO - Dominican Republic'), ('EC', 'EC - Ecuador'), ('EG', 'EG - Egypt'), ('SV', 'SV - El Salvador'), ('GQ', 'GQ - Equatorial Guinea'), ('ER', 'ER - Eritrea'), ('EE', 'EE - Estonia'), ('ET', 'ET - Ethiopia'), ('FK', 'FK - Falkland Islands (Malvinas)'), ('FO', 'FO - Faroe Islands'), ('FJ', 'FJ - Fiji'), ('FI', 'FI - Finland'), ('FR', 'FR - France'), ('GF', 'GF - French Guiana'), ('PF', 'PF - French Polynesia'), ('TF', 'TF - French Southern Territories'), ('GA', 'GA - Gabon'), ('GM', 'GM - Gambia'), ('GE', 'GE - Georgia'), ('DE', 'DE - Germany'), ('GH', 'GH - Ghana'), ('GI', 'GI - Gibraltar'), ('GR', 'GR - Greece'), ('GL', 'GL - Greenland'), ('GD', 'GD - Grenada'), ('GP', 'GP - Guadeloupe'), ('GU', 'GU - Guam'), ('GT', 'GT - Guatemala'), ('GG', 'GG - Guernsey'), ('GN', 'GN - Guinea'), ('GW', 'GW - Guinea-Bissau'), ('GY', 'GY - Guyana'), ('HT', 'HT - Haiti'), ('HM', 'HM - Heard Island and Mcdonald Islands'), ('VA', 'VA - Holy See (Vatican City State)'), ('HN', 'HN - Honduras'), ('HK', 'HK - Hong Kong'), ('HU', 'HU - Hungary'), ('IS', 'IS - Iceland'), ('IN', 'IN - India'), ('ID', 'ID - Indonesia'), ('IR', 'IR - Iran, Islamic Republic of'), ('IQ', 'IQ - Iraq'), ('IE', 'IE - Ireland'), ('IM', 'IM - Isle of Man'), ('IL', 'IL - Israel'), ('IT', 'IT - Italy'), ('JM', 'JM - Jamaica'), ('JP', 'JP - Japan'), ('JE', 'JE - Jersey'), ('JO', 'JO - Jordan'), ('KZ', 'KZ - Kazakhstan'), ('KE', 'KE - Kenya'), ('KI', 'KI - Kiribati'), ('KP', 'KP - Korea, Democratic Peoples Republic of'), ('KR', 'KR - Korea, Republic of'), ('XK', 'XK - Kosovo'), ('KW', 'KW - Kuwait'), ('KG', 'KG - Kyrgyzstan'), ('LA', 'LA - Lao Peoples Democratic Republic'), ('LV', 'LV - Latvia'), ('LB', 'LB - Lebanon'), ('LS', 'LS - Lesotho'), ('LR', 'LR - Liberia'), ('LY', 'LY - Libyan Arab Jamahiriya'), ('LI', 'LI - Liechtenstein'), ('LT', 'LT - Lithuania'), ('LU', 'LU - Luxembourg'), ('MO', 'MO - Macao'), ('MK', 'MK - Macedonia, The Former Yugoslav Republic of'), ('MG', 'MG - Madagascar'), ('MW', 'MW - Malawi'), ('MY', 'MY - Malaysia'), ('MV', 'MV - Maldives'), ('ML', 'ML - Mali'), ('MT', 'MT - Malta'), ('MH', 'MH - Marshall Islands'), ('MQ', 'MQ - Martinique'), ('MR', 'MR - Mauritania'), ('MU', 'MU - Mauritius'), ('YT', 'YT - Mayotte'), ('MX', 'MX - Mexico'), ('FM', 'FM - Micronesia, Federated States of'), ('MD', 'MD - Moldova, Republic of'), ('MC', 'MC - Monaco'), ('MN', 'MN - Mongolia'), ('ME', 'ME - Montenegro'), ('MS', 'MS - Montserrat'), ('MA', 'MA - Morocco'), ('MZ', 'MZ - Mozambique'), ('MM', 'MM - Myanmar'), ('NA', 'NA - Namibia'), ('NR', 'NR - Nauru'), ('NP', 'NP - Nepal'), ('NL', 'NL - Netherlands'), ('AN', 'AN - Netherland Antilles'), ('NC', 'NC - New Caledonia'), ('NZ', 'NZ - New Zealand'), ('NI', 'NI - Nicaragua'), ('NE', 'NE - Niger'), ('NG', 'NG - Nigeria'), ('NU', 'NU - Niue'), ('NF', 'NF - Norfolk Island'), ('MP', 'MP - Northern Mariana Islands'), ('NO', 'NO - Norway'), ('OM', 'OM - Oman'), ('PK', 'PK - Pakistan'), ('PW', 'PW - Palau'), ('PS', 'PS - Palestinian Territory, Occupied'), ('PA', 'PA - Panama'), ('PG', 'PG - Papua New Guinea'), ('PY', 'PY - Paraguay'), ('PE', 'PE - Peru'), ('PH', 'PH - Philippines'), ('PN', 'PN - Pitcairn'), ('PL', 'PL - Poland'), ('PT', 'PT - Portugal'), ('PR', 'PR - Puerto Rico'), ('QA', 'QA - Qatar'), ('RE', 'RE - Reunion'), ('RO', 'RO - Romania'), ('RU', 'RU - Russian Federation'), ('RW', 'RW - Rwanda'), ('BL', 'BL - Saint Barth\xe9lemy'), ('SH', 'SH - Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'KN - Saint Kitts and Nevis'), ('LC', 'LC - Saint Lucia'), ('MF', 'MF - Saint Martin (French Part)'), ('PM', 'PM - Saint Pierre and Miquelon'), ('VC', 'VC - Saint Vincent and the Grenadines'), ('WS', 'WS - Samoa'), ('SM', 'SM - San Marino'), ('ST', 'ST - Sao Tome and Principe'), ('SA', 'SA - Saudi Arabia'), ('SN', 'SN - Senegal'), ('RS', 'RS - Serbia'), ('SC', 'SC - Seychelles'), ('SL', 'SL - Sierra Leone'), ('SG', 'SG - Singapore'), ('SX', 'SX - Sint Maarten (Dutch Part)'), ('SK', 'SK - Slovakia'), ('SI', 'SI - Slovenia'), ('SB', 'SB - Solomon Islands'), ('SO', 'SO - Somalia'), ('ZA', 'ZA - South Africa'), ('GS', 'GS - South Georgia and the South Sandwich Islands'), ('SS', 'SS - South Sudan'), ('ES', 'ES - Spain'), ('LK', 'LK - Sri Lanka'), ('SD', 'SD - Sudan'), ('SR', 'SR - Suriname'), ('SJ', 'SJ - Svalbard and Jan Mayen'), ('SZ', 'SZ - Swaziland'), ('SE', 'SE - Sweden'), ('CH', 'CH - Switzerland'), ('SY', 'SY - Syrian Arab Republic'), ('TW', 'TW - Taiwan, Province of China'), ('TJ', 'TJ - Tajikistan'), ('TZ', 'TZ - Tanzania, United Republic of'), ('TH', 'TH - Thailand'), ('TL', 'TL - Timor-Leste'), ('TG', 'TG - Togo'), ('TK', 'TK - Tokelau'), ('TO', 'TO - Tonga'), ('TT', 'TT - Trinidad and Tobago'), ('TN', 'TN - Tunisia'), ('TR', 'TR - Turkey'), ('TM', 'TM - Turkmenistan'), ('TC', 'TC - Turks and Caicos Islands'), ('TV', 'TV - Tuvalu'), ('UG', 'UG - Uganda'), ('UA', 'UA - Ukraine'), ('AE', 'AE - United Arab Emirates'), ('GB', 'GB - United Kingdom'), ('US', 'US - United States'), ('UM', 'UM - United States Minor Outlying Islands'), ('UY', 'UY - Uruguay'), ('UZ', 'UZ - Uzbekistan'), ('VU', 'VU - Vanuatu'), ('VE', 'VE - Venezuela, Bolivarian Republic of'), ('VN', 'VN - Viet Nam'), ('VG', 'VG - Virgin Islands, British'), ('VI', 'VI - Virgin Islands, U.S.'), ('WF', 'WF - Wallis and Futuna'), ('EH', 'EH - Western Sahara'), ('YE', 'YE - Yemen'), ('ZM', 'ZM - Zambia'), ('ZW', 'ZW - Zimbabwe')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='recipient_region',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the supranational geopolitical region (a geographical or administrative grouping of countries into a region - e.g. Sub-Saharan Africa, Mekong Delta) that will benefit from this transaction. For reference, please visit: <a href="http://iatistandard.org/201/codelists/Region/" target="_blank">http://iatistandard.org/201/codelists/Region/</a>.', max_length=3, verbose_name='transaction recipient region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North and Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South and Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='reference',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='Enter a reference for the transaction (eg. transaction number).', max_length=25, verbose_name='transaction reference', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='tied_status',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Whether the aid is untied, tied, or partially tied. For reference visit <a href="http://iatistandard.org/201/codelists/TiedStatus/" target="_blank">http://iatistandard.org/201/codelists/TiedStatus/</a>.', max_length=1, verbose_name='transaction tied status', choices=[('3', '3 - Partially tied'), ('4', '4 - Tied'), ('5', '5 - Untied')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the type of the transaction (e.g. commitment, disbursement, expenditure).', max_length=2, verbose_name='transaction type', choices=[('1', '1 - Incoming Funds'), ('2', '2 - Commitment'), ('3', '3 - Disbursement'), ('4', '4 - Expenditure'), ('5', '5 - Interest Repayment'), ('6', '6 - Loan Repayment'), ('7', '7 - Reimbursement'), ('8', '8 - Purchase of Equity'), ('9', '9 - Sale of Equity'), ('10', '10 - Credit Guarantee')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='value',
            field=models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='Enter the transaction amount. Use a period to denote decimals.', null=True, verbose_name='transaction value'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='value_date',
            field=models.DateField(help_text='The date to be used for determining the exchange rate for currency conversions of the transaction.', null=True, verbose_name='transaction value date', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transactionsector',
            name='code',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='A recognised code, from a recognised vocabulary, classifying the purpose of this transaction. If this element is used then ALL transaction elements should contain a transaction/sector element and iati-activity/sector should NOT be used. This element can be used multiple times, but only one sector can be reported per vocabulary.', max_length=5, verbose_name='transaction sector', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transactionsector',
            name='text',
            field=akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='transaction sector description', blank=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transactionsector',
            name='vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='An IATI code for the vocabulary (codelist) used for sector classifications. If omitted, OECD DAC 5-digit Purpose Codes are assumed. Note that at transaction level, only one sector per vocabulary can be reported.', max_length=5, verbose_name='transaction sector vocabulary', choices=[('1', '1 - OECD DAC CRS Purpose Codes (5 digit)'), ('2', '2 - OECD DAC CRS Purpose Codes (3 digit)'), ('3', '3 - Classification of the Functions of Government (UN)'), ('4', '4 - Statistical classification of economic activities in the European Community'), ('5', '5 - National Taxonomy for Exempt Entities (USA)'), ('6', '6 - AidData'), ('99', '99 - Reporting Organisation'), ('98', '98 - Reporting Organisation 2')]),
            preserve_default=True,
        ),
    ]
