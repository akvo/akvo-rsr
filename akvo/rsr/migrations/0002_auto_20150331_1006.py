# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import akvo.rsr.models.iati_export
import django.db.models.deletion
from django.conf import settings
import akvo.rsr.fields
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('rsr', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativeLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(max_length=25, verbose_name='administrative code', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='administrative vocabulary', choices=[('A1', 'A1 - Global Admininistrative Unit Layers'), ('A2', 'A2 - UN Second Administrative Level Boundary Project'), ('A3', 'A3 - Global Administrative Areas'), ('A4', 'A4 - ISO Country (3166-1 alpha-2)'), ('G1', 'G1 - Geonames'), ('G2', 'G2 - OpenStreetMap')])),
                ('level', models.PositiveSmallIntegerField(max_length=1, null=True, verbose_name='administrative level', blank=True)),
                ('location', models.ForeignKey(related_name='administratives', verbose_name='location', to='rsr.ProjectLocation')),
            ],
            options={
                'verbose_name': 'location administrative',
                'verbose_name_plural': 'location administratives',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CrsAdd',
            fields=[
                ('project', models.OneToOneField(primary_key=True, serialize=False, to='rsr.Project')),
                ('loan_terms_rate1', models.DecimalField(decimal_places=2, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=5, blank=True, null=True, verbose_name='rate 1')),
                ('loan_terms_rate2', models.DecimalField(decimal_places=2, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=5, blank=True, null=True, verbose_name='rate 2')),
                ('repayment_type', akvo.rsr.fields.ValidXMLCharField(max_length=1, verbose_name='repayment type', choices=[('1', '1 - Equal Principal Payments (EPP)'), ('2', '2 - Annuity'), ('3', '3 - Lump sum'), ('5', '5 - Other')])),
                ('repayment_plan', akvo.rsr.fields.ValidXMLCharField(max_length=2, verbose_name='repayment plan', choices=[('1', '1 - Annual'), ('2', '2 - Semi-annual'), ('4', '4 - Quarterly'), ('12', '12 - Monthly')])),
                ('commitment_date', models.DateField(null=True, verbose_name='commitment date', blank=True)),
                ('repayment_first_date', models.DateField(null=True, verbose_name='first repayment date', blank=True)),
                ('repayment_final_date', models.DateField(null=True, verbose_name='final repayment date', blank=True)),
                ('loan_status_year', models.PositiveIntegerField(max_length=4, null=True, verbose_name='loan status year', blank=True)),
                ('loan_status_currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Croatian Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - New Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XCD', 'XCD - East Caribbean Dollar'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('loan_status_value_date', models.DateField(null=True, verbose_name='loan status value date', blank=True)),
                ('interest_received', models.DecimalField(null=True, verbose_name='interest received', max_digits=10, decimal_places=2, blank=True)),
                ('principal_outstanding', models.DecimalField(null=True, verbose_name='principal outstanding', max_digits=10, decimal_places=2, blank=True)),
                ('principal_arrears', models.DecimalField(null=True, verbose_name='principal arrears', max_digits=10, decimal_places=2, blank=True)),
                ('interest_arrears', models.DecimalField(null=True, verbose_name='interest arrears', max_digits=10, decimal_places=2, blank=True)),
            ],
            options={
                'verbose_name': 'CRS reporting',
                'verbose_name_plural': 'CRS reporting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CrsAddOtherFlag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(max_length=1, verbose_name='code', choices=[('1', '1 - Free standing technical cooperation'), ('2', '2 - Programme-based approach'), ('3', '3 - Investment project'), ('4', '4 - Associated financing')])),
                ('significance', models.NullBooleanField(verbose_name='significance')),
                ('crs', models.ForeignKey(related_name='other_flags', verbose_name='crs', to='rsr.CrsAdd')),
            ],
            options={
                'verbose_name': 'CRS other flag',
                'verbose_name_plural': 'CRS other flags',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Fss',
            fields=[
                ('project', models.OneToOneField(primary_key=True, serialize=False, to='rsr.Project')),
                ('extraction_date', models.DateField(null=True, verbose_name='extraction date', blank=True)),
                ('priority', models.NullBooleanField(verbose_name='priority')),
                ('phaseout_year', models.PositiveIntegerField(max_length=4, null=True, verbose_name='phaseout year', blank=True)),
            ],
            options={
                'verbose_name': 'FSS',
                'verbose_name_plural': 'FSS',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FssForecast',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('year', models.PositiveIntegerField(max_length=4, null=True, verbose_name='year', blank=True)),
                ('value_date', models.DateField(null=True, verbose_name='value date', blank=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Croatian Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - New Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XCD', 'XCD - East Caribbean Dollar'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(null=True, verbose_name='interest received', max_digits=10, decimal_places=2, blank=True)),
                ('fss', models.ForeignKey(related_name='forecasts', verbose_name='fss', to='rsr.Fss')),
            ],
            options={
                'verbose_name': 'FSS forecast',
                'verbose_name_plural': 'FSS forecasts',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiExport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('version', akvo.rsr.fields.ValidXMLCharField(default=b'2.01', max_length=4, verbose_name='version')),
                ('status', models.PositiveSmallIntegerField(default=1, verbose_name='status')),
                ('iati_file', models.FileField(upload_to=akvo.rsr.models.iati_export.file_path, verbose_name='IATI file', blank=True)),
                ('is_public', models.BooleanField(default=True, verbose_name='public')),
                ('projects', models.ManyToManyField(to='rsr.Project', verbose_name='projects')),
                ('reporting_organisation', models.ForeignKey(related_name='iati_exports', verbose_name='reporting organisation', to='rsr.Organisation')),
                ('user', models.ForeignKey(related_name='iati_exports', verbose_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IATI export',
                'verbose_name_plural': 'IATI exports',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TransactionSector',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(max_length=5, verbose_name='sector', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='(max 100 characters)', max_length=100, verbose_name='description', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=5, verbose_name='vocabulary', choices=[('1', '1 - OECD DAC CRS Purpose Codes (5 digit)'), ('2', '2 - OECD DAC CRS Purpose Codes (3 digit)'), ('3', '3 - Classification of the Functions of Government (UN)'), ('4', '4 - Statistical classification of economic activities in the European Community'), ('5', '5 - National Taxonomy for Exempt Entities (USA)'), ('6', '6 - AidData'), ('99', '99 - Reporting Organisation'), ('98', '98 - Reporting Organisation 2')])),
                ('project', models.ForeignKey(related_name='sectors', verbose_name='transaction', to='rsr.Transaction')),
            ],
            options={
                'verbose_name': 'transaction sector',
                'verbose_name_plural': 'transaction sectors',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='transactionsector',
            unique_together=set([('project', 'vocabulary')]),
        ),
        migrations.RemoveField(
            model_name='budgetitem',
            name='period_end_text',
        ),
        migrations.RemoveField(
            model_name='budgetitem',
            name='period_start_text',
        ),
        migrations.RemoveField(
            model_name='countrybudgetitem',
            name='vocabulary',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='description_type',
        ),
        migrations.RemoveField(
            model_name='projectcondition',
            name='attached',
        ),
        migrations.RemoveField(
            model_name='projectlocation',
            name='administrative_code',
        ),
        migrations.RemoveField(
            model_name='projectlocation',
            name='administrative_level',
        ),
        migrations.RemoveField(
            model_name='projectlocation',
            name='administrative_vocabulary',
        ),
        migrations.RemoveField(
            model_name='result',
            name='description_type',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='aid_type_text',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='disbursement_channel_text',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='finance_type_text',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='flow_type_text',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='tied_status_text',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='transaction_type_text',
        ),
        migrations.AddField(
            model_name='organisation',
            name='public_iati_file',
            field=models.BooleanField(default=True, verbose_name='Show latest exported IATI file on organisation page.'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='country_budget_vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='country budget vocabulary', choices=[('1', '1 - IATI'), ('2', '2 - Country Chart of Accounts'), ('3', '3 - Other Country System'), ('4', '4 - Reporting Organisation'), ('5', '5 - Other')]),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='relatedproject',
            name='related_iati_id',
            field=akvo.rsr.fields.ValidXMLCharField(help_text='The IATI Identifier for the related project.<br>Fill this in if the related project does not exist in RSR', max_length=100, verbose_name='related project IATI identifier', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='transaction',
            name='recipient_country',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='recipient country', choices=[('AF', 'AF - Afghanistan'), ('AX', 'AX - \xc5land Islands'), ('AL', 'AL - Albania'), ('DZ', 'DZ - Algeria'), ('AS', 'AS - American Samoa'), ('AD', 'AD - Andorra'), ('AO', 'AO - Angola'), ('AI', 'AI - Anguilla'), ('AQ', 'AQ - Antarctica'), ('AG', 'AG - Antigua and Barbuda'), ('AR', 'AR - Argentina'), ('AM', 'AM - Armenia'), ('AW', 'AW - Aruba'), ('AU', 'AU - Australia'), ('AT', 'AT - Austria'), ('AZ', 'AZ - Azerbaijan'), ('BS', 'BS - Bahamas'), ('BH', 'BH - Bahrain'), ('BD', 'BD - Bangladesh'), ('BB', 'BB - Barbados'), ('BY', 'BY - Belarus'), ('BE', 'BE - Belgium'), ('BZ', 'BZ - Belize'), ('BJ', 'BJ - Benin'), ('BM', 'BM - Bermuda'), ('BT', 'BT - Bhutan'), ('BO', 'BO - Bolivia, Plurinational State of'), ('BQ', 'BQ - Bonaire, Saint Eustatius and Saba'), ('BA', 'BA - Bosnia and Herzegovina'), ('BW', 'BW - Botswana'), ('BV', 'BV - Bouvet Island'), ('BR', 'BR - Brazil'), ('IO', 'IO - British Indian Ocean Territory'), ('BN', 'BN - Brunei Darussalam'), ('BG', 'BG - Bulgaria'), ('BF', 'BF - Burkina Faso'), ('BI', 'BI - Burundi'), ('KH', 'KH - Cambodia'), ('CM', 'CM - Cameroon'), ('CA', 'CA - Canada'), ('CV', 'CV - Cape Verde'), ('KY', 'KY - Cayman Islands'), ('CF', 'CF - Central African Republic'), ('TD', 'TD - Chad'), ('CL', 'CL - Chile'), ('CN', 'CN - China'), ('CX', 'CX - Christmas Island'), ('CC', 'CC - Cocos (Keeling) Islands'), ('CO', 'CO - Colombia'), ('KM', 'KM - Comoros'), ('CG', 'CG - Congo'), ('CD', 'CD - Congo, The Democratic Republic of the'), ('CK', 'CK - Cook Islands'), ('CR', 'CR - Costa Rica'), ('CI', 'CI - C\xf4te Divoire'), ('HR', 'HR - Croatia'), ('CU', 'CU - Cuba'), ('CW', 'CW - Cura\xe7ao'), ('CY', 'CY - Cyprus'), ('CZ', 'CZ - Czech Republic'), ('DK', 'DK - Denmark'), ('DJ', 'DJ - Djibouti'), ('DM', 'DM - Dominica'), ('DO', 'DO - Dominican Republic'), ('EC', 'EC - Ecuador'), ('EG', 'EG - Egypt'), ('SV', 'SV - El Salvador'), ('GQ', 'GQ - Equatorial Guinea'), ('ER', 'ER - Eritrea'), ('EE', 'EE - Estonia'), ('ET', 'ET - Ethiopia'), ('FK', 'FK - Falkland Islands (Malvinas)'), ('FO', 'FO - Faroe Islands'), ('FJ', 'FJ - Fiji'), ('FI', 'FI - Finland'), ('FR', 'FR - France'), ('GF', 'GF - French Guiana'), ('PF', 'PF - French Polynesia'), ('TF', 'TF - French Southern Territories'), ('GA', 'GA - Gabon'), ('GM', 'GM - Gambia'), ('GE', 'GE - Georgia'), ('DE', 'DE - Germany'), ('GH', 'GH - Ghana'), ('GI', 'GI - Gibraltar'), ('GR', 'GR - Greece'), ('GL', 'GL - Greenland'), ('GD', 'GD - Grenada'), ('GP', 'GP - Guadeloupe'), ('GU', 'GU - Guam'), ('GT', 'GT - Guatemala'), ('GG', 'GG - Guernsey'), ('GN', 'GN - Guinea'), ('GW', 'GW - Guinea-Bissau'), ('GY', 'GY - Guyana'), ('HT', 'HT - Haiti'), ('HM', 'HM - Heard Island and Mcdonald Islands'), ('VA', 'VA - Holy See (Vatican City State)'), ('HN', 'HN - Honduras'), ('HK', 'HK - Hong Kong'), ('HU', 'HU - Hungary'), ('IS', 'IS - Iceland'), ('IN', 'IN - India'), ('ID', 'ID - Indonesia'), ('IR', 'IR - Iran, Islamic Republic of'), ('IQ', 'IQ - Iraq'), ('IE', 'IE - Ireland'), ('IM', 'IM - Isle of Man'), ('IL', 'IL - Israel'), ('IT', 'IT - Italy'), ('JM', 'JM - Jamaica'), ('JP', 'JP - Japan'), ('JE', 'JE - Jersey'), ('JO', 'JO - Jordan'), ('KZ', 'KZ - Kazakhstan'), ('KE', 'KE - Kenya'), ('KI', 'KI - Kiribati'), ('KP', 'KP - Korea, Democratic Peoples Republic of'), ('KR', 'KR - Korea, Republic of'), ('XK', 'XK - Kosovo'), ('KW', 'KW - Kuwait'), ('KG', 'KG - Kyrgyzstan'), ('LA', 'LA - Lao Peoples Democratic Republic'), ('LV', 'LV - Latvia'), ('LB', 'LB - Lebanon'), ('LS', 'LS - Lesotho'), ('LR', 'LR - Liberia'), ('LY', 'LY - Libyan Arab Jamahiriya'), ('LI', 'LI - Liechtenstein'), ('LT', 'LT - Lithuania'), ('LU', 'LU - Luxembourg'), ('MO', 'MO - Macao'), ('MK', 'MK - Macedonia, The Former Yugoslav Republic of'), ('MG', 'MG - Madagascar'), ('MW', 'MW - Malawi'), ('MY', 'MY - Malaysia'), ('MV', 'MV - Maldives'), ('ML', 'ML - Mali'), ('MT', 'MT - Malta'), ('MH', 'MH - Marshall Islands'), ('MQ', 'MQ - Martinique'), ('MR', 'MR - Mauritania'), ('MU', 'MU - Mauritius'), ('YT', 'YT - Mayotte'), ('MX', 'MX - Mexico'), ('FM', 'FM - Micronesia, Federated States of'), ('MD', 'MD - Moldova, Republic of'), ('MC', 'MC - Monaco'), ('MN', 'MN - Mongolia'), ('ME', 'ME - Montenegro'), ('MS', 'MS - Montserrat'), ('MA', 'MA - Morocco'), ('MZ', 'MZ - Mozambique'), ('MM', 'MM - Myanmar'), ('NA', 'NA - Namibia'), ('NR', 'NR - Nauru'), ('NP', 'NP - Nepal'), ('NL', 'NL - Netherlands'), ('AN', 'AN - Netherland Antilles'), ('NC', 'NC - New Caledonia'), ('NZ', 'NZ - New Zealand'), ('NI', 'NI - Nicaragua'), ('NE', 'NE - Niger'), ('NG', 'NG - Nigeria'), ('NU', 'NU - Niue'), ('NF', 'NF - Norfolk Island'), ('MP', 'MP - Northern Mariana Islands'), ('NO', 'NO - Norway'), ('OM', 'OM - Oman'), ('PK', 'PK - Pakistan'), ('PW', 'PW - Palau'), ('PS', 'PS - Palestinian Territory, Occupied'), ('PA', 'PA - Panama'), ('PG', 'PG - Papua New Guinea'), ('PY', 'PY - Paraguay'), ('PE', 'PE - Peru'), ('PH', 'PH - Philippines'), ('PN', 'PN - Pitcairn'), ('PL', 'PL - Poland'), ('PT', 'PT - Portugal'), ('PR', 'PR - Puerto Rico'), ('QA', 'QA - Qatar'), ('RE', 'RE - Reunion'), ('RO', 'RO - Romania'), ('RU', 'RU - Russian Federation'), ('RW', 'RW - Rwanda'), ('BL', 'BL - Saint Barth\xe9lemy'), ('SH', 'SH - Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'KN - Saint Kitts and Nevis'), ('LC', 'LC - Saint Lucia'), ('MF', 'MF - Saint Martin (French Part)'), ('PM', 'PM - Saint Pierre and Miquelon'), ('VC', 'VC - Saint Vincent and the Grenadines'), ('WS', 'WS - Samoa'), ('SM', 'SM - San Marino'), ('ST', 'ST - Sao Tome and Principe'), ('SA', 'SA - Saudi Arabia'), ('SN', 'SN - Senegal'), ('RS', 'RS - Serbia'), ('SC', 'SC - Seychelles'), ('SL', 'SL - Sierra Leone'), ('SG', 'SG - Singapore'), ('SX', 'SX - Sint Maarten (Dutch Part)'), ('SK', 'SK - Slovakia'), ('SI', 'SI - Slovenia'), ('SB', 'SB - Solomon Islands'), ('SO', 'SO - Somalia'), ('ZA', 'ZA - South Africa'), ('GS', 'GS - South Georgia and the South Sandwich Islands'), ('SS', 'SS - South Sudan'), ('ES', 'ES - Spain'), ('LK', 'LK - Sri Lanka'), ('SD', 'SD - Sudan'), ('SR', 'SR - Suriname'), ('SJ', 'SJ - Svalbard and Jan Mayen'), ('SZ', 'SZ - Swaziland'), ('SE', 'SE - Sweden'), ('CH', 'CH - Switzerland'), ('SY', 'SY - Syrian Arab Republic'), ('TW', 'TW - Taiwan, Province of China'), ('TJ', 'TJ - Tajikistan'), ('TZ', 'TZ - Tanzania, United Republic of'), ('TH', 'TH - Thailand'), ('TL', 'TL - Timor-Leste'), ('TG', 'TG - Togo'), ('TK', 'TK - Tokelau'), ('TO', 'TO - Tonga'), ('TT', 'TT - Trinidad and Tobago'), ('TN', 'TN - Tunisia'), ('TR', 'TR - Turkey'), ('TM', 'TM - Turkmenistan'), ('TC', 'TC - Turks and Caicos Islands'), ('TV', 'TV - Tuvalu'), ('UG', 'UG - Uganda'), ('UA', 'UA - Ukraine'), ('AE', 'AE - United Arab Emirates'), ('GB', 'GB - United Kingdom'), ('US', 'US - United States'), ('UM', 'UM - United States Minor Outlying Islands'), ('UY', 'UY - Uruguay'), ('UZ', 'UZ - Uzbekistan'), ('VU', 'VU - Vanuatu'), ('VE', 'VE - Venezuela, Bolivarian Republic of'), ('VN', 'VN - Viet Nam'), ('VG', 'VG - Virgin Islands, British'), ('VI', 'VI - Virgin Islands, U.S.'), ('WF', 'WF - Wallis and Futuna'), ('EH', 'EH - Western Sahara'), ('YE', 'YE - Yemen'), ('ZM', 'ZM - Zambia'), ('ZW', 'ZW - Zimbabwe')]),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='transaction',
            name='recipient_region',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='recipient region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North and Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South and Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')]),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='transaction',
            name='recipient_region_vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='recipient region vocabulary', choices=[('1', '1 - OECD DAC'), ('2', '2 - UN')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='currency',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Croatian Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - New Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XCD', 'XCD - East Caribbean Dollar'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='budgetitem',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select whether this is a planned or actual budget of the project.', max_length=1, verbose_name='budget type', choices=[('1', '1 - Original'), ('2', '2 - Revised')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='countrybudgetitem',
            name='code',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=6, verbose_name='budget item', choices=[('1.1.1', '1.1.1 - Executive - executive'), ('1.2.1', '1.2.1 - Legislative - legislative'), ('1.3.1', '1.3.1 - Accountability - macroeconomic policy'), ('1.3.2', '1.3.2 - Accountability - budgeting'), ('1.3.3', '1.3.3 - Accountability - planning'), ('1.3.4', '1.3.4 - Accountability - Treasury/Accounts'), ('1.3.5', '1.3.5 - Accountability - debt and aid management'), ('1.3.6', '1.3.6 - Accountability - tax policy'), ('1.3.7', '1.3.7 - Accountability - tax collection'), ('1.3.8', '1.3.8 - Accountability - local government finance'), ('1.3.9', '1.3.9 - Accountability - other central transfers to institutions '), ('1.3.10', '1.3.10 - Accountability - national audit'), ('1.3.11', '1.3.11 - Accountability - national monitoring and evaluation'), ('1.3.12', '1.3.12 - Accountability - monetary institutions'), ('1.3.13', '1.3.13 - Accountability - financial sector policy and regulation'), ('1.4.1', '1.4.1 - External Affairs - foreign affairs '), ('1.4.2', '1.4.2 - External Affairs - diplomatic missions'), ('1.4.3', '1.4.3 - External Affairs - official development assistance'), ('1.5.1', '1.5.1 - General Personnel Services - general personnel services'), ('1.6.1', '1.6.1 - Statistics - statistics'), ('1.7.1', '1.7.1 - Other General Services - support to civil society '), ('1.7.2', '1.7.2 - Other General Services - central procurement'), ('1.7.3', '1.7.3 - Other General Services - Local Government Administration'), ('1.7.4', '1.7.4 - Other General Services - other general services'), ('1.8.1', '1.8.1 - Elections - elections'), ('2.1.1', '2.1.1 - Justice, Law and Order - policy, planning and administration'), ('2.1.2', '2.1.2 - Justice, Law and Order - police'), ('2.1.2', '2.1.2 - Justice, Law and Order - fire'), ('2.1.3', '2.1.3 - Justice, Law and Order - judicial affairs'), ('2.1.4', '2.1.4 - Justice, Law and Order - Ombudsman'), ('2.1.5', '2.1.5 - Justice, Law and Order - human rights affairs'), ('2.1.6', '2.1.6 - Justice, Law and Order - immigration'), ('2.1.7', '2.1.7 - Justice, Law and Order - anti corruption'), ('2.1.8', '2.1.8 - Justice, Law and Order - prisons'), ('2.1.9', '2.1.9 - Justice, Law and Order - peace building'), ('2.1.10', '2.1.10 - Justice, Law and Order - demobilisation'), ('2.2.1', '2.2.1 - Defence - policy, planning and administration'), ('2.2.2', '2.2.2 - Defence - military'), ('2.2.3', '2.2.3 - Defence - civil defence'), ('2.2.4', '2.2.4 - Defence - foreign military aid'), ('3.1.1', '3.1.1 - General Economic, Commercial and Labour Affairs - policy, planning and administration'), ('3.1.2', '3.1.2 - General Economic, Commercial and Labour Affairs - general economic affairs'), ('3.1.3', '3.1.3 - General Economic, Commercial and Labour Affairs - investment promotion'), ('3.1.4', '3.1.4 - General Economic, Commercial and Labour Affairs - privatisation'), ('3.1.5', '3.1.5 - General Economic, Commercial and Labour Affairs - trade'), ('3.1.6', '3.1.6 - General Economic, Commercial and Labour Affairs - labour'), ('3.1.7', '3.1.7 - General Economic, Commercial and Labour Affairs - national standards development'), ('3.2.1', '3.2.1 - Public Works - policy, planning and administration'), ('3.2.2', '3.2.2 - Public Works - construction regulation'), ('3.2.3', '3.2.3 - Public Works - mechanical services'), ('3.3.1', '3.3.1 - Agriculture - policy, planning and administration'), ('3.3.2', '3.3.2 - Agriculture - irrigation'), ('3.3.3', '3.3.3 - Agriculture - inputs'), ('3.3.4', '3.3.4 - Agriculture - food crop'), ('3.3.5', '3.3.5 - Agriculture - industrial crop'), ('3.3.6', '3.3.6 - Agriculture - livestock'), ('3.3.7', '3.3.7 - Agriculture - agricultural training and extension'), ('3.3.8', '3.3.8 - Agriculture - research'), ('3.3.9', '3.3.9 - Agriculture - other services'), ('3.4.1', '3.4.1 - Forestry - policy, planning and administration'), ('3.4.2', '3.4.2 - Forestry - development and services'), ('3.4.3', '3.4.3 - Forestry - education/training'), ('3.4.4', '3.4.4 - Forestry - research'), ('3.5.1', '3.5.1 - Fishing and Hunting - policy, planning and administration'), ('3.5.2', '3.5.2 - Fishing and Hunting - development and services'), ('3.5.3', '3.5.3 - Fishing and Hunting - education and training'), ('3.5.4', '3.5.4 - Fishing and Hunting - research'), ('3.6.1', '3.6.1 - Energy - policy, planning and administration'), ('3.6.2', '3.6.2 - Energy - education and training'), ('3.6.3', '3.6.3 - Energy - energy regulation'), ('3.6.4', '3.6.4 - Energy - electricity transmission'), ('3.6.5', '3.6.5 - Energy - nuclear'), ('3.6.6', '3.6.6 - Energy - power generation'), ('3.6.7', '3.6.7 - Energy - gas '), ('3.7.1', '3.7.1 - Mining and Mineral Development - policy, planning and administration'), ('3.7.2', '3.7.2 - Mining and Mineral Development - prospection and exploration'), ('3.7.3', '3.7.3 - Mining and Mineral Development - coal and other solid mineral fuels'), ('3.7.4', '3.7.4 - Mining and Mineral Development - petroleum and gas'), ('3.7.6', '3.7.6 - Mining and Mineral Development - other fuel'), ('3.7.7', '3.7.7 - Mining and Mineral Development - non fuel minerals'), ('3.8.1', '3.8.1 - Transport - policy, planning and administration'), ('3.8.2', '3.8.2 - Transport - transport regulation'), ('3.8.3', '3.8.3 - Transport - feeder road construction'), ('3.8.4', '3.8.4 - Transport - feeder road maintenance'), ('3.8.5', '3.8.5 - Transport - national road construction'), ('3.8.6', '3.8.6 - Transport - national road maintenance'), ('3.8.7', '3.8.7 - Transport - rail'), ('3.8.8', '3.8.8 - Transport - water'), ('3.8.9', '3.8.9 - Transport - air'), ('3.8.10', '3.8.10 - Transport - pipeline'), ('3.8.11', '3.8.11 - Transport - storage and distribution'), ('3.8.12', '3.8.12 - Transport - public transport services'), ('3.8.13', '3.8.13 - Transport - meteorological services'), ('3.8.14', '3.8.14 - Transport - education and training'), ('3.9.1', '3.9.1 - Industry - policy, planning and administration'), ('3.9.2', '3.9.2 - Industry - development and services'), ('3.9.3', '3.9.3 - Industry - industrial research'), ('3.9.4', '3.9.4 - Industry - (investment in industry)'), ('3.10.1', '3.10.1 - Communications - policy, planning and administration'), ('3.10.2', '3.10.2 - Communications - ICT Infrastructure'), ('3.10.3', '3.10.3 - Communications - telecoms and postal services'), ('3.10.4', '3.10.4 - Communications - information services'), ('3.11.1', '3.11.1 - Tourism - policy, planning and administration'), ('3.11.2', '3.11.2 - Tourism - services'), ('3.12.1', '3.12.1 - Microfinance and financial services - Microfinance and financial services'), ('4.1.1', '4.1.1 - Water supply and Sanitation - policy, planning and administration'), ('4.1.2', '4.1.2 - Water supply and Sanitation - education/training'), ('4.1.3', '4.1.3 - Water supply and Sanitation - rural water supply and sanitation'), ('4.1.4', '4.1.4 - Water supply and Sanitation - urban water supply and sanitation'), ('4.1.5', '4.1.5 - Water supply and Sanitation - rural water supply'), ('4.1.6', '4.1.6 - Water supply and Sanitation - urban water supply'), ('4.1.7', '4.1.7 - Water supply and Sanitation - rural sanitation'), ('4.1.8', '4.1.8 - Water supply and Sanitation - urban sanitation'), ('4.1.9', '4.1.9 - Water supply and Sanitation - sewage and waste management'), ('4.2.1', '4.2.1 - Environment - policy, planning and administration'), ('4.2.2', '4.2.2 - Environment - research/ education and training'), ('4.2.3', '4.2.3 - Environment - natural resource management'), ('4.2.4', '4.2.4 - Environment - water resources management'), ('4.2.5', '4.2.5 - Environment - wildlife protection, parks and site preservation'), ('5.1.1', '5.1.1 - Health - policy, planning and administration'), ('5.2.1', '5.2.1 - Recreation, Culture and Religion - recreation and sport'), ('5.2.2', '5.2.2 - Recreation, Culture and Religion - culture'), ('5.2.3', '5.2.3 - Recreation, Culture and Religion - broadcasting and publishing'), ('5.2.4', '5.2.4 - Recreation, Culture and Religion - religion'), ('5.3.1', '5.3.1 - Education - administration, policy and planning'), ('5.3.2', '5.3.2 - Education - research'), ('5.3.3', '5.3.3 - Education - pre-primary'), ('5.3.4', '5.3.4 - Education - primary'), ('5.3.5', '5.3.5 - Education - lower secondary'), ('5.3.6', '5.3.6 - Education - upper secondary'), ('5.3.7', '5.3.7 - Education - post secondary non tertiary '), ('5.3.8', '5.3.8 - Education - tertiary'), ('5.3.9', '5.3.9 - Education - vocational training'), ('5.3.10', '5.3.10 - Education - advanced technical and managerial training'), ('5.3.11', '5.3.11 - Education - basic adult education'), ('5.3.12', '5.3.12 - Education - teacher training'), ('5.3.13', '5.3.13 - Education - subsidiary services'), ('5.4.1', '5.4.1 - Social Protection, Land Housing and Community Amenities - policy, planning and administration'), ('5.4.2', '5.4.2 - Social Protection, Land Housing and Community Amenities - social security (excl pensions)'), ('5.4.3', '5.4.3 - Social Protection, Land Housing and Community Amenities - general pensions'), ('5.4.4', '5.4.4 - Social Protection, Land Housing and Community Amenities - civil service and military pensions'), ('5.4.5', '5.4.5 - Social Protection, Land Housing and Community Amenities - social services (incl youth development and women+ children)'), ('5.4.6', '5.4.6 - Social Protection, Land Housing and Community Amenities - land policy and management'), ('5.4.7', '5.4.7 - Social Protection, Land Housing and Community Amenities - rural devt'), ('5.4.8', '5.4.8 - Social Protection, Land Housing and Community Amenities - urban devt'), ('5.4.9', '5.4.9 - Social Protection, Land Housing and Community Amenities - housing and community amenities'), ('5.4.10', '5.4.10 - Social Protection, Land Housing and Community Amenities - emergency relief'), ('5.4.11', '5.4.11 - Social Protection, Land Housing and Community Amenities - disaster prevention and preparedness'), ('5.4.12', '5.4.12 - Social Protection, Land Housing and Community Amenities - support to refugees and internally displaced persons'), ('6.1.1', '6.1.1 - Development Partner affairs - policy planning and administration'), ('6.1.2', '6.1.2 - Development Partner affairs - Technical staff services'), ('7.1.1', '7.1.1 - External to government sector - External to general government sector'), ('7.2.1', '7.2.1 - General Budget Support - General Budget Support')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='indicator',
            name='measure',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select whether the indicator counts units or evaluates a percentage.', max_length=1, verbose_name='measure', choices=[('1', '1 - Unit'), ('2', '2 - Percentage')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='currency',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Croatian Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - New Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XCD', 'XCD - East Caribbean Dollar'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='planneddisbursement',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='type', choices=[('1', '1 - Original'), ('2', '2 - Revised')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='policymarker',
            name='policy_marker',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='policy marker', choices=[('1', '1 - Gender Equality'), ('2', '2 - Aid to Environment'), ('3', '3 - Participatory Development/Good Governance'), ('4', '4 - Trade Development'), ('5', '5 - Aid Targeting the Objectives of the Convention on Biological Diversity'), ('6', '6 - Aid Targeting the Objectives of the Framework Convention on Climate Change - Mitigation'), ('7', '7 - Aid Targeting the Objectives of the Framework Convention on Climate Change - Adaptation'), ('8', '8 - Aid Targeting the Objectives of the Convention to Combat Desertification'), ('9', '9 - Reproductive, Maternal, Newborn and Child Health (RMNCH)')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='policymarker',
            name='significance',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='significance', choices=[('0', '0 - not targeted'), ('1', '1 - significant objective'), ('2', '2 - principal objective'), ('3', '3 - principal objective AND in support of an action programme'), ('4', '4 - Explicit primary objective')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='policymarker',
            name='vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=5, verbose_name='vocabulary', choices=[('1', '1 - OECD DAC CRS'), ('99', '99 - Reporting Organisation')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='collaboration_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='collaboration type', choices=[('1', '1 - Bilateral'), ('2', '2 - Multilateral'), ('3', '3 - Bilateral, core contributions to NGOs and other private bodies / PPPs'), ('4', '4 - Multilateral outflows'), ('6', '6 - Private sector outflow'), ('7', '7 - Bilateral, ex-post reporting on NGOs activities funded through core contributions')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_aid_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='default aid type', choices=[('A01', 'A01 - General budget support'), ('A02', 'A02 - Sector budget support'), ('B01', 'B01 - Core support to NGOs, other private bodies, PPPs and research institutes'), ('B02', 'B02 - Core contributions to multilateral institutions'), ('B03', 'B03 - Contributions to specific-purpose programmes and funds managed by international organisations (multilateral, INGO)'), ('B04', 'B04 - Basket funds/pooled funding'), ('C01', 'C01 - Project-type interventions'), ('D01', 'D01 - Donor country personnel'), ('D02', 'D02 - Other technical assistance'), ('E01', 'E01 - Scholarships/training in donor country'), ('E02', 'E02 - Imputed student costs'), ('F01', 'F01 - Debt relief'), ('G01', 'G01 - Administrative costs not included elsewhere'), ('H01', 'H01 - Development awareness'), ('H02', 'H02 - Refugees in donor countries')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_finance_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='default finance type', choices=[('110', '110 - Aid grant excluding debt reorganisation'), ('111', '111 - Subsidies to national private investors'), ('210', '210 - Interest subsidy grant in AF'), ('211', '211 - Interest subsidy to national private exporters'), ('310', '310 - Deposit basis'), ('311', '311 - Encashment basis'), ('410', '410 - Aid loan excluding debt reorganisation'), ('411', '411 - Investment-related loan to developing countries'), ('412', '412 - Loan in a joint venture with the recipient'), ('413', '413 - Loan to national private investor'), ('414', '414 - Loan to national private exporter'), ('451', '451 - Non-banks guaranteed export credits'), ('452', '452 - Non-banks non-guaranteed portions of guaranteed export credits'), ('453', '453 - Bank export credits'), ('510', '510 - Acquisition of equity as part of a joint venture with the recipient'), ('511', '511 - Acquisition of equity not part of joint venture in developing countries'), ('512', '512 - Other acquisition of equity. Investment in a country on the DAC List of ODA Recipients that is not made to acquire a lasting interest in an enterprise.'), ('610', '610 - Debt forgiveness: ODA claims (P)'), ('611', '611 - Debt forgiveness: ODA claims (I)'), ('612', '612 - Debt forgiveness: OOF claims (P)'), ('613', '613 - Debt forgiveness: OOF claims (I)'), ('614', '614 - Debt forgiveness: Private claims (P)'), ('615', '615 - Debt forgiveness: Private claims (I)'), ('616', '616 - Debt forgiveness: OOF claims (DSR)'), ('617', '617 - Debt forgiveness: Private claims (DSR)'), ('618', '618 - Debt forgiveness: Other'), ('620', '620 - Debt rescheduling: ODA claims (P)'), ('621', '621 - Debt rescheduling: ODA claims (I)'), ('622', '622 - Debt rescheduling: OOF claims (P)'), ('623', '623 - Debt rescheduling: OOF claims (I)'), ('624', '624 - Debt rescheduling: Private claims (P)'), ('625', '625 - Debt rescheduling: Private claims (I)'), ('626', '626 - Debt rescheduling: OOF claims (DSR)'), ('627', '627 - Debt rescheduling: Private claims (DSR)'), ('630', '630 - Debt rescheduling: OOF claim (DSR - original loan principal)'), ('631', '631 - Debt rescheduling: OOF claim (DSR - original loan interest)'), ('632', '632 - Debt rescheduling: Private claim (DSR - original loan principal)'), ('710', '710 - Foreign direct investment'), ('711', '711 - Other foreign direct investment, including reinvested earnings'), ('810', '810 - Bank bonds'), ('811', '811 - Non-bank bonds'), ('910', '910 - Other bank securities/claims'), ('911', '911 - Other non-bank securities/claims'), ('912', '912 - Securities and other instruments issued by multilateral agencies')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_flow_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='default flow type', choices=[('10', '10 - ODA'), ('20', '20 - OOF'), ('30', '30 - Private NGO and other private sources'), ('35', '35 - Private Market'), ('40', '40 - Non flow'), ('50', '50 - Other flows')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='default_tied_status',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='default tied status', choices=[('3', '3 - Partially tied'), ('4', '4 - Tied'), ('5', '5 - Untied')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='project_scope',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the geographical scope of the project.', max_length=2, verbose_name='project scope', choices=[('1', '1 - Global'), ('2', '2 - Regional'), ('3', '3 - Multi-national'), ('4', '4 - National'), ('5', '5 - Sub-national: Multi-first-level administrative areas'), ('6', '6 - Sub-national: Single first-level administrative area'), ('7', '7 - Sub-national: Single second-level administrative area'), ('8', '8 - Single location')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='project',
            name='sync_owner',
            field=models.ForeignKey(related_name='reporting_projects', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rsr.Organisation', help_text='Select the reporting organisation of the project.', null=True, verbose_name='reporting organisation'),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcondition',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='condition type', choices=[('1', '1 - Policy'), ('2', '2 - Performance'), ('3', '3 - Fiduciary')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectcontact',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='type', choices=[('1', '1 - General Enquiries'), ('2', '2 - Project Management'), ('3', '3 - Financial Management'), ('4', '4 - Communications')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='category',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select a document category.', max_length=3, verbose_name='category', choices=[('A01', 'A01 - Pre- and post-project impact appraisal'), ('A02', 'A02 - Objectives / Purpose of activity'), ('A03', 'A03 - Intended ultimate beneficiaries'), ('A04', 'A04 - Conditions'), ('A05', 'A05 - Budget'), ('A06', 'A06 - Summary information about contract'), ('A07', 'A07 - Review of project performance and evaluation'), ('A08', 'A08 - Results, outcomes and outputs'), ('A09', 'A09 - Memorandum of understanding (If agreed by all parties)'), ('A10', 'A10 - Tender'), ('A11', 'A11 - Contract'), ('A12', 'A12 - Activity web page'), ('B01', 'B01 - Annual report'), ('B02', 'B02 - Institutional Strategy paper'), ('B03', 'B03 - Country strategy paper'), ('B04', 'B04 - Aid Allocation Policy'), ('B05', 'B05 - Procurement Policy and Procedure'), ('B06', 'B06 - Institutional Audit Report'), ('B07', 'B07 - Country Audit Report'), ('B08', 'B08 - Exclusions Policy'), ('B09', 'B09 - Institutional Evaluation Report'), ('B10', 'B10 - Country Evaluation Report'), ('B11', 'B11 - Sector strategy'), ('B12', 'B12 - Thematic strategy'), ('B13', 'B13 - Country-level Memorandum of Understanding'), ('B14', 'B14 - Evaluations policy'), ('B15', 'B15 - General Terms and Conditions'), ('B16', 'B16 - Organisation web page'), ('B17', 'B17 - Country/Region web page'), ('B18', 'B18 - Sector web page')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='language',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language that the document is written in.', max_length=2, verbose_name='language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectdocument',
            name='title_language',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language of the document title.', max_length=2, verbose_name='title language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='exactness',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='exactness', choices=[('1', '1 - Exact'), ('2', '2 - Approximate')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='feature_designation',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=5, verbose_name='feature designation', choices=[('AIRQ', 'AIRQ - abandoned airfield'), ('CMPQ', 'CMPQ - abandoned camp'), ('CNLQ', 'CNLQ - abandoned canal'), ('MFGQ', 'MFGQ - abandoned factory'), ('FRMQ', 'FRMQ - abandoned farm'), ('MNQ', 'MNQ - abandoned mine'), ('MSSNQ', 'MSSNQ - abandoned mission'), ('OILQ', 'OILQ - abandoned oil well'), ('PPQ', 'PPQ - abandoned police post'), ('PPLQ', 'PPLQ - abandoned populated place'), ('PRNQ', 'PRNQ - abandoned prison'), ('RRQ', 'RRQ - abandoned railroad'), ('RSTNQ', 'RSTNQ - abandoned railroad station'), ('RSTPQ', 'RSTPQ - abandoned railroad stop'), ('STMQ', 'STMQ - abandoned watercourse'), ('WLLQ', 'WLLQ - abandoned well'), ('ADMD', 'ADMD - administrative division'), ('ADMF', 'ADMF - administrative facility'), ('AGRC', 'AGRC - agricultural colony'), ('AGRF', 'AGRF - agricultural facility'), ('RESA', 'RESA - agricultural reserve'), ('SCHA', 'SCHA - agricultural school'), ('AIRB', 'AIRB - airbase'), ('AIRF', 'AIRF - airfield'), ('AIRP', 'AIRP - airport'), ('AMTH', 'AMTH - amphitheater'), ('STMA', 'STMA - anabranch'), ('ANCH', 'ANCH - anchorage'), ('RDA', 'RDA - ancient road'), ('ANS', 'ANS - ancient site'), ('WALLA', 'WALLA - ancient wall'), ('BLDA', 'BLDA - apartment building'), ('AQC', 'AQC - aquaculture facility'), ('CNLA', 'CNLA - aqueduct'), ('ARCH', 'ARCH - arch'), ('LAND', 'LAND - Arctic land'), ('AREA', 'AREA - area'), ('ISLF', 'ISLF - artificial island'), ('RNGA', 'RNGA - artillery range'), ('ASPH', 'ASPH - asphalt lake'), ('ASTR', 'ASTR - astronomical station'), ('ASYL', 'ASYL - asylum'), ('ATHF', 'ATHF - athletic field'), ('ATOL', 'ATOL - atoll(s)'), ('CTRA', 'CTRA - atomic center'), ('BDLD', 'BDLD - badlands'), ('BSTN', 'BSTN - baling station'), ('ESTB', 'ESTB - banana plantation'), ('BAN', 'BAN - bank'), ('BNK', 'BNK - bank(s)'), ('BAR', 'BAR - bar'), ('BRKS', 'BRKS - barracks'), ('BTL', 'BTL - battlefield'), ('BAY', 'BAY - bay'), ('BAYS', 'BAYS - bays'), ('BCH', 'BCH - beach'), ('RDGB', 'RDGB - beach ridge'), ('BCHS', 'BCHS - beaches'), ('BCN', 'BCN - beacon'), ('BNCH', 'BNCH - bench'), ('BGHT', 'BGHT - bight(s)'), ('BLHL', 'BLHL - blowhole(s)'), ('BLOW', 'BLOW - blowout(s)'), ('BTYD', 'BTYD - boatyard'), ('BOG', 'BOG - bog(s)'), ('PSTB', 'PSTB - border post'), ('BLDR', 'BLDR - boulder field'), ('BP', 'BP - boundary marker'), ('BRKW', 'BRKW - breakwater'), ('MFGB', 'MFGB - brewery'), ('BDG', 'BDG - bridge'), ('ZNB', 'ZNB - buffer zone'), ('BLDG', 'BLDG - building(s)'), ('BUR', 'BUR - burial cave(s)'), ('BUSH', 'BUSH - bush(es)'), ('CTRB', 'CTRB - business center'), ('BUTE', 'BUTE - butte(s)'), ('CARN', 'CARN - cairn'), ('CLDA', 'CLDA - caldera'), ('CMP', 'CMP - camp(s)'), ('CNL', 'CNL - canal'), ('CNLB', 'CNLB - canal bend'), ('TNLC', 'TNLC - canal tunnel'), ('STMC', 'STMC - canalized stream'), ('MFGC', 'MFGC - cannery'), ('CNYN', 'CNYN - canyon'), ('CAPE', 'CAPE - cape'), ('PPLC', 'PPLC - capital of a political entity'), ('RTE', 'RTE - caravan route'), ('CSNO', 'CSNO - casino'), ('CSTL', 'CSTL - castle'), ('TNKD', 'TNKD - cattle dipping tank'), ('CSWY', 'CSWY - causeway'), ('CAVE', 'CAVE - cave(s)'), ('CMTY', 'CMTY - cemetery'), ('CHN', 'CHN - channel'), ('MNCR', 'MNCR - chrome mine(s)'), ('CH', 'CH - church'), ('CRQ', 'CRQ - cirque'), ('CRQS', 'CRQS - cirques'), ('CLG', 'CLG - clearing'), ('CFT', 'CFT - cleft(s)'), ('CLF', 'CLF - cliff(s)'), ('HSPC', 'HSPC - clinic'), ('MNC', 'MNC - coal mine(s)'), ('COLF', 'COLF - coalfield'), ('CST', 'CST - coast'), ('STNC', 'STNC - coast guard station'), ('GRVC', 'GRVC - coconut grove'), ('SCHC', 'SCHC - college'), ('CMN', 'CMN - common'), ('COMC', 'COMC - communication center'), ('CTRCM', 'CTRCM - community center'), ('CNS', 'CNS - concession area'), ('CONE', 'CONE - cone(s)'), ('CNFL', 'CNFL - confluence'), ('CRSU', 'CRSU - continental rise'), ('CVNT', 'CVNT - convent'), ('MNCU', 'MNCU - copper mine(s)'), ('MFGCU', 'MFGCU - copper works'), ('RFC', 'RFC - coral reef(s)'), ('CRRL', 'CRRL - corral(s)'), ('CRDR', 'CRDR - corridor'), ('ESTC', 'ESTC - cotton plantation'), ('HSEC', 'HSEC - country house'), ('CTHSE', 'CTHSE - courthouse'), ('COVE', 'COVE - cove(s)'), ('LKC', 'LKC - crater lake'), ('LKSC', 'LKSC - crater lakes'), ('CRTR', 'CRTR - crater(s)'), ('CUET', 'CUET - cuesta(s)'), ('CULT', 'CULT - cultivated area'), ('CRNT', 'CRNT - current'), ('CSTM', 'CSTM - customs house'), ('PSTC', 'PSTC - customs post'), ('CUTF', 'CUTF - cutoff'), ('DARY', 'DARY - dairy'), ('DAM', 'DAM - dam'), ('DEPU', 'DEPU - deep'), ('DLTA', 'DLTA - delta'), ('PCLD', 'PCLD - dependent political entity'), ('DPR', 'DPR - depression(s)'), ('DSRT', 'DSRT - desert'), ('PPLW', 'PPLW - destroyed populated place'), ('MNDT', 'MNDT - diatomite mine(s)'), ('DIKE', 'DIKE - dike'), ('DIP', 'DIP - diplomatic facility'), ('HSPD', 'HSPD - dispensary'), ('STMD', 'STMD - distributary(-ies)'), ('DTCH', 'DTCH - ditch'), ('DTCHM', 'DTCHM - ditch mouth(s)'), ('DVD', 'DVD - divide'), ('DCK', 'DCK - dock(s)'), ('DCKB', 'DCKB - docking basin'), ('DCKY', 'DCKY - dockyard'), ('BSND', 'BSND - drainage basin'), ('CNLD', 'CNLD - drainage canal'), ('DTCHD', 'DTCHD - drainage ditch'), ('DCKD', 'DCKD - dry dock'), ('SBED', 'SBED - dry stream bed'), ('DUNE', 'DUNE - dune(s)'), ('RGNE', 'RGNE - economic region'), ('SCRP', 'SCRP - escarpment'), ('EST', 'EST - estate(s)'), ('ESTY', 'ESTY - estuary'), ('STNE', 'STNE - experiment station'), ('FCL', 'FCL - facility'), ('CTRF', 'CTRF - facility center'), ('MFG', 'MFG - factory'), ('FAN', 'FAN - fan(s)'), ('FRM', 'FRM - farm'), ('PPLF', 'PPLF - farm village'), ('FRMS', 'FRMS - farms'), ('FRMT', 'FRMT - farmstead'), ('FY', 'FY - ferry'), ('FYT', 'FYT - ferry terminal'), ('FLD', 'FLD - field(s)'), ('FIRE', 'FIRE - fire station'), ('ADM1', 'ADM1 - first-order administrative division'), ('FISH', 'FISH - fishing area'), ('PNDSF', 'PNDSF - fishponds'), ('FSR', 'FSR - fissure'), ('FJD', 'FJD - fjord'), ('FJDS', 'FJDS - fjords'), ('FORD', 'FORD - ford'), ('RESF', 'RESF - forest reserve'), ('STNF', 'STNF - forest station'), ('FRST', 'FRST - forest(s)'), ('INLTQ', 'INLTQ - former inlet'), ('MLSGQ', 'MLSGQ - former sugar mill'), ('FT', 'FT - fort'), ('FRSTF', 'FRSTF - fossilized forest'), ('FNDY', 'FNDY - foundry'), ('ADM4', 'ADM4 - fourth-order administrative division'), ('ZNF', 'ZNF - free trade zone'), ('PCLF', 'PCLF - freely associated state'), ('DPOF', 'DPOF - fuel depot'), ('GAP', 'GAP - gap'), ('GDN', 'GDN - garden(s)'), ('GOSP', 'GOSP - gas-oil separator plant'), ('GASF', 'GASF - gasfield'), ('GATE', 'GATE - gate'), ('GYSR', 'GYSR - geyser'), ('GHAT', 'GHAT - gh\xc4\x81t'), ('GLCR', 'GLCR - glacier(s)'), ('MNAU', 'MNAU - gold mine(s)'), ('RECG', 'RECG - golf course'), ('GRGE', 'GRGE - gorge(s)'), ('GRSLD', 'GRSLD - grassland'), ('GRVE', 'GRVE - grave'), ('GVL', 'GVL - gravel area'), ('GRAZ', 'GRAZ - grazing area'), ('GHSE', 'GHSE - guest house'), ('GULF', 'GULF - gulf'), ('HLT', 'HLT - halting place'), ('HMCK', 'HMCK - hammock(s)'), ('AIRG', 'AIRG - hangar'), ('VALG', 'VALG - hanging valley'), ('HBR', 'HBR - harbor(s)'), ('HDLD', 'HDLD - headland'), ('STMH', 'STMH - headwaters'), ('HTH', 'HTH - heath'), ('AIRH', 'AIRH - heliport'), ('HERM', 'HERM - hermitage'), ('HLL', 'HLL - hill'), ('HLLS', 'HLLS - hills'), ('ADMDH', 'ADMDH - historical administrative division'), ('ADM1H', 'ADM1H - historical first-order administrative division'), ('ADM4H', 'ADM4H - historical fourth-order administrative division'), ('PCLH', 'PCLH - historical political entity'), ('PPLH', 'PPLH - historical populated place'), ('RRH', 'RRH - historical railroad'), ('RSTNH', 'RSTNH - historical railroad station'), ('RGNH', 'RGNH - historical region'), ('ADM2H', 'ADM2H - historical second-order administrative division'), ('HSTS', 'HSTS - historical site'), ('ADM3H', 'ADM3H - historical third-order administrative division'), ('UFHU', 'UFHU - historical undersea feature'), ('HMSD', 'HMSD - homestead'), ('HSP', 'HSP - hospital'), ('SPNT', 'SPNT - hot spring(s)'), ('HTL', 'HTL - hotel'), ('HSE', 'HSE - house(s)'), ('DEVH', 'DEVH - housing development'), ('RESH', 'RESH - hunting reserve'), ('HUT', 'HUT - hut'), ('HUTS', 'HUTS - huts'), ('PSH', 'PSH - hydroelectric power station'), ('CAPG', 'CAPG - icecap'), ('DPRG', 'DPRG - icecap depression'), ('DOMG', 'DOMG - icecap dome'), ('RDGG', 'RDGG - icecap ridge'), ('PCLI', 'PCLI - independent political entity'), ('INDS', 'INDS - industrial area'), ('INLT', 'INLT - inlet'), ('STNI', 'STNI - inspection station'), ('TRGD', 'TRGD - interdune trough(s)'), ('INTF', 'INTF - interfluve'), ('LKI', 'LKI - intermittent lake'), ('LKSI', 'LKSI - intermittent lakes'), ('LKOI', 'LKOI - intermittent oxbow lake'), ('PNDI', 'PNDI - intermittent pond'), ('PNDSI', 'PNDSI - intermittent ponds'), ('POOLI', 'POOLI - intermittent pool'), ('RSVI', 'RSVI - intermittent reservoir'), ('LKNI', 'LKNI - intermittent salt lake'), ('LKSNI', 'LKSNI - intermittent salt lakes'), ('PNDNI', 'PNDNI - intermittent salt pond(s)'), ('STMI', 'STMI - intermittent stream'), ('WTLDI', 'WTLDI - intermittent wetland'), ('RDIN', 'RDIN - intersection'), ('MNFE', 'MNFE - iron mine(s)'), ('FLDI', 'FLDI - irrigated field(s)'), ('CNLI', 'CNLI - irrigation canal'), ('DTCHI', 'DTCHI - irrigation ditch'), ('SYSI', 'SYSI - irrigation system'), ('ISL', 'ISL - island'), ('ISLS', 'ISLS - islands'), ('STLMT', 'STLMT - Israeli settlement'), ('ISTH', 'ISTH - isthmus'), ('JTY', 'JTY - jetty'), ('KRST', 'KRST - karst area'), ('CMPLA', 'CMPLA - labor camp'), ('LGN', 'LGN - lagoon'), ('LGNS', 'LGNS - lagoons'), ('LK', 'LK - lake'), ('LBED', 'LBED - lake bed(s)'), ('CHNL', 'CHNL - lake channel(s)'), ('RGNL', 'RGNL - lake region'), ('LKS', 'LKS - lakes'), ('ISLT', 'ISLT - land-tied island'), ('LNDF', 'LNDF - landfill'), ('LDNG', 'LDNG - landing'), ('LAVA', 'LAVA - lava area'), ('MNPB', 'MNPB - lead mine(s)'), ('LTER', 'LTER - leased area'), ('LEPC', 'LEPC - leper colony'), ('HSPL', 'HSPL - leprosarium'), ('LEV', 'LEV - levee'), ('LTHSE', 'LTHSE - lighthouse'), ('MFGLM', 'MFGLM - limekiln'), ('GOVL', 'GOVL - local government office'), ('LCTY', 'LCTY - locality'), ('LOCK', 'LOCK - lock(s)'), ('CMPL', 'CMPL - logging camp'), ('STMSB', 'STMSB - lost river'), ('MVA', 'MVA - maneuver area'), ('ISLM', 'ISLM - mangrove island'), ('MGV', 'MGV - mangrove swamp'), ('MAR', 'MAR - marina'), ('CHNM', 'CHNM - marine channel'), ('SCHN', 'SCHN - maritime school'), ('MKT', 'MKT - market'), ('MRSH', 'MRSH - marsh(es)'), ('MDW', 'MDW - meadow'), ('NKM', 'NKM - meander neck'), ('CTRM', 'CTRM - medical center'), ('MESA', 'MESA - mesa(s)'), ('STNM', 'STNM - meteorological station'), ('MILB', 'MILB - military base'), ('INSM', 'INSM - military installation'), ('SCHM', 'SCHM - military school'), ('ML', 'ML - mill(s)'), ('MN', 'MN - mine(s)'), ('MNA', 'MNA - mining area'), ('CMPMN', 'CMPMN - mining camp'), ('MSSN', 'MSSN - mission'), ('MOLE', 'MOLE - mole'), ('MSTY', 'MSTY - monastery'), ('MNMT', 'MNMT - monument'), ('MOOR', 'MOOR - moor(s)'), ('MRN', 'MRN - moraine'), ('MSQE', 'MSQE - mosque'), ('MND', 'MND - mound(s)'), ('MT', 'MT - mountain'), ('MTS', 'MTS - mountains'), ('FLTM', 'FLTM - mud flat(s)'), ('MFGM', 'MFGM - munitions plant'), ('MUS', 'MUS - museum'), ('NRWS', 'NRWS - narrows'), ('TNLN', 'TNLN - natural tunnel'), ('RESN', 'RESN - nature reserve'), ('NVB', 'NVB - naval base'), ('CNLN', 'CNLN - navigation canal(s)'), ('CHNN', 'CHNN - navigation channel'), ('MNNI', 'MNNI - nickel mine(s)'), ('NOV', 'NOV - novitiate'), ('PSN', 'PSN - nuclear power station'), ('NTK', 'NTK - nunatak'), ('NTKS', 'NTKS - nunataks'), ('NSY', 'NSY - nursery(-ies)'), ('OAS', 'OAS - oasis(-es)'), ('OBPT', 'OBPT - observation point'), ('OBS', 'OBS - observatory'), ('OCN', 'OCN - ocean'), ('BLDO', 'BLDO - office building'), ('CMPO', 'CMPO - oil camp'), ('ESTO', 'ESTO - oil palm plantation'), ('OILP', 'OILP - oil pipeline'), ('OILJ', 'OILJ - oil pipeline junction'), ('TRMO', 'TRMO - oil pipeline terminal'), ('PMPO', 'PMPO - oil pumping station'), ('OILR', 'OILR - oil refinery'), ('OILW', 'OILW - oil well'), ('OILF', 'OILF - oilfield'), ('GRVO', 'GRVO - olive grove'), ('MLO', 'MLO - olive oil mill'), ('OCH', 'OCH - orchard(s)'), ('MLM', 'MLM - ore treatment plant'), ('OVF', 'OVF - overfalls'), ('LKO', 'LKO - oxbow lake'), ('PGDA', 'PGDA - pagoda'), ('PAL', 'PAL - palace'), ('GRVP', 'GRVP - palm grove'), ('RESP', 'RESP - palm tree reserve'), ('PAN', 'PAN - pan'), ('PANS', 'PANS - pans'), ('PRSH', 'PRSH - parish'), ('PRK', 'PRK - park'), ('PRKGT', 'PRKGT - park gate'), ('PRKHQ', 'PRKHQ - park headquarters'), ('GARG', 'GARG - parking garage'), ('PKLT', 'PKLT - parking lot'), ('PASS', 'PASS - pass'), ('PSTP', 'PSTP - patrol post'), ('PK', 'PK - peak'), ('PKS', 'PKS - peaks'), ('PEAT', 'PEAT - peat cutting area'), ('PEN', 'PEN - peninsula'), ('BSNP', 'BSNP - petroleum basin'), ('MFGPH', 'MFGPH - phosphate works'), ('PIER', 'PIER - pier'), ('GRVPN', 'GRVPN - pine grove'), ('MNPL', 'MNPL - placer mine(s)'), ('PLN', 'PLN - plain(s)'), ('PLAT', 'PLAT - plateau'), ('PT', 'PT - point'), ('PTS', 'PTS - points'), ('PLDR', 'PLDR - polder'), ('PP', 'PP - police post'), ('PCL', 'PCL - political entity'), ('PND', 'PND - pond'), ('PNDS', 'PNDS - ponds'), ('POOL', 'POOL - pool(s)'), ('PPLL', 'PPLL - populated locality'), ('PPL', 'PPL - populated place'), ('PPLS', 'PPLS - populated places'), ('PRT', 'PRT - port'), ('PTGE', 'PTGE - portage'), ('PO', 'PO - post office'), ('PS', 'PS - power station'), ('PRN', 'PRN - prison'), ('PRMN', 'PRMN - promenade'), ('PROM', 'PROM - promontory(-ies)'), ('PYR', 'PYR - pyramid'), ('PYRS', 'PYRS - pyramids'), ('MNQR', 'MNQR - quarry(-ies)'), ('QUAY', 'QUAY - quay'), ('QCKS', 'QCKS - quicksand'), ('RECR', 'RECR - racetrack'), ('OBSR', 'OBSR - radio observatory'), ('STNR', 'STNR - radio station'), ('RR', 'RR - railroad'), ('RJCT', 'RJCT - railroad junction'), ('RSD', 'RSD - railroad siding'), ('RSGNL', 'RSGNL - railroad signal'), ('RSTN', 'RSTN - railroad station'), ('RSTP', 'RSTP - railroad stop'), ('TNLRR', 'TNLRR - railroad tunnel'), ('RYD', 'RYD - railroad yard'), ('RNCH', 'RNCH - ranch(es)'), ('RPDS', 'RPDS - rapids'), ('RVN', 'RVN - ravine(s)'), ('RCH', 'RCH - reach'), ('RF', 'RF - reef(s)'), ('PRNJ', 'PRNJ - reformatory'), ('CMPRF', 'CMPRF - refugee camp'), ('RGN', 'RGN - region'), ('CTRR', 'CTRR - religious center'), ('PPLR', 'PPLR - religious populated place'), ('RLG', 'RLG - religious site'), ('ITTR', 'ITTR - research institute'), ('RESV', 'RESV - reservation'), ('RES', 'RES - reserve'), ('RSV', 'RSV - reservoir(s)'), ('RSRT', 'RSRT - resort'), ('RHSE', 'RHSE - resthouse'), ('RLGR', 'RLGR - retreat'), ('RDGE', 'RDGE - ridge(s)'), ('RD', 'RD - road'), ('RDB', 'RDB - road bend'), ('RDCUT', 'RDCUT - road cut'), ('RDJCT', 'RDJCT - road junction'), ('TNLRD', 'TNLRD - road tunnel'), ('RDST', 'RDST - roadstead'), ('RK', 'RK - rock'), ('HMDA', 'HMDA - rock desert'), ('RKFL', 'RKFL - rockfall'), ('RKS', 'RKS - rocks'), ('RKRY', 'RKRY - rookery'), ('ESTR', 'ESTR - rubber plantation'), ('RUIN', 'RUIN - ruin(s)'), ('BDGQ', 'BDGQ - ruined bridge'), ('DAMQ', 'DAMQ - ruined dam'), ('SBKH', 'SBKH - sabkha(s)'), ('SDL', 'SDL - saddle'), ('SALT', 'SALT - salt area'), ('MFGN', 'MFGN - salt evaporation ponds'), ('LKN', 'LKN - salt lake'), ('LKSN', 'LKSN - salt lakes'), ('MRSHN', 'MRSHN - salt marsh'), ('MNN', 'MNN - salt mine(s)'), ('PNDN', 'PNDN - salt pond'), ('PNDSN', 'PNDSN - salt ponds'), ('SNTR', 'SNTR - sanatorium'), ('SAND', 'SAND - sand area'), ('ERG', 'ERG - sandy desert'), ('STNS', 'STNS - satellite station'), ('MLSW', 'MLSW - sawmill'), ('SCH', 'SCH - school'), ('ADMS', 'ADMS - school district'), ('STNB', 'STNB - scientific research base'), ('SCRB', 'SCRB - scrubland'), ('SEA', 'SEA - sea'), ('SCNU', 'SCNU - seachannel'), ('SCSU', 'SCSU - seachannels'), ('SMU', 'SMU - seamount'), ('SMSU', 'SMSU - seamounts'), ('AIRS', 'AIRS - seaplane landing area'), ('PPLA', 'PPLA - seat of a first-order administrative division'), ('PPLA4', 'PPLA4 - seat of a fourth-order administrative division'), ('PPLA2', 'PPLA2 - seat of a second-order administrative division'), ('PPLA3', 'PPLA3 - seat of a third-order administrative division'), ('ADM2', 'ADM2 - second-order administrative division'), ('BNKX', 'BNKX - section of bank'), ('CNLX', 'CNLX - section of canal'), ('ESTX', 'ESTX - section of estate'), ('HBRX', 'HBRX - section of harbor'), ('PCLIX', 'PCLIX - section of independent political entity'), ('STMIX', 'STMIX - section of intermittent stream'), ('ISLX', 'ISLX - section of island'), ('LGNX', 'LGNX - section of lagoon'), ('LKX', 'LKX - section of lake'), ('PENX', 'PENX - section of peninsula'), ('PLNX', 'PLNX - section of plain'), ('PLATX', 'PLATX - section of plateau'), ('PPLX', 'PPLX - section of populated place'), ('RFX', 'RFX - section of reef'), ('STMX', 'STMX - section of stream'), ('VALX', 'VALX - section of valley'), ('WADX', 'WADX - section of wadi'), ('FLLSX', 'FLLSX - section of waterfall(s)'), ('PCLS', 'PCLS - semi-independent political entity'), ('SWT', 'SWT - sewage treatment plant'), ('SHPF', 'SHPF - sheepfold'), ('SHOL', 'SHOL - shoal(s)'), ('SHOPC', 'SHOPC - shopping center or mall'), ('SHOR', 'SHOR - shore'), ('SHRN', 'SHRN - shrine'), ('SILL', 'SILL - sill'), ('SINK', 'SINK - sinkhole'), ('ESTSL', 'ESTSL - sisal plantation'), ('SLID', 'SLID - slide'), ('SLP', 'SLP - slope(s)'), ('SLCE', 'SLCE - sluice'), ('SNOW', 'SNOW - snowfield'), ('SD', 'SD - sound'), ('SPA', 'SPA - spa'), ('CTRS', 'CTRS - space center'), ('SPLY', 'SPLY - spillway'), ('SPIT', 'SPIT - spit'), ('SPNG', 'SPNG - spring(s)'), ('SPUR', 'SPUR - spur(s)'), ('SQR', 'SQR - square'), ('STBL', 'STBL - stable'), ('STDM', 'STDM - stadium'), ('STPS', 'STPS - steps'), ('STKR', 'STKR - stock route'), ('REG', 'REG - stony desert'), ('RET', 'RET - store'), ('SHSE', 'SHSE - storehouse'), ('STRT', 'STRT - strait'), ('STM', 'STM - stream'), ('BNKR', 'BNKR - stream bank'), ('STMB', 'STMB - stream bend'), ('STMGS', 'STMGS - stream gauging station'), ('STMM', 'STMM - stream mouth(s)'), ('STMS', 'STMS - streams'), ('ST', 'ST - street'), ('DAMSB', 'DAMSB - sub-surface dam'), ('SUBW', 'SUBW - subway'), ('SUBS', 'SUBS - subway station'), ('MLSG', 'MLSG - sugar mill'), ('ESTSG', 'ESTSG - sugar plantation'), ('MFGSG', 'MFGSG - sugar refinery'), ('SPNS', 'SPNS - sulphur spring(s)'), ('SWMP', 'SWMP - swamp'), ('SYG', 'SYG - synagogue'), ('TMTU', 'TMTU - tablemount (or guyot)'), ('TMSU', 'TMSU - tablemounts (or guyots)'), ('TAL', 'TAL - talus slope'), ('OILT', 'OILT - tank farm'), ('ESTT', 'ESTT - tea plantation'), ('SCHT', 'SCHT - technical school'), ('TMPL', 'TMPL - temple(s)'), ('AIRT', 'AIRT - terminal'), ('TRR', 'TRR - terrace'), ('TERR', 'TERR - territory'), ('ADM3', 'ADM3 - third-order administrative division'), ('CRKT', 'CRKT - tidal creek(s)'), ('FLTT', 'FLTT - tidal flat(s)'), ('MNSN', 'MNSN - tin mine(s)'), ('TOLL', 'TOLL - toll gate/barrier'), ('TMB', 'TMB - tomb(s)'), ('TOWR', 'TOWR - tower'), ('RDCR', 'RDCR - traffic circle'), ('TRL', 'TRL - trail'), ('TRANT', 'TRANT - transit terminal'), ('TREE', 'TREE - tree(s)'), ('TRIG', 'TRIG - triangulation station'), ('TRB', 'TRB - tribal area'), ('TUND', 'TUND - tundra'), ('TNL', 'TNL - tunnel'), ('TNLS', 'TNLS - tunnels'), ('CNLSB', 'CNLSB - underground irrigation canal(s)'), ('LKSB', 'LKSB - underground lake'), ('APNU', 'APNU - undersea apron'), ('ARCU', 'ARCU - undersea arch'), ('ARRU', 'ARRU - undersea arrugado'), ('BNKU', 'BNKU - undersea bank'), ('BKSU', 'BKSU - undersea banks'), ('BSNU', 'BSNU - undersea basin'), ('BNCU', 'BNCU - undersea bench'), ('BDLU', 'BDLU - undersea borderland'), ('CNYU', 'CNYU - undersea canyon'), ('CNSU', 'CNSU - undersea canyons'), ('CDAU', 'CDAU - undersea cordillera'), ('ESCU', 'ESCU - undersea escarpment (or scarp)'), ('FANU', 'FANU - undersea fan'), ('FLTU', 'FLTU - undersea flat'), ('FRKU', 'FRKU - undersea fork'), ('FRSU', 'FRSU - undersea forks'), ('FRZU', 'FRZU - undersea fracture zone'), ('FURU', 'FURU - undersea furrow'), ('GAPU', 'GAPU - undersea gap'), ('GLYU', 'GLYU - undersea gully'), ('HLLU', 'HLLU - undersea hill'), ('HLSU', 'HLSU - undersea hills'), ('HOLU', 'HOLU - undersea hole'), ('KNLU', 'KNLU - undersea knoll'), ('KNSU', 'KNSU - undersea knolls'), ('LDGU', 'LDGU - undersea ledge'), ('LEVU', 'LEVU - undersea levee'), ('MDVU', 'MDVU - undersea median valley'), ('MESU', 'MESU - undersea mesa'), ('MOTU', 'MOTU - undersea moat'), ('MNDU', 'MNDU - undersea mound'), ('MTU', 'MTU - undersea mountain'), ('MTSU', 'MTSU - undersea mountains'), ('PKU', 'PKU - undersea peak'), ('PKSU', 'PKSU - undersea peaks'), ('PNLU', 'PNLU - undersea pinnacle'), ('PLNU', 'PLNU - undersea plain'), ('PLTU', 'PLTU - undersea plateau'), ('PLFU', 'PLFU - undersea platform'), ('PRVU', 'PRVU - undersea province'), ('RMPU', 'RMPU - undersea ramp'), ('RNGU', 'RNGU - undersea range'), ('RAVU', 'RAVU - undersea ravine'), ('RFU', 'RFU - undersea reef'), ('RFSU', 'RFSU - undersea reefs'), ('RDGU', 'RDGU - undersea ridge'), ('RDSU', 'RDSU - undersea ridges'), ('RISU', 'RISU - undersea rise'), ('SDLU', 'SDLU - undersea saddle'), ('SHFU', 'SHFU - undersea shelf'), ('EDGU', 'EDGU - undersea shelf edge'), ('SHVU', 'SHVU - undersea shelf valley'), ('SHLU', 'SHLU - undersea shoal'), ('SHSU', 'SHSU - undersea shoals'), ('SILU', 'SILU - undersea sill'), ('SLPU', 'SLPU - undersea slope'), ('SPRU', 'SPRU - undersea spur'), ('TERU', 'TERU - undersea terrace'), ('TNGU', 'TNGU - undersea tongue'), ('TRNU', 'TRNU - undersea trench'), ('TRGU', 'TRGU - undersea trough'), ('VALU', 'VALU - undersea valley'), ('VLSU', 'VLSU - undersea valleys'), ('USGE', 'USGE - United States Government Establishment'), ('UPLD', 'UPLD - upland'), ('VAL', 'VAL - valley'), ('VALS', 'VALS - valleys'), ('VETF', 'VETF - veterinary facility'), ('VIN', 'VIN - vineyard'), ('VINS', 'VINS - vineyards'), ('VLC', 'VLC - volcano'), ('WAD', 'WAD - wadi'), ('WADB', 'WADB - wadi bend'), ('WADJ', 'WADJ - wadi junction'), ('WADM', 'WADM - wadi mouth'), ('WADS', 'WADS - wadies'), ('WALL', 'WALL - wall'), ('MLWTR', 'MLWTR - water mill'), ('PMPW', 'PMPW - water pumping station'), ('RSVT', 'RSVT - water tank'), ('WTRC', 'WTRC - watercourse'), ('FLLS', 'FLLS - waterfall(s)'), ('WTRH', 'WTRH - waterhole(s)'), ('WTRW', 'WTRW - waterworks'), ('WEIR', 'WEIR - weir(s)'), ('WLL', 'WLL - well'), ('WLLS', 'WLLS - wells'), ('WTLD', 'WTLD - wetland'), ('STNW', 'STNW - whaling station'), ('WHRF', 'WHRF - wharf(-ves)'), ('WHRL', 'WHRL - whirlpool'), ('RESW', 'RESW - wildlife reserve'), ('MLWND', 'MLWND - windmill'), ('WRCK', 'WRCK - wreck'), ('ZN', 'ZN - zone'), ('ZOO', 'ZOO - zoo')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='location_class',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='class', choices=[('1', '1 - Administrative Region'), ('2', '2 - Populated Place'), ('3', '3 - Structure'), ('4', '4 - Other Topographical Feature')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='location_reach',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='reach', choices=[('1', '1 - Activity'), ('2', '2 - Intended Beneficiaries')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='projectlocation',
            name='vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='vocabulary', choices=[('A1', 'A1 - Global Admininistrative Unit Layers'), ('A2', 'A2 - UN Second Administrative Level Boundary Project'), ('A3', 'A3 - Global Administrative Areas'), ('A4', 'A4 - ISO Country (3166-1 alpha-2)'), ('G1', 'G1 - Geonames'), ('G2', 'G2 - OpenStreetMap')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientcountry',
            name='country',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='country', choices=[('AF', 'AF - Afghanistan'), ('AX', 'AX - \xc5land Islands'), ('AL', 'AL - Albania'), ('DZ', 'DZ - Algeria'), ('AS', 'AS - American Samoa'), ('AD', 'AD - Andorra'), ('AO', 'AO - Angola'), ('AI', 'AI - Anguilla'), ('AQ', 'AQ - Antarctica'), ('AG', 'AG - Antigua and Barbuda'), ('AR', 'AR - Argentina'), ('AM', 'AM - Armenia'), ('AW', 'AW - Aruba'), ('AU', 'AU - Australia'), ('AT', 'AT - Austria'), ('AZ', 'AZ - Azerbaijan'), ('BS', 'BS - Bahamas'), ('BH', 'BH - Bahrain'), ('BD', 'BD - Bangladesh'), ('BB', 'BB - Barbados'), ('BY', 'BY - Belarus'), ('BE', 'BE - Belgium'), ('BZ', 'BZ - Belize'), ('BJ', 'BJ - Benin'), ('BM', 'BM - Bermuda'), ('BT', 'BT - Bhutan'), ('BO', 'BO - Bolivia, Plurinational State of'), ('BQ', 'BQ - Bonaire, Saint Eustatius and Saba'), ('BA', 'BA - Bosnia and Herzegovina'), ('BW', 'BW - Botswana'), ('BV', 'BV - Bouvet Island'), ('BR', 'BR - Brazil'), ('IO', 'IO - British Indian Ocean Territory'), ('BN', 'BN - Brunei Darussalam'), ('BG', 'BG - Bulgaria'), ('BF', 'BF - Burkina Faso'), ('BI', 'BI - Burundi'), ('KH', 'KH - Cambodia'), ('CM', 'CM - Cameroon'), ('CA', 'CA - Canada'), ('CV', 'CV - Cape Verde'), ('KY', 'KY - Cayman Islands'), ('CF', 'CF - Central African Republic'), ('TD', 'TD - Chad'), ('CL', 'CL - Chile'), ('CN', 'CN - China'), ('CX', 'CX - Christmas Island'), ('CC', 'CC - Cocos (Keeling) Islands'), ('CO', 'CO - Colombia'), ('KM', 'KM - Comoros'), ('CG', 'CG - Congo'), ('CD', 'CD - Congo, The Democratic Republic of the'), ('CK', 'CK - Cook Islands'), ('CR', 'CR - Costa Rica'), ('CI', 'CI - C\xf4te Divoire'), ('HR', 'HR - Croatia'), ('CU', 'CU - Cuba'), ('CW', 'CW - Cura\xe7ao'), ('CY', 'CY - Cyprus'), ('CZ', 'CZ - Czech Republic'), ('DK', 'DK - Denmark'), ('DJ', 'DJ - Djibouti'), ('DM', 'DM - Dominica'), ('DO', 'DO - Dominican Republic'), ('EC', 'EC - Ecuador'), ('EG', 'EG - Egypt'), ('SV', 'SV - El Salvador'), ('GQ', 'GQ - Equatorial Guinea'), ('ER', 'ER - Eritrea'), ('EE', 'EE - Estonia'), ('ET', 'ET - Ethiopia'), ('FK', 'FK - Falkland Islands (Malvinas)'), ('FO', 'FO - Faroe Islands'), ('FJ', 'FJ - Fiji'), ('FI', 'FI - Finland'), ('FR', 'FR - France'), ('GF', 'GF - French Guiana'), ('PF', 'PF - French Polynesia'), ('TF', 'TF - French Southern Territories'), ('GA', 'GA - Gabon'), ('GM', 'GM - Gambia'), ('GE', 'GE - Georgia'), ('DE', 'DE - Germany'), ('GH', 'GH - Ghana'), ('GI', 'GI - Gibraltar'), ('GR', 'GR - Greece'), ('GL', 'GL - Greenland'), ('GD', 'GD - Grenada'), ('GP', 'GP - Guadeloupe'), ('GU', 'GU - Guam'), ('GT', 'GT - Guatemala'), ('GG', 'GG - Guernsey'), ('GN', 'GN - Guinea'), ('GW', 'GW - Guinea-Bissau'), ('GY', 'GY - Guyana'), ('HT', 'HT - Haiti'), ('HM', 'HM - Heard Island and Mcdonald Islands'), ('VA', 'VA - Holy See (Vatican City State)'), ('HN', 'HN - Honduras'), ('HK', 'HK - Hong Kong'), ('HU', 'HU - Hungary'), ('IS', 'IS - Iceland'), ('IN', 'IN - India'), ('ID', 'ID - Indonesia'), ('IR', 'IR - Iran, Islamic Republic of'), ('IQ', 'IQ - Iraq'), ('IE', 'IE - Ireland'), ('IM', 'IM - Isle of Man'), ('IL', 'IL - Israel'), ('IT', 'IT - Italy'), ('JM', 'JM - Jamaica'), ('JP', 'JP - Japan'), ('JE', 'JE - Jersey'), ('JO', 'JO - Jordan'), ('KZ', 'KZ - Kazakhstan'), ('KE', 'KE - Kenya'), ('KI', 'KI - Kiribati'), ('KP', 'KP - Korea, Democratic Peoples Republic of'), ('KR', 'KR - Korea, Republic of'), ('XK', 'XK - Kosovo'), ('KW', 'KW - Kuwait'), ('KG', 'KG - Kyrgyzstan'), ('LA', 'LA - Lao Peoples Democratic Republic'), ('LV', 'LV - Latvia'), ('LB', 'LB - Lebanon'), ('LS', 'LS - Lesotho'), ('LR', 'LR - Liberia'), ('LY', 'LY - Libyan Arab Jamahiriya'), ('LI', 'LI - Liechtenstein'), ('LT', 'LT - Lithuania'), ('LU', 'LU - Luxembourg'), ('MO', 'MO - Macao'), ('MK', 'MK - Macedonia, The Former Yugoslav Republic of'), ('MG', 'MG - Madagascar'), ('MW', 'MW - Malawi'), ('MY', 'MY - Malaysia'), ('MV', 'MV - Maldives'), ('ML', 'ML - Mali'), ('MT', 'MT - Malta'), ('MH', 'MH - Marshall Islands'), ('MQ', 'MQ - Martinique'), ('MR', 'MR - Mauritania'), ('MU', 'MU - Mauritius'), ('YT', 'YT - Mayotte'), ('MX', 'MX - Mexico'), ('FM', 'FM - Micronesia, Federated States of'), ('MD', 'MD - Moldova, Republic of'), ('MC', 'MC - Monaco'), ('MN', 'MN - Mongolia'), ('ME', 'ME - Montenegro'), ('MS', 'MS - Montserrat'), ('MA', 'MA - Morocco'), ('MZ', 'MZ - Mozambique'), ('MM', 'MM - Myanmar'), ('NA', 'NA - Namibia'), ('NR', 'NR - Nauru'), ('NP', 'NP - Nepal'), ('NL', 'NL - Netherlands'), ('AN', 'AN - Netherland Antilles'), ('NC', 'NC - New Caledonia'), ('NZ', 'NZ - New Zealand'), ('NI', 'NI - Nicaragua'), ('NE', 'NE - Niger'), ('NG', 'NG - Nigeria'), ('NU', 'NU - Niue'), ('NF', 'NF - Norfolk Island'), ('MP', 'MP - Northern Mariana Islands'), ('NO', 'NO - Norway'), ('OM', 'OM - Oman'), ('PK', 'PK - Pakistan'), ('PW', 'PW - Palau'), ('PS', 'PS - Palestinian Territory, Occupied'), ('PA', 'PA - Panama'), ('PG', 'PG - Papua New Guinea'), ('PY', 'PY - Paraguay'), ('PE', 'PE - Peru'), ('PH', 'PH - Philippines'), ('PN', 'PN - Pitcairn'), ('PL', 'PL - Poland'), ('PT', 'PT - Portugal'), ('PR', 'PR - Puerto Rico'), ('QA', 'QA - Qatar'), ('RE', 'RE - Reunion'), ('RO', 'RO - Romania'), ('RU', 'RU - Russian Federation'), ('RW', 'RW - Rwanda'), ('BL', 'BL - Saint Barth\xe9lemy'), ('SH', 'SH - Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'KN - Saint Kitts and Nevis'), ('LC', 'LC - Saint Lucia'), ('MF', 'MF - Saint Martin (French Part)'), ('PM', 'PM - Saint Pierre and Miquelon'), ('VC', 'VC - Saint Vincent and the Grenadines'), ('WS', 'WS - Samoa'), ('SM', 'SM - San Marino'), ('ST', 'ST - Sao Tome and Principe'), ('SA', 'SA - Saudi Arabia'), ('SN', 'SN - Senegal'), ('RS', 'RS - Serbia'), ('SC', 'SC - Seychelles'), ('SL', 'SL - Sierra Leone'), ('SG', 'SG - Singapore'), ('SX', 'SX - Sint Maarten (Dutch Part)'), ('SK', 'SK - Slovakia'), ('SI', 'SI - Slovenia'), ('SB', 'SB - Solomon Islands'), ('SO', 'SO - Somalia'), ('ZA', 'ZA - South Africa'), ('GS', 'GS - South Georgia and the South Sandwich Islands'), ('SS', 'SS - South Sudan'), ('ES', 'ES - Spain'), ('LK', 'LK - Sri Lanka'), ('SD', 'SD - Sudan'), ('SR', 'SR - Suriname'), ('SJ', 'SJ - Svalbard and Jan Mayen'), ('SZ', 'SZ - Swaziland'), ('SE', 'SE - Sweden'), ('CH', 'CH - Switzerland'), ('SY', 'SY - Syrian Arab Republic'), ('TW', 'TW - Taiwan, Province of China'), ('TJ', 'TJ - Tajikistan'), ('TZ', 'TZ - Tanzania, United Republic of'), ('TH', 'TH - Thailand'), ('TL', 'TL - Timor-Leste'), ('TG', 'TG - Togo'), ('TK', 'TK - Tokelau'), ('TO', 'TO - Tonga'), ('TT', 'TT - Trinidad and Tobago'), ('TN', 'TN - Tunisia'), ('TR', 'TR - Turkey'), ('TM', 'TM - Turkmenistan'), ('TC', 'TC - Turks and Caicos Islands'), ('TV', 'TV - Tuvalu'), ('UG', 'UG - Uganda'), ('UA', 'UA - Ukraine'), ('AE', 'AE - United Arab Emirates'), ('GB', 'GB - United Kingdom'), ('US', 'US - United States'), ('UM', 'UM - United States Minor Outlying Islands'), ('UY', 'UY - Uruguay'), ('UZ', 'UZ - Uzbekistan'), ('VU', 'VU - Vanuatu'), ('VE', 'VE - Venezuela, Bolivarian Republic of'), ('VN', 'VN - Viet Nam'), ('VG', 'VG - Virgin Islands, British'), ('VI', 'VI - Virgin Islands, U.S.'), ('WF', 'WF - Wallis and Futuna'), ('EH', 'EH - Western Sahara'), ('YE', 'YE - Yemen'), ('ZM', 'ZM - Zambia'), ('ZW', 'ZW - Zimbabwe')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientregion',
            name='region',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North and Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South and Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='recipientregion',
            name='region_vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='region vocabulary', choices=[('1', '1 - OECD DAC'), ('2', '2 - UN')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='relatedproject',
            name='related_project',
            field=models.ForeignKey(related_name='related_to_projects', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rsr.Project', null=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='relatedproject',
            name='relation',
            field=akvo.rsr.fields.ValidXMLCharField(help_text="The relation between a project and related project. (E.g. select the 'Parent' relation when the selected project here is the parent of this project).", max_length=1, verbose_name='relation', choices=[('1', '1 - Parent'), ('2', '2 - Child'), ('3', '3 - Sibling'), ('4', '4 - Co-funded'), ('5', '5 - Third Party')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='result',
            name='type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select whether the result is an output, outcome or impact. <a href="http://www.tacticalphilanthropy.com/2010/06/outputs-outcomes-impact-oh-my/" target="_blank">Further explanation on result types</a>', max_length=1, verbose_name='type', choices=[('1', '1 - Output'), ('2', '2 - Outcome'), ('3', '3 - Impact'), ('9', '9 - Other')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='sector',
            name='vocabulary',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=5, verbose_name='vocabulary', choices=[('1', '1 - OECD DAC CRS Purpose Codes (5 digit)'), ('2', '2 - OECD DAC CRS Purpose Codes (3 digit)'), ('3', '3 - Classification of the Functions of Government (UN)'), ('4', '4 - Statistical classification of economic activities in the European Community'), ('5', '5 - National Taxonomy for Exempt Entities (USA)'), ('6', '6 - AidData'), ('99', '99 - Reporting Organisation'), ('98', '98 - Reporting Organisation 2')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='aid_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='aid type', choices=[('A01', 'A01 - General budget support'), ('A02', 'A02 - Sector budget support'), ('B01', 'B01 - Core support to NGOs, other private bodies, PPPs and research institutes'), ('B02', 'B02 - Core contributions to multilateral institutions'), ('B03', 'B03 - Contributions to specific-purpose programmes and funds managed by international organisations (multilateral, INGO)'), ('B04', 'B04 - Basket funds/pooled funding'), ('C01', 'C01 - Project-type interventions'), ('D01', 'D01 - Donor country personnel'), ('D02', 'D02 - Other technical assistance'), ('E01', 'E01 - Scholarships/training in donor country'), ('E02', 'E02 - Imputed student costs'), ('F01', 'F01 - Debt relief'), ('G01', 'G01 - Administrative costs not included elsewhere'), ('H01', 'H01 - Development awareness'), ('H02', 'H02 - Refugees in donor countries')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='currency',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Croatian Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - New Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XCD', 'XCD - East Caribbean Dollar'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='disbursement_channel',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='disbursement channel', choices=[('1', '1 - Money is disbursed through central Ministry of Finance or Treasury'), ('2', '2 - Money is disbursed directly to the implementing institution and managed through a separate bank account'), ('3', '3 - Aid in kind: Donors utilise third party agencies, e.g. NGOs or management companies'), ('4', '4 - Aid in kind: Donors manage funds themselves')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='finance_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='finance type', choices=[('110', '110 - Aid grant excluding debt reorganisation'), ('111', '111 - Subsidies to national private investors'), ('210', '210 - Interest subsidy grant in AF'), ('211', '211 - Interest subsidy to national private exporters'), ('310', '310 - Deposit basis'), ('311', '311 - Encashment basis'), ('410', '410 - Aid loan excluding debt reorganisation'), ('411', '411 - Investment-related loan to developing countries'), ('412', '412 - Loan in a joint venture with the recipient'), ('413', '413 - Loan to national private investor'), ('414', '414 - Loan to national private exporter'), ('451', '451 - Non-banks guaranteed export credits'), ('452', '452 - Non-banks non-guaranteed portions of guaranteed export credits'), ('453', '453 - Bank export credits'), ('510', '510 - Acquisition of equity as part of a joint venture with the recipient'), ('511', '511 - Acquisition of equity not part of joint venture in developing countries'), ('512', '512 - Other acquisition of equity. Investment in a country on the DAC List of ODA Recipients that is not made to acquire a lasting interest in an enterprise.'), ('610', '610 - Debt forgiveness: ODA claims (P)'), ('611', '611 - Debt forgiveness: ODA claims (I)'), ('612', '612 - Debt forgiveness: OOF claims (P)'), ('613', '613 - Debt forgiveness: OOF claims (I)'), ('614', '614 - Debt forgiveness: Private claims (P)'), ('615', '615 - Debt forgiveness: Private claims (I)'), ('616', '616 - Debt forgiveness: OOF claims (DSR)'), ('617', '617 - Debt forgiveness: Private claims (DSR)'), ('618', '618 - Debt forgiveness: Other'), ('620', '620 - Debt rescheduling: ODA claims (P)'), ('621', '621 - Debt rescheduling: ODA claims (I)'), ('622', '622 - Debt rescheduling: OOF claims (P)'), ('623', '623 - Debt rescheduling: OOF claims (I)'), ('624', '624 - Debt rescheduling: Private claims (P)'), ('625', '625 - Debt rescheduling: Private claims (I)'), ('626', '626 - Debt rescheduling: OOF claims (DSR)'), ('627', '627 - Debt rescheduling: Private claims (DSR)'), ('630', '630 - Debt rescheduling: OOF claim (DSR - original loan principal)'), ('631', '631 - Debt rescheduling: OOF claim (DSR - original loan interest)'), ('632', '632 - Debt rescheduling: Private claim (DSR - original loan principal)'), ('710', '710 - Foreign direct investment'), ('711', '711 - Other foreign direct investment, including reinvested earnings'), ('810', '810 - Bank bonds'), ('811', '811 - Non-bank bonds'), ('910', '910 - Other bank securities/claims'), ('911', '911 - Other non-bank securities/claims'), ('912', '912 - Securities and other instruments issued by multilateral agencies')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='flow_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='flow type', choices=[('10', '10 - ODA'), ('20', '20 - OOF'), ('30', '30 - Private NGO and other private sources'), ('35', '35 - Private Market'), ('40', '40 - Non flow'), ('50', '50 - Other flows')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='provider_organisation',
            field=models.ForeignKey(related_name='providing_transactions', on_delete=django.db.models.deletion.SET_NULL, verbose_name='provider organisation', blank=True, to='rsr.Organisation', null=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='receiver_organisation',
            field=models.ForeignKey(related_name='receiving_transactions', on_delete=django.db.models.deletion.SET_NULL, verbose_name='receiver organisation', blank=True, to='rsr.Organisation', null=True),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='tied_status',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='tied status', choices=[('3', '3 - Partially tied'), ('4', '4 - Tied'), ('5', '5 - Untied')]),
            preserve_default=True,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the type of transaction from the list.', max_length=2, verbose_name='transaction type', choices=[('1', '1 - Incoming Funds'), ('2', '2 - Commitment'), ('3', '3 - Disbursement'), ('4', '4 - Expenditure'), ('5', '5 - Interest Repayment'), ('6', '6 - Loan Repayment'), ('7', '7 - Reimbursement'), ('8', '8 - Purchase of Equity'), ('9', '9 - Sale of Equity'), ('10', '10 - Credit Guarantee')]),
            preserve_default=True,
        ),
    ]
