# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import akvo.rsr.models.keyword
import akvo.rsr.models.organisation
import akvo.rsr.models.iati_export
import datetime
import akvo.rsr.models.project_document
import akvo.rsr.models.iati_import_job
import django.db.models.deletion
import akvo.rsr.models.user
from django.conf import settings
import django.core.validators
import akvo.rsr.models.result.utils
import sorl.thumbnail.fields
import embed_video.fields
import akvo.rsr.fields
import akvo.rsr.models.focus_area
import akvo.rsr.validators
import akvo.rsr.models.project
import akvo.rsr.models.project_update
import django.utils.timezone
import akvo.rsr.models.organisation_document
import akvo.rsr.models.partner_site


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PeriodActualValue',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('measure', models.CharField(max_length=1)),
                ('value', models.IntegerField()),
                ('numerator', models.IntegerField()),
                ('denominator', models.IntegerField()),
            ],
            options={
                'db_table': 'rsr_indicator_period_actual_value',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PeriodDisaggregation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('dimension_name', models.CharField(max_length=100)),
                ('dimension_value', models.CharField(max_length=100)),
                ('value', models.IntegerField()),
                ('numerator', models.IntegerField()),
                ('denominator', models.IntegerField()),
            ],
            options={
                'db_table': 'rsr_indicator_period_disaggregation',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', akvo.rsr.fields.ValidXMLCharField(unique=True, max_length=254, verbose_name='username')),
                ('email', models.EmailField(unique=True, max_length=254, verbose_name='email address')),
                ('first_name', akvo.rsr.fields.ValidXMLCharField(max_length=30, verbose_name='first name', blank=True)),
                ('last_name', akvo.rsr.fields.ValidXMLCharField(max_length=30, verbose_name='last name', blank=True)),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff')),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user is a general RSR admin. To be used only for Akvo employees.', verbose_name='admin')),
                ('is_support', models.BooleanField(default=False, help_text='Designates whether the user is a support user. To be used for users willing to receive notifications when a new user registers for their organisation.', verbose_name='support user')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('notes', akvo.rsr.fields.ValidXMLTextField(default=b'', verbose_name='Notes and comments', blank=True)),
                ('avatar', sorl.thumbnail.fields.ImageField(help_text='The avatar should be less than 500 kb in size.', upload_to=akvo.rsr.models.user.image_path, null=True, verbose_name='avatar')),
                ('groups', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Group', blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of his/her group.', verbose_name='groups')),
            ],
            options={
                'ordering': ['username'],
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AdministrativeLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(help_text='Coded identification of national and sub-national divisions according to recognised administrative boundary repositories. Multiple levels may be reported.', max_length=25, verbose_name='administrative code', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='For reference: <a href="http://iatistandard.org/202/codelists/GeographicVocabulary/" target="_blank">http://iatistandard.org/202/codelists/GeographicVocabulary/</a>.', max_length=2, verbose_name='administrative vocabulary', choices=[('A1', 'A1 - Global Admininistrative Unit Layers'), ('A2', 'A2 - UN Second Administrative Level Boundary Project'), ('A3', 'A3 - Global Administrative Areas'), ('A4', 'A4 - ISO Country (3166-1 alpha-2)'), ('G1', 'G1 - Geonames'), ('G2', 'G2 - OpenStreetMap')])),
                ('level', models.PositiveSmallIntegerField(null=True, verbose_name='administrative level', blank=True)),
            ],
            options={
                'verbose_name': 'location administrative',
                'verbose_name_plural': 'location administratives',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Benchmark',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('value', models.IntegerField(verbose_name='benchmark value')),
            ],
            options={
                'ordering': ('category__name', 'name__order'),
                'verbose_name': 'benchmark',
                'verbose_name_plural': 'benchmarks',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Benchmarkname',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='Enter a name for the benchmark. (80 characters).', max_length=80, verbose_name='benchmark name')),
                ('order', models.IntegerField(default=0, help_text='Used to order the benchmarks when displayed. Larger numbers sink to the bottom of the list.', verbose_name='order')),
            ],
            options={
                'ordering': ['order', 'name'],
                'verbose_name': 'benchmark name',
                'verbose_name_plural': 'benchmark names',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BudgetItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('other_extra', akvo.rsr.fields.ValidXMLCharField(help_text='Enter a description for an "other" budget item.', max_length=30, null=True, verbose_name='other label extra info', blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget item. Use a period to denote decimals.', null=True, verbose_name='budget item value')),
                ('type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select whether this is an original or revised budget of the project.', max_length=1, verbose_name='budget type', choices=[('1', '1 - Original'), ('2', '2 - Revised')])),
                ('period_start', models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='budget item period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='budget item period end', blank=True)),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='budget item value date', blank=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The status explains whether the budget being reported is indicative or has been formally committed.', max_length=1, verbose_name='status', choices=[('1', '1 - Indicative'), ('2', '2 - Committed')])),
            ],
            options={
                'ordering': ('label',),
                'verbose_name': 'budget item',
                'verbose_name_plural': 'budget items',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BudgetItemLabel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('label', akvo.rsr.fields.ValidXMLCharField(unique=True, max_length=30, verbose_name='label', db_index=True)),
            ],
            options={
                'ordering': ('label',),
                'verbose_name': 'budget item label',
                'verbose_name_plural': 'budget item labels',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='Enter a name for the category. (50 characters).', max_length=50, verbose_name='category name', db_index=True)),
                ('benchmarknames', models.ManyToManyField(help_text='Select the benchmark names for the category.', to='rsr.Benchmarkname', verbose_name='benchmark names', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(unique=True, max_length=50, verbose_name='country name', db_index=True)),
                ('iso_code', akvo.rsr.fields.ValidXMLCharField(db_index=True, unique=True, max_length=2, verbose_name='ISO 3166 code', choices=[('af', 'Afghanistan'), ('ax', '\xc5land Islands'), ('al', 'Albania'), ('dz', 'Algeria'), ('as', 'American Samoa'), ('ad', 'Andorra'), ('ao', 'Angola'), ('ai', 'Anguilla'), ('aq', 'Antarctica'), ('ag', 'Antigua and Barbuda'), ('ar', 'Argentina'), ('am', 'Armenia'), ('aw', 'Aruba'), ('au', 'Australia'), ('at', 'Austria'), ('az', 'Azerbaijan'), ('bs', 'Bahamas'), ('bh', 'Bahrain'), ('bd', 'Bangladesh'), ('bb', 'Barbados'), ('by', 'Belarus'), ('be', 'Belgium'), ('bz', 'Belize'), ('bj', 'Benin'), ('bm', 'Bermuda'), ('bt', 'Bhutan'), ('bo', 'Bolivia, Plurinational State of'), ('bq', 'Bonaire, Sint Eustatius and Saba'), ('ba', 'Bosnia and Herzegovina'), ('bw', 'Botswana'), ('bv', 'Bouvet Island'), ('br', 'Brazil'), ('io', 'British Indian Ocean Territory'), ('bn', 'Brunei Darussalam'), ('bg', 'Bulgaria'), ('bf', 'Burkina Faso'), ('bi', 'Burundi'), ('kh', 'Cambodia'), ('cm', 'Cameroon'), ('ca', 'Canada'), ('cv', 'Cape Verde'), ('ky', 'Cayman Islands'), ('cf', 'Central African Republic'), ('td', 'Chad'), ('cl', 'Chile'), ('cn', 'China'), ('cx', 'Christmas Island'), ('cc', 'Cocos (keeling) Islands'), ('co', 'Colombia'), ('km', 'Comoros'), ('cg', 'Congo'), ('cd', 'Congo, The Democratic Republic of the'), ('ck', 'Cook Islands'), ('cr', 'Costa Rica'), ('ci', "C\xf4te D'ivoire"), ('hr', 'Croatia'), ('cu', 'Cuba'), ('cw', 'Cura\xe7ao'), ('cy', 'Cyprus'), ('cz', 'Czech Republic'), ('dk', 'Denmark'), ('dj', 'Djibouti'), ('dm', 'Dominica'), ('do', 'Dominican Republic'), ('ec', 'Ecuador'), ('eg', 'Egypt'), ('sv', 'El Salvador'), ('gq', 'Equatorial Guinea'), ('er', 'Eritrea'), ('ee', 'Estonia'), ('et', 'Ethiopia'), ('fk', 'Falkland Islands (Malvinas)'), ('fo', 'Faroe Islands'), ('fj', 'Fiji'), ('fi', 'Finland'), ('fr', 'France'), ('gf', 'French Guiana'), ('pf', 'French Polynesia'), ('tf', 'French Southern Territories'), ('ga', 'Gabon'), ('gm', 'Gambia'), ('ge', 'Georgia'), ('de', 'Germany'), ('gh', 'Ghana'), ('gi', 'Gibraltar'), ('gr', 'Greece'), ('gl', 'Greenland'), ('gd', 'Grenada'), ('gp', 'Guadeloupe'), ('gu', 'Guam'), ('gt', 'Guatemala'), ('gg', 'Guernsey'), ('gn', 'Guinea'), ('gw', 'Guinea-bissau'), ('gy', 'Guyana'), ('ht', 'Haiti'), ('hm', 'Heard Island and Mcdonald Islands'), ('va', 'Holy See (Vatican City State)'), ('hn', 'Honduras'), ('hk', 'Hong Kong'), ('hu', 'Hungary'), ('is', 'Iceland'), ('in', 'India'), ('id', 'Indonesia'), ('ir', 'Iran, Islamic Republic of'), ('iq', 'Iraq'), ('ie', 'Ireland'), ('im', 'Isle of Man'), ('il', 'Israel'), ('it', 'Italy'), ('jm', 'Jamaica'), ('jp', 'Japan'), ('je', 'Jersey'), ('jo', 'Jordan'), ('kz', 'Kazakhstan'), ('ke', 'Kenya'), ('ki', 'Kiribati'), ('kp', "Korea, Democratic People's Republic of"), ('kr', 'Korea, Republic of'), ('xk', 'Kosovo'), ('kw', 'Kuwait'), ('kg', 'Kyrgyzstan'), ('la', "Lao People's Democratic Republic"), ('lv', 'Latvia'), ('lb', 'Lebanon'), ('ls', 'Lesotho'), ('lr', 'Liberia'), ('ly', 'Libyan Arab Jamahiriya'), ('li', 'Liechtenstein'), ('lt', 'Lithuania'), ('lu', 'Luxembourg'), ('mo', 'Macao'), ('mk', 'Macedonia, The Former Yugoslav Republic of'), ('mg', 'Madagascar'), ('mw', 'Malawi'), ('my', 'Malaysia'), ('mv', 'Maldives'), ('ml', 'Mali'), ('mt', 'Malta'), ('mh', 'Marshall Islands'), ('mq', 'Martinique'), ('mr', 'Mauritania'), ('mu', 'Mauritius'), ('yt', 'Mayotte'), ('mx', 'Mexico'), ('fm', 'Micronesia, Federated States of'), ('md', 'Moldova, Republic of'), ('mc', 'Monaco'), ('mn', 'Mongolia'), ('me', 'Montenegro'), ('ms', 'Montserrat'), ('ma', 'Morocco'), ('mz', 'Mozambique'), ('mm', 'Myanmar'), ('na', 'Namibia'), ('nr', 'Nauru'), ('np', 'Nepal'), ('nl', 'Netherlands'), ('nc', 'New Caledonia'), ('nz', 'New Zealand'), ('ni', 'Nicaragua'), ('ne', 'Niger'), ('ng', 'Nigeria'), ('nu', 'Niue'), ('nf', 'Norfolk Island'), ('mp', 'Northern Mariana Islands'), ('no', 'Norway'), ('om', 'Oman'), ('pk', 'Pakistan'), ('pw', 'Palau'), ('ps', 'Palestine, State of'), ('pa', 'Panama'), ('pg', 'Papua New Guinea'), ('py', 'Paraguay'), ('pe', 'Peru'), ('ph', 'Philippines'), ('pn', 'Pitcairn'), ('pl', 'Poland'), ('pt', 'Portugal'), ('pr', 'Puerto Rico'), ('qa', 'Qatar'), ('re', 'R\xe9union'), ('ro', 'Romania'), ('ru', 'Russian Federation'), ('rw', 'Rwanda'), ('bl', 'Saint Barth\xe9lemy'), ('sh', 'Saint Helena, Ascension and Tristan Da Cunha'), ('kn', 'Saint Kitts and Nevis'), ('lc', 'Saint Lucia'), ('mf', 'Saint Martin (French part)'), ('pm', 'Saint Pierre and Miquelon'), ('vc', 'Saint Vincent and the Grenadines'), ('ws', 'Samoa'), ('sm', 'San Marino'), ('st', 'Sao Tome and Principe'), ('sa', 'Saudi Arabia'), ('sn', 'Senegal'), ('rs', 'Serbia'), ('sc', 'Seychelles'), ('sl', 'Sierra Leone'), ('sg', 'Singapore'), ('sx', 'Sint Maarten (Dutch part)'), ('sk', 'Slovakia'), ('si', 'Slovenia'), ('sb', 'Solomon Islands'), ('so', 'Somalia'), ('za', 'South Africa'), ('gs', 'South Georgia and the South Sandwich Islands'), ('ss', 'South Sudan'), ('es', 'Spain'), ('lk', 'Sri Lanka'), ('sd', 'Sudan'), ('sr', 'Suriname'), ('sj', 'Svalbard and Jan Mayen'), ('sz', 'Swaziland'), ('se', 'Sweden'), ('ch', 'Switzerland'), ('sy', 'Syrian Arab Republic'), ('tw', 'Taiwan, Province of China'), ('tj', 'Tajikistan'), ('tz', 'Tanzania, United Republic of'), ('th', 'Thailand'), ('tl', 'Timor-leste'), ('tg', 'Togo'), ('tk', 'Tokelau'), ('to', 'Tonga'), ('tt', 'Trinidad and Tobago'), ('tn', 'Tunisia'), ('tr', 'Turkey'), ('tm', 'Turkmenistan'), ('tc', 'Turks and Caicos Islands'), ('tv', 'Tuvalu'), ('ug', 'Uganda'), ('ua', 'Ukraine'), ('ae', 'United Arab Emirates'), ('gb', 'United Kingdom'), ('us', 'United States'), ('um', 'United States Minor Outlying Islands'), ('uy', 'Uruguay'), ('uz', 'Uzbekistan'), ('vu', 'Vanuatu'), ('ve', 'Venezuela, Bolivarian Republic of'), ('vn', 'Vietnam'), ('vg', 'Virgin Islands, British'), ('vi', 'Virgin Islands, U.S.'), ('wf', 'Wallis and Futuna'), ('eh', 'Western Sahara'), ('ye', 'Yemen'), ('zm', 'Zambia'), ('zw', 'Zimbabwe')])),
                ('continent', akvo.rsr.fields.ValidXMLCharField(max_length=20, verbose_name='continent name', db_index=True)),
                ('continent_code', akvo.rsr.fields.ValidXMLCharField(db_index=True, max_length=2, verbose_name='continent code', choices=[('af', 'Africa'), ('as', 'Asia'), ('eu', 'Europe'), ('na', 'North America'), ('sa', 'South America'), ('oc', 'Oceania'), ('an', 'Antarctica')])),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CountryBudgetItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This item encodes the alignment of activities with both the functional and administrative classifications used in the recipient country\u2019s Chart of Accounts. This applies to both on- and off-budget activities.', max_length=10, verbose_name='country budget item', choices=[('1.1.1', '1.1.1 - Executive - executive'), ('1.2.1', '1.2.1 - Legislative - legislative'), ('1.3.1', '1.3.1 - Accountability - macroeconomic policy'), ('1.3.2', '1.3.2 - Accountability - budgeting'), ('1.3.3', '1.3.3 - Accountability - planning'), ('1.3.4', '1.3.4 - Accountability - Treasury/Accounts'), ('1.3.5', '1.3.5 - Accountability - debt and aid management'), ('1.3.6', '1.3.6 - Accountability - tax policy'), ('1.3.7', '1.3.7 - Accountability - tax collection'), ('1.3.8', '1.3.8 - Accountability - local government finance'), ('1.3.9', '1.3.9 - Accountability - other central transfers to institutions '), ('1.3.10', '1.3.10 - Accountability - national audit'), ('1.3.11', '1.3.11 - Accountability - national monitoring and evaluation'), ('1.3.12', '1.3.12 - Accountability - monetary institutions'), ('1.3.13', '1.3.13 - Accountability - financial sector policy and regulation'), ('1.4.1', '1.4.1 - External Affairs - foreign affairs '), ('1.4.2', '1.4.2 - External Affairs - diplomatic missions'), ('1.4.3', '1.4.3 - External Affairs - official development assistance'), ('1.5.1', '1.5.1 - General Personnel Services - general personnel services'), ('1.6.1', '1.6.1 - Statistics - statistics'), ('1.7.1', '1.7.1 - Other General Services - support to civil society '), ('1.7.2', '1.7.2 - Other General Services - central procurement'), ('1.7.3', '1.7.3 - Other General Services - Local Government Administration'), ('1.7.4', '1.7.4 - Other General Services - other general services'), ('1.8.1', '1.8.1 - Elections - elections'), ('2.1.1', '2.1.1 - Justice, Law and Order - policy, planning and administration'), ('2.1.2', '2.1.2 - Justice, Law and Order - fire or police'), ('2.1.3', '2.1.3 - Justice, Law and Order - judicial affairs'), ('2.1.4', '2.1.4 - Justice, Law and Order - Ombudsman'), ('2.1.5', '2.1.5 - Justice, Law and Order - human rights affairs'), ('2.1.6', '2.1.6 - Justice, Law and Order - immigration'), ('2.1.7', '2.1.7 - Justice, Law and Order - anti corruption'), ('2.1.8', '2.1.8 - Justice, Law and Order - prisons'), ('2.1.9', '2.1.9 - Justice, Law and Order - peace building'), ('2.1.10', '2.1.10 - Justice, Law and Order - demobilisation'), ('2.2.1', '2.2.1 - Defence - policy, planning and administration'), ('2.2.2', '2.2.2 - Defence - military'), ('2.2.3', '2.2.3 - Defence - civil defence'), ('2.2.4', '2.2.4 - Defence - foreign military aid'), ('3.1.1', '3.1.1 - General Economic, Commercial and Labour Affairs - policy, planning and administration'), ('3.1.2', '3.1.2 - General Economic, Commercial and Labour Affairs - general economic affairs'), ('3.1.3', '3.1.3 - General Economic, Commercial and Labour Affairs - investment promotion'), ('3.1.4', '3.1.4 - General Economic, Commercial and Labour Affairs - privatisation'), ('3.1.5', '3.1.5 - General Economic, Commercial and Labour Affairs - trade'), ('3.1.6', '3.1.6 - General Economic, Commercial and Labour Affairs - labour'), ('3.1.7', '3.1.7 - General Economic, Commercial and Labour Affairs - national standards development'), ('3.2.1', '3.2.1 - Public Works - policy, planning and administration'), ('3.2.2', '3.2.2 - Public Works - construction regulation'), ('3.2.3', '3.2.3 - Public Works - mechanical services'), ('3.3.1', '3.3.1 - Agriculture - policy, planning and administration'), ('3.3.2', '3.3.2 - Agriculture - irrigation'), ('3.3.3', '3.3.3 - Agriculture - inputs'), ('3.3.4', '3.3.4 - Agriculture - food crop'), ('3.3.5', '3.3.5 - Agriculture - industrial crop'), ('3.3.6', '3.3.6 - Agriculture - livestock'), ('3.3.7', '3.3.7 - Agriculture - agricultural training and extension'), ('3.3.8', '3.3.8 - Agriculture - research'), ('3.3.9', '3.3.9 - Agriculture - other services'), ('3.4.1', '3.4.1 - Forestry - policy, planning and administration'), ('3.4.2', '3.4.2 - Forestry - development and services'), ('3.4.3', '3.4.3 - Forestry - education/training'), ('3.4.4', '3.4.4 - Forestry - research'), ('3.5.1', '3.5.1 - Fishing and Hunting - policy, planning and administration'), ('3.5.2', '3.5.2 - Fishing and Hunting - development and services'), ('3.5.3', '3.5.3 - Fishing and Hunting - education and training'), ('3.5.4', '3.5.4 - Fishing and Hunting - research'), ('3.6.1', '3.6.1 - Energy - policy, planning and administration'), ('3.6.2', '3.6.2 - Energy - education and training'), ('3.6.3', '3.6.3 - Energy - energy regulation'), ('3.6.4', '3.6.4 - Energy - electricity transmission'), ('3.6.5', '3.6.5 - Energy - nuclear'), ('3.6.6', '3.6.6 - Energy - power generation'), ('3.6.7', '3.6.7 - Energy - gas '), ('3.7.1', '3.7.1 - Mining and Mineral Development - policy, planning and administration'), ('3.7.2', '3.7.2 - Mining and Mineral Development - prospection and exploration'), ('3.7.3', '3.7.3 - Mining and Mineral Development - coal and other solid mineral fuels'), ('3.7.4', '3.7.4 - Mining and Mineral Development - petroleum and gas'), ('3.7.6', '3.7.6 - Mining and Mineral Development - other fuel'), ('3.7.7', '3.7.7 - Mining and Mineral Development - non fuel minerals'), ('3.8.1', '3.8.1 - Transport - policy, planning and administration'), ('3.8.2', '3.8.2 - Transport - transport regulation'), ('3.8.3', '3.8.3 - Transport - feeder road construction'), ('3.8.4', '3.8.4 - Transport - feeder road maintenance'), ('3.8.5', '3.8.5 - Transport - national road construction'), ('3.8.6', '3.8.6 - Transport - national road maintenance'), ('3.8.7', '3.8.7 - Transport - rail'), ('3.8.8', '3.8.8 - Transport - water'), ('3.8.9', '3.8.9 - Transport - air'), ('3.8.10', '3.8.10 - Transport - pipeline'), ('3.8.11', '3.8.11 - Transport - storage and distribution'), ('3.8.12', '3.8.12 - Transport - public transport services'), ('3.8.13', '3.8.13 - Transport - meteorological services'), ('3.8.14', '3.8.14 - Transport - education and training'), ('3.9.1', '3.9.1 - Industry - policy, planning and administration'), ('3.9.2', '3.9.2 - Industry - development and services'), ('3.9.3', '3.9.3 - Industry - industrial research'), ('3.9.4', '3.9.4 - Industry - (investment in industry)'), ('3.10.1', '3.10.1 - Communications - policy, planning and administration'), ('3.10.2', '3.10.2 - Communications - ICT Infrastructure'), ('3.10.3', '3.10.3 - Communications - telecoms and postal services'), ('3.10.4', '3.10.4 - Communications - information services'), ('3.11.1', '3.11.1 - Tourism - policy, planning and administration'), ('3.11.2', '3.11.2 - Tourism - services'), ('3.12.1', '3.12.1 - Microfinance and financial services - Microfinance and financial services'), ('4.1.1', '4.1.1 - Water supply and Sanitation - policy, planning and administration'), ('4.1.2', '4.1.2 - Water supply and Sanitation - education/training'), ('4.1.3', '4.1.3 - Water supply and Sanitation - rural water supply and sanitation'), ('4.1.4', '4.1.4 - Water supply and Sanitation - urban water supply and sanitation'), ('4.1.5', '4.1.5 - Water supply and Sanitation - rural water supply'), ('4.1.6', '4.1.6 - Water supply and Sanitation - urban water supply'), ('4.1.7', '4.1.7 - Water supply and Sanitation - rural sanitation'), ('4.1.8', '4.1.8 - Water supply and Sanitation - urban sanitation'), ('4.1.9', '4.1.9 - Water supply and Sanitation - sewage and waste management'), ('4.2.1', '4.2.1 - Environment - policy, planning and administration'), ('4.2.2', '4.2.2 - Environment - research/ education and training'), ('4.2.3', '4.2.3 - Environment - natural resource management'), ('4.2.4', '4.2.4 - Environment - water resources management'), ('4.2.5', '4.2.5 - Environment - wildlife protection, parks and site preservation'), ('5.1.1', '5.1.1 - Health - policy, planning and administration'), ('5.2.1', '5.2.1 - Recreation, Culture and Religion - recreation and sport'), ('5.2.2', '5.2.2 - Recreation, Culture and Religion - culture'), ('5.2.3', '5.2.3 - Recreation, Culture and Religion - broadcasting and publishing'), ('5.2.4', '5.2.4 - Recreation, Culture and Religion - religion'), ('5.3.1', '5.3.1 - Education - administration, policy and planning'), ('5.3.2', '5.3.2 - Education - research'), ('5.3.3', '5.3.3 - Education - pre-primary'), ('5.3.4', '5.3.4 - Education - primary'), ('5.3.5', '5.3.5 - Education - lower secondary'), ('5.3.6', '5.3.6 - Education - upper secondary'), ('5.3.7', '5.3.7 - Education - post secondary non tertiary '), ('5.3.8', '5.3.8 - Education - tertiary'), ('5.3.9', '5.3.9 - Education - vocational training'), ('5.3.10', '5.3.10 - Education - advanced technical and managerial training'), ('5.3.11', '5.3.11 - Education - basic adult education'), ('5.3.12', '5.3.12 - Education - teacher training'), ('5.3.13', '5.3.13 - Education - subsidiary services'), ('5.4.1', '5.4.1 - Social Protection, Land Housing and Community Amenities - policy, planning and administration'), ('5.4.2', '5.4.2 - Social Protection, Land Housing and Community Amenities - social security (excl pensions)'), ('5.4.3', '5.4.3 - Social Protection, Land Housing and Community Amenities - general pensions'), ('5.4.4', '5.4.4 - Social Protection, Land Housing and Community Amenities - civil service and military pensions'), ('5.4.5', '5.4.5 - Social Protection, Land Housing and Community Amenities - social services (incl youth development and women+ children)'), ('5.4.6', '5.4.6 - Social Protection, Land Housing and Community Amenities - land policy and management'), ('5.4.7', '5.4.7 - Social Protection, Land Housing and Community Amenities - rural devt'), ('5.4.8', '5.4.8 - Social Protection, Land Housing and Community Amenities - urban devt'), ('5.4.9', '5.4.9 - Social Protection, Land Housing and Community Amenities - housing and community amenities'), ('5.4.10', '5.4.10 - Social Protection, Land Housing and Community Amenities - emergency relief'), ('5.4.11', '5.4.11 - Social Protection, Land Housing and Community Amenities - disaster prevention and preparedness'), ('5.4.12', '5.4.12 - Social Protection, Land Housing and Community Amenities - support to refugees and internally displaced persons'), ('6.1.1', '6.1.1 - Development Partner affairs - policy planning and administration'), ('6.1.2', '6.1.2 - Development Partner affairs - Technical staff services'), ('7.1.1', '7.1.1 - External to government sector - External to general government sector'), ('7.2.1', '7.2.1 - General Budget Support - General Budget Support')])),
                ('description', akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='country budget item description', blank=True)),
                ('percentage', models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='If more than one identifier is reported, the percentage share must be reported and all percentages should add up to 100 percent. Use a period to denote decimals.', null=True, verbose_name='country budget item percentage')),
            ],
            options={
                'verbose_name': 'country budget item',
                'verbose_name_plural': 'country budget items',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CrsAddOtherFlag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(help_text='An IATI code describing the equivalent CRS++ columns. See the <a href="http://iatistandard.org/202/codelists/CRSAddOtherFlags/" target="_blank">IATI codelist</a>.', max_length=1, verbose_name='code', choices=[('1', '1 - Free standing technical cooperation'), ('2', '2 - Programme-based approach'), ('3', '3 - Investment project'), ('4', '4 - Associated financing')])),
                ('significance', models.NullBooleanField(help_text='Indicate whether the flag applies or not.', verbose_name='significance')),
            ],
            options={
                'verbose_name': 'CRS other flag',
                'verbose_name_plural': 'CRS other flags',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Disaggregation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('value', models.DecimalField(null=True, verbose_name='quantitative disaggregated value', max_digits=20, decimal_places=2, blank=True)),
                ('narrative', akvo.rsr.fields.ValidXMLTextField(verbose_name='qualitative narrative', blank=True)),
                ('numerator', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='The numerator for a percentage value', null=True, verbose_name='numerator for indicator')),
                ('denominator', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='The denominator for a percentage value', null=True, verbose_name='denominator for indicator')),
            ],
            options={
                'verbose_name': 'disaggregated value',
                'verbose_name_plural': 'disaggregated values',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_approved', models.BooleanField(default=False, help_text='Designates whether this employment is approved by an administrator.', verbose_name='approved')),
                ('country', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='country', choices=[('AF', 'Afghanistan'), ('AX', '\xc5land Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas (The)'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State Of)'), ('BQ', 'Bonaire, Saint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory (The)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands (The)'), ('CF', 'Central African Republic (The)'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands (The)'), ('CO', 'Colombia'), ('KM', 'Comoros (The)'), ('CG', 'Congo (The)'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands (The)'), ('CR', 'Costa Rica'), ('CI', "C\xf4te D'ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic (The)'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic (The)'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (The) [malvinas]'), ('FO', 'Faroe Islands (The)'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories (The)'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and Mcdonald Islands'), ('VA', 'Holy See (The)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (Islamic Republic Of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (Democratic People's Republic Of)"), ('KR', 'Korea (Republic Of)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic (The)"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (The Former Yugoslav Republic Of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands (The)'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States Of)'), ('MD', 'Moldova (Republic Of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands (The)'), ('AN', 'Netherland Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger (The)'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands (The)'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines (The)'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation (The)'), ('RW', 'Rwanda'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French Part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch Part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan (The)'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands (The)'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates (The)'), ('GB', 'United Kingdom of Great Britain and Northern Ireland (The)'), ('US', 'United States of America (The)'), ('UM', 'United States Minor Outlying Islands (The)'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic Of)'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.s.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('job_title', akvo.rsr.fields.ValidXMLCharField(max_length=50, verbose_name='job title', blank=True)),
                ('group', models.ForeignKey(related_query_name=b'employment', related_name='employments', on_delete=django.db.models.deletion.SET_NULL, verbose_name='group', to='auth.Group', help_text="The permissions group for this user's employment.", null=True)),
            ],
            options={
                'verbose_name': 'user employment',
                'verbose_name_plural': 'user employments',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FocusArea',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='The name of the focus area. This will show as the title of the focus area project listing page. (30 characters).', max_length=50, verbose_name='focus area name')),
                ('slug', models.SlugField(help_text='Enter the "slug" i.e. a short word or hyphenated-words. This will be used in the URL of the focus area project listing page. (20 characters, only lower case letters, numbers, hyphen and underscore allowed.).', verbose_name='slug')),
                ('description', akvo.rsr.fields.ValidXMLTextField(help_text='Enter the text that will appear on the focus area project listing page. (500 characters).', max_length=500, verbose_name='description')),
                ('image', sorl.thumbnail.fields.ImageField(help_text='The image that will appear on the focus area project listing page.', upload_to=akvo.rsr.models.focus_area.image_path, verbose_name='focus area image')),
                ('link_to', models.URLField(help_text='Where the link in the accordion for the focus area points if other than the focus area project listing.', verbose_name='accordion link', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'focus area',
                'verbose_name_plural': 'focus areas',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FssForecast',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('year', models.PositiveIntegerField(help_text='The calendar year that the forward spend covers.', max_length=4, null=True, verbose_name='year', blank=True)),
                ('value_date', models.DateField(help_text='Enter the specific date (DD/MM/YYYY) for the forecast value.', null=True, verbose_name='value date', blank=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, blank=True, help_text='The forecast value for each year.', null=True, verbose_name='forecast value')),
            ],
            options={
                'verbose_name': 'FSS forecast',
                'verbose_name_plural': 'FSS forecasts',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='(100 characters)', max_length=100, verbose_name='goal', blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HumanitarianScope',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(help_text='A code for the event or action from the vocabulary specified. More information on the vocabularies can be found here: <a href="http://glidenumber.net/glide/public/search/search.jsp" target="_blank">Glide</a> and <a href="http://fts.unocha.org/docs/IATICodelist_HS2-1.csv" target="_blank">Humanitarian plan</a>.', max_length=25, verbose_name='humanitarian scope code', blank=True)),
                ('type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The type of event or action being classified. See the <a href="http://iatistandard.org/202/codelists/HumanitarianScopeType/" target="_blank">IATI codelist</a>.', max_length=1, verbose_name='humanitarian scope type', choices=[('1', '1 - Emergency'), ('2', '2 - Appeal')])),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='A recognised vocabulary of terms classifying the event or action. See the <a href="http://iatistandard.org/202/codelists/HumanitarianScopeVocabulary/" target="_blank">IATI codelist</a>.', max_length=3, verbose_name='humanitarian scope vocabulary', choices=[('1-2', '1-2 - Glide'), ('2-1', '2-1 - Humanitarian Plan'), ('99', '99 - Reporting Organisation')])),
                ('vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='humanitarian scope vocabulary URI', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a description.', max_length=1000, verbose_name='humanitarian scope description', blank=True)),
            ],
            options={
                'verbose_name': 'humanitarian scope',
                'verbose_name_plural': 'humanitarian scopes',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiActivityExport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('status', models.PositiveSmallIntegerField(default=1, verbose_name='status')),
            ],
            options={
                'verbose_name': 'IATI activity export',
                'verbose_name_plural': 'IATI activity exports',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiActivityImport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('activity_xml', models.TextField(verbose_name='activity xml')),
                ('sha1_hexdigest', models.CharField(max_length=40, verbose_name='sha1 hexadecimal digest of the activity XML', blank=True)),
                ('iati_identifier', models.CharField(max_length=100, verbose_name='IATI activity ID')),
            ],
            options={
                'verbose_name': 'IATI activity import',
                'verbose_name_plural': 'IATI activity imports',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.PositiveSmallIntegerField(verbose_name='status')),
                ('description', akvo.rsr.fields.ValidXMLTextField(verbose_name='description')),
            ],
            options={
                'verbose_name': 'IATI check',
                'verbose_name_plural': 'IATI checks',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiExport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('version', akvo.rsr.fields.ValidXMLCharField(default=b'2.03', max_length=4, verbose_name='version')),
                ('status', models.PositiveSmallIntegerField(default=1, verbose_name='status')),
                ('iati_file', models.FileField(upload_to=akvo.rsr.models.iati_export.file_path, verbose_name='IATI file', blank=True)),
                ('is_public', models.BooleanField(default=True, verbose_name='public')),
            ],
            options={
                'verbose_name': 'IATI export',
                'verbose_name_plural': 'IATI exports',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiImport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('label', models.CharField(unique=True, max_length=50, verbose_name='label')),
                ('next_execution', models.DateTimeField(null=True, verbose_name='next time the import is run', blank=True)),
                ('frequency', models.PositiveIntegerField(blank=True, help_text=b'Set the frequency interval of the import', null=True, choices=[(1, 'hourly'), (2, 'every six hours'), (3, 'daily'), (4, 'every three days'), (5, 'weekly'), (6, 'bi-weekly'), (7, 'every four weeks'), (8, 'every two minutes')])),
                ('url', models.URLField(verbose_name='url', blank=True)),
                ('mapper_prefix', models.CharField(blank=True, help_text=b'Choose a custom mapper to invoke custom behaviour for this import', max_length=30, verbose_name='Custom mappers', choices=[(b'Cordaid', b'Cordaid'), (b'CordaidZip', b'CordaidZip'), (b'ICCO', b'ICCO'), (b'Result_only', b'Result_only')])),
                ('enabled', models.BooleanField(default=False, help_text=b'Set to enable running of this import.', verbose_name='importing enabled')),
                ('run_immediately', models.BooleanField(default=False, help_text=b'Run the job immediately.', verbose_name='run immediately')),
                ('running', models.BooleanField(default=False, help_text=b'Running is set while the import executes. This is to guarantee that the same import never runs twice (or more) in parallel.', verbose_name='import currently running')),
                ('user', models.ForeignKey(related_name='iati_imports', verbose_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IATI import',
                'verbose_name_plural': 'IATI imports',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiImportJob',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('iati_xml_file', models.FileField(upload_to=akvo.rsr.models.iati_import_job.file_path, verbose_name='local file', blank=True)),
                ('status', models.PositiveSmallIntegerField(default=10, verbose_name='status', choices=[(10, 'pending'), (12, 'in progress'), (11, 'retrieving'), (13, 'completed'), (14, 'cancelled'), (15, 'no changes')])),
                ('sha1_hexdigest', models.CharField(max_length=40, verbose_name='sha1 hexadecimal digest of the XML file', blank=True)),
                ('iati_import', models.ForeignKey(related_name='jobs', to='rsr.IatiImport')),
            ],
            options={
                'get_latest_by': 'iati_import_logs__created_at',
                'verbose_name': 'IATI import job',
                'verbose_name_plural': 'IATI import jobs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IatiImportLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('message_type', models.PositiveSmallIntegerField(default=30, verbose_name='type of message', choices=[(1, 'create action'), (2, 'update action'), (3, 'delete action'), (10, 'status pending'), (11, 'status retrieving'), (12, 'status in progress'), (13, 'status complete'), (14, 'status cancelled'), (15, 'status no changes'), (20, 'information'), (30, 'critical error'), (21, 'value not saved'), (22, 'value partly saved')])),
                ('tag', akvo.rsr.fields.ValidXMLCharField(default=b'', max_length=100, verbose_name='xml tag')),
                ('model', akvo.rsr.fields.ValidXMLCharField(default=b'', max_length=255, verbose_name='model')),
                ('field', akvo.rsr.fields.ValidXMLCharField(default=b'', max_length=100, verbose_name='field')),
                ('text', akvo.rsr.fields.ValidXMLTextField(verbose_name='text')),
                ('created_at', models.DateTimeField(editable=False, db_index=True)),
                ('iati_activity_import', models.ForeignKey(verbose_name='activity', blank=True, to='rsr.IatiActivityImport', null=True)),
                ('iati_import_job', models.ForeignKey(related_name='iati_import_logs', verbose_name='iati import', to='rsr.IatiImportJob')),
            ],
            options={
                'ordering': ('created_at',),
                'verbose_name': 'IATI import log',
                'verbose_name_plural': 'IATI import logs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', akvo.rsr.fields.ValidXMLCharField(help_text='Within each result indicators can be defined. Indicators should be items that can be counted and evaluated as the project continues and is completed.', max_length=500, verbose_name='indicator title', blank=True)),
                ('type', models.PositiveSmallIntegerField(default=1, verbose_name='indicator type', choices=[(1, 'Quantitative'), (2, 'Qualitative')])),
                ('measure', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Choose how the indicator will be measured (in percentage or units).', max_length=1, verbose_name='indicator measure', choices=[('1', '1 - Unit'), ('2', '2 - Percentage')])),
                ('ascending', models.NullBooleanField(help_text='Choose ascending if the target value of the indicator is higher than the baseline value (eg. people with access to sanitation). Choose descending if the target value of the indicator is lower than the baseline value (eg. people with diarrhea).', verbose_name='ascending')),
                ('description', akvo.rsr.fields.ValidXMLCharField(help_text='You can provide further information of the indicator here.', max_length=2000, verbose_name='indicator description', blank=True)),
                ('baseline_year', models.PositiveIntegerField(help_text='The year the baseline value was taken.', max_length=4, null=True, verbose_name='baseline year', blank=True)),
                ('baseline_value', akvo.rsr.fields.ValidXMLCharField(help_text='The value of the baseline at the start of the project.', max_length=200, verbose_name='baseline value', blank=True)),
                ('baseline_comment', akvo.rsr.fields.ValidXMLCharField(help_text='Here you can provide extra information on the baseline value, if needed.', max_length=2000, verbose_name='baseline comment', blank=True)),
                ('order', models.PositiveSmallIntegerField(null=True, verbose_name='indicator order', blank=True)),
                ('default_periods', models.NullBooleanField(default=False, help_text='Determines whether periods of indicator are used by default.', verbose_name='default indicator periods')),
                ('parent_indicator', models.ForeignKey(related_name='child_indicators', default=None, blank=True, to='rsr.Indicator', null=True, verbose_name='parent indicator')),
            ],
            options={
                'ordering': ['order', 'id'],
                'verbose_name': 'indicator',
                'verbose_name_plural': 'indicators',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorDimension',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='The name of a category to be used when disaggregating (e.g "Age")', max_length=100, verbose_name='dimension name', blank=True)),
                ('value', akvo.rsr.fields.ValidXMLCharField(help_text='A value in the category being disaggregated (e.g. "Older than 60 years").', max_length=100, verbose_name='dimension value', blank=True)),
                ('indicator', models.ForeignKey(related_name='dimensions', verbose_name='indicator', to='rsr.Indicator')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'indicator dimension',
                'verbose_name_plural': 'indicator dimensions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorLabel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('indicator', models.ForeignKey(related_name='labels', verbose_name='indicator', to='rsr.Indicator')),
            ],
            options={
                'verbose_name': 'indicator label',
                'verbose_name_plural': 'indicator labels',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriod',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('locked', models.BooleanField(default=True, db_index=True, verbose_name='locked')),
                ('period_start', models.DateField(help_text='The start date of the reporting period for this indicator.', null=True, verbose_name='period start', blank=True)),
                ('period_end', models.DateField(help_text='The end date of the reporting period for this indicator.', null=True, verbose_name='period end', blank=True)),
                ('target_value', akvo.rsr.fields.ValidXMLCharField(help_text='The target value for the above period.', max_length=50, verbose_name='target value', blank=True)),
                ('target_comment', akvo.rsr.fields.ValidXMLCharField(help_text='Here you can provide extra information on the target value, if needed.', max_length=2000, verbose_name='target value comment', blank=True)),
                ('actual_value', akvo.rsr.fields.ValidXMLCharField(help_text='A record of the achieved result for this period.', max_length=50, verbose_name='actual value', blank=True)),
                ('actual_comment', akvo.rsr.fields.ValidXMLCharField(help_text='Here you can provide extra information on the actual value, if needed (for instance, why the actual value differs from the target value).', max_length=2000, verbose_name='actual value comment', blank=True)),
                ('numerator', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='The numerator for a calculated percentage', null=True, verbose_name='numerator for indicator')),
                ('denominator', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='The denominator for a calculated percentage', null=True, verbose_name='denominator for indicator')),
                ('narrative', akvo.rsr.fields.ValidXMLTextField(verbose_name='qualitative indicator narrative', blank=True)),
                ('indicator', models.ForeignKey(related_name='periods', verbose_name='indicator', to='rsr.Indicator')),
                ('parent_period', models.ForeignKey(related_name='child_periods', default=None, blank=True, to='rsr.IndicatorPeriod', null=True, verbose_name='parent indicator period')),
            ],
            options={
                'ordering': ['period_start', 'period_end'],
                'verbose_name': 'indicator period',
                'verbose_name_plural': 'indicator periods',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriodActualDimension',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='The name of a category being disaggregated in this actual value of the indicator period (e.g. "Age").', max_length=100, verbose_name='dimension name', blank=True)),
                ('value', akvo.rsr.fields.ValidXMLCharField(help_text='The value that is being being disaggregated (e.g. "Older than 60 years").', max_length=100, verbose_name='dimension value', blank=True)),
                ('period', models.ForeignKey(related_name='actual_dimensions', verbose_name='indicator period', to='rsr.IndicatorPeriod')),
            ],
            options={
                'verbose_name': 'indicator period actual dimension',
                'verbose_name_plural': 'indicator period actual dimensions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriodActualLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('location', akvo.rsr.fields.ValidXMLCharField(help_text='A location of the actual of this indicator period. The location must be the reference of an existing location of the current project.', max_length=25, verbose_name='location', blank=True)),
                ('period', models.ForeignKey(related_name='actual_locations', verbose_name='indicator period', to='rsr.IndicatorPeriod')),
            ],
            options={
                'verbose_name': 'indicator period actual location',
                'verbose_name_plural': 'indicator period actual locations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriodData',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('value', models.DecimalField(null=True, verbose_name='quantitative indicator value', max_digits=20, decimal_places=2, blank=True)),
                ('narrative', akvo.rsr.fields.ValidXMLTextField(verbose_name='qualitative indicator narrative', blank=True)),
                ('period_actual_value', akvo.rsr.fields.ValidXMLCharField(default=b'', max_length=50, verbose_name='period actual value')),
                ('status', akvo.rsr.fields.ValidXMLCharField(default='D', max_length=1, verbose_name='status', db_index=True, choices=[('D', 'draft'), ('P', 'pending approval'), ('R', 'return for revision'), ('A', 'approved')])),
                ('text', akvo.rsr.fields.ValidXMLTextField(verbose_name='text', blank=True)),
                ('photo', sorl.thumbnail.fields.ImageField(upload_to=akvo.rsr.models.result.utils.image_path, max_length=255, verbose_name='photo', blank=True)),
                ('file', models.FileField(upload_to=akvo.rsr.models.result.utils.file_path, max_length=255, verbose_name='file', blank=True)),
                ('update_method', akvo.rsr.fields.ValidXMLCharField(default=b'W', choices=[(b'W', 'web'), (b'M', 'mobile')], max_length=1, blank=True, verbose_name='update method', db_index=True)),
                ('numerator', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='The numerator for a calculated percentage', null=True, verbose_name='numerator for indicator')),
                ('denominator', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='The denominator for a calculated percentage', null=True, verbose_name='denominator for indicator')),
                ('approved_by', models.ForeignKey(related_name='approved_period_updates', verbose_name='approved by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('period', models.ForeignKey(related_name='data', verbose_name='indicator period', to='rsr.IndicatorPeriod')),
                ('user', models.ForeignKey(related_name='created_period_updates', verbose_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
                'verbose_name': 'indicator period data',
                'verbose_name_plural': 'indicator period data',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriodDataComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('comment', akvo.rsr.fields.ValidXMLTextField(verbose_name='comment', blank=True)),
                ('data', models.ForeignKey(related_name='comments', verbose_name='indicator period data', to='rsr.IndicatorPeriodData')),
                ('user', models.ForeignKey(verbose_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
                'verbose_name': 'indicator period data comment',
                'verbose_name_plural': 'indicator period data comments',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriodTargetDimension',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='The name of a category being disaggregated in this target value of the indicator period (e.g. "Age").', max_length=100, verbose_name='dimension name', blank=True)),
                ('value', akvo.rsr.fields.ValidXMLCharField(help_text='The value that is being being disaggregated (e.g. "Older than 60 years").', max_length=100, verbose_name='dimension value', blank=True)),
                ('period', models.ForeignKey(related_name='target_dimensions', verbose_name='indicator period', to='rsr.IndicatorPeriod')),
            ],
            options={
                'verbose_name': 'indicator period target dimension',
                'verbose_name_plural': 'indicator period target dimensions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorPeriodTargetLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('location', akvo.rsr.fields.ValidXMLCharField(help_text='A location of the target of this indicator period. The location must be the reference of an existing location of the current project.', max_length=25, verbose_name='location', blank=True)),
                ('period', models.ForeignKey(related_name='target_locations', verbose_name='indicator period', to='rsr.IndicatorPeriod')),
            ],
            options={
                'verbose_name': 'indicator period target location',
                'verbose_name_plural': 'indicator period target locations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndicatorReference',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text='A code for an indicator defined in the specified vocabulary specified. For more information on the indicator reference, see the <a href="http://iatistandard.org/202/activity-standard/iati-activities/iati-activity/result/indicator/reference/" target="_blank">IATI codelist</a>.', max_length=25, verbose_name='reference code', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the code for the vocabulary used to describe the sector. Sectors should be mapped to DAC sectors to enable international comparison. For more information on the indicator reference, see the <a href="http://iatistandard.org/202/codelists/IndicatorVocabulary/" target="_blank">IATI codelist</a>.', max_length=2, verbose_name='reference vocabulary', choices=[('1', '1 - WHO Registry'), ('2', '2 - Sphere Handbook'), ('3', '3 - US Foreign Assistance Framework'), ('4', '4 - World Bank World Development Indicators'), ('5', '5 - UN Millennium Development Goals Indicators'), ('6', '6 - UNOCHA Humanitarian Response Indicators'), ('7', '7 - HIV/AIDS Indicator Registry'), ('8', '8 - Harmonized Indicators for Private Sector (HIPSO)'), ('9', '9 - UN Sustainable Development Goals (SDG) Indicators'), ('99', '99 - Reporting Organisation')])),
                ('vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='reference indicator URI', blank=True)),
                ('indicator', models.ForeignKey(related_name='references', verbose_name='indicator', to='rsr.Indicator')),
            ],
            options={
                'verbose_name': 'indicator reference',
                'verbose_name_plural': 'indicator references',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InternalOrganisationID',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('identifier', akvo.rsr.fields.ValidXMLCharField(max_length=200, verbose_name='internal ID of referenced organisation')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('label', akvo.rsr.fields.ValidXMLCharField(help_text='Select keywords in case you are using an Akvo Page. Keywords linked to a project will determine if a project appears on the Akvo Page or not.', unique=True, max_length=100, verbose_name='label', db_index=True)),
                ('logo', sorl.thumbnail.fields.ImageField(help_text='Add your keyword logo here. You can only add one logo. The logo will be shown on the project page, but not on Akvo Pages.<br/>The logo should be about 1 MB in size, and should preferably be 75x75 pixels and in PNG or JPG format.', upload_to=akvo.rsr.models.keyword.logo_path, verbose_name='logo', blank=True)),
            ],
            options={
                'ordering': ('label',),
                'verbose_name': 'keyword',
                'verbose_name_plural': 'keywords',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LegacyData',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text="The original field name in the reporting organisation's system.", max_length=1000, verbose_name='name', blank=True)),
                ('value', akvo.rsr.fields.ValidXMLCharField(help_text="The original field value in the reporting organisation's system.", max_length=1000, verbose_name='value', blank=True)),
                ('iati_equivalent', akvo.rsr.fields.ValidXMLCharField(help_text='The name of the equivalent IATI element.', max_length=1000, verbose_name='iati equivalent', blank=True)),
            ],
            options={
                'verbose_name': 'legacy data',
                'verbose_name_plural': 'legacy data',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('kind', akvo.rsr.fields.ValidXMLCharField(default=b'E', max_length=1, verbose_name='kind', choices=[(b'A', 'Akvopedia entry'), (b'E', 'External link')])),
                ('url', models.URLField(help_text="Enter the link to an external website you wish to redirect to from your project page. The URL should start with 'http://' or 'https://'.", verbose_name='link url')),
                ('caption', akvo.rsr.fields.ValidXMLCharField(help_text='Enter a name for the link.', max_length=50, verbose_name='link caption', blank=True)),
            ],
            options={
                'verbose_name': 'link',
                'verbose_name_plural': 'links',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NarrativeReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('text', akvo.rsr.fields.ValidXMLTextField(help_text='The text of the narrative report.', verbose_name='narrative report text', blank=True)),
                ('published', models.BooleanField(default=False, verbose_name='published')),
                ('period_start', models.DateField(help_text='The start date of the reporting period for this narrative report.', verbose_name='period start')),
                ('period_end', models.DateField(help_text='The end date of the reporting period for this narrative report.', verbose_name='period end')),
            ],
            options={
                'verbose_name': 'narrative report',
                'verbose_name_plural': 'narrative reports',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='Short name which will appear in organisation and partner listings (25 characters).', unique=True, max_length=40, verbose_name='name', db_index=True)),
                ('long_name', akvo.rsr.fields.ValidXMLCharField(help_text='Full name of organisation (75 characters).', unique=True, max_length=100, verbose_name='long name', db_index=True)),
                ('language', akvo.rsr.fields.ValidXMLCharField(default=b'en', help_text='The main language of the organisation', max_length=2, verbose_name='language', choices=[(b'en', b'English'), (b'es', b'Spanish'), (b'fr', b'French')])),
                ('organisation_type', akvo.rsr.fields.ValidXMLCharField(choices=[(b'N', 'NGO'), (b'G', 'Governmental'), (b'C', 'Commercial'), (b'K', 'Knowledge institution')], max_length=1, blank=True, null=True, verbose_name='organisation type', db_index=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(default=b'EUR', help_text='The default currency for this organisation. Used in all financial aspects of the organisation.', max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('new_organisation_type', models.IntegerField(default=22, help_text='Check that this field is set to an organisation type that matches your organisation.', db_index=True, verbose_name='IATI organisation type', choices=[(10, '10 - Government'), (11, '11 - Local Government'), (15, '15 - Other Public Sector'), (21, '21 - International NGO'), (22, '22 - National NGO'), (23, '23 - Regional NGO'), (24, '24 - Partner Country based NGO'), (30, '30 - Public Private Partnership'), (40, '40 - Multilateral'), (60, '60 - Foundation'), (70, '70 - Private Sector'), (71, '71 - Private Sector in Provider Country'), (72, '72 - Private Sector in Aid Recipient Country'), (73, '73 - Private Sector in Third Country'), (80, '80 - Academic, Training and Research'), (90, '90 - Other')])),
                ('iati_org_id', akvo.rsr.fields.ValidXMLCharField(null=True, default=None, max_length=75, blank=True, unique=True, verbose_name='IATI organisation ID', db_index=True)),
                ('logo', sorl.thumbnail.fields.ImageField(help_text='Logos should be approximately 360x270 pixels (approx. 100-200kB in size) on a white background.', upload_to=akvo.rsr.models.organisation.image_path, verbose_name='logo', blank=True)),
                ('url', models.URLField(help_text='Enter the full address of your web site, beginning with http://.', blank=True)),
                ('facebook', models.URLField(help_text='Enter the full address of your Facebook page, beginning with http://.', blank=True)),
                ('twitter', models.URLField(help_text='Enter the full address of your Twitter feed, beginning with http://.', blank=True)),
                ('linkedin', models.URLField(help_text='Enter the full address of your LinkedIn page, beginning with http://.', blank=True)),
                ('phone', akvo.rsr.fields.ValidXMLCharField(help_text='(20 characters).', max_length=20, verbose_name='phone', blank=True)),
                ('mobile', akvo.rsr.fields.ValidXMLCharField(help_text='(20 characters).', max_length=20, verbose_name='mobile', blank=True)),
                ('fax', akvo.rsr.fields.ValidXMLCharField(help_text='(20 characters).', max_length=20, verbose_name='fax', blank=True)),
                ('contact_person', akvo.rsr.fields.ValidXMLCharField(help_text='Name of external contact person for your organisation (30 characters).', max_length=30, verbose_name='contact person', blank=True)),
                ('contact_email', akvo.rsr.fields.ValidXMLCharField(help_text='Email to which inquiries about your organisation should be sent (50 characters).', max_length=50, verbose_name='contact email', blank=True)),
                ('description', akvo.rsr.fields.ValidXMLTextField(help_text='Describe your organisation.', verbose_name='description', blank=True)),
                ('notes', akvo.rsr.fields.ValidXMLTextField(default=b'', verbose_name='Notes and comments', blank=True)),
                ('can_create_projects', models.BooleanField(default=False, help_text='Partner editors of this organisation can create new projects, and publish projects it is a partner of.')),
                ('allow_edit', models.BooleanField(default=True, help_text='When manual edits are disallowed, partner admins and editors of other organisations are also not allowed to edit these projects.', verbose_name='Partner editors of this organisation are allowed to manually edit projects where this organisation is support partner')),
                ('public_iati_file', models.BooleanField(default=True, verbose_name='Show latest exported IATI file on organisation page.')),
                ('can_become_reporting', models.BooleanField(default=False, help_text='Organisation is allowed to become a reporting organisation. Can be set by superusers.', verbose_name='Reportable')),
            ],
            options={
                'verbose_name': 'organisation',
                'verbose_name_plural': 'organisations',
                'permissions': (('user_management', 'Can manage users'),),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationAccount',
            fields=[
                ('organisation', models.OneToOneField(primary_key=True, serialize=False, to='rsr.Organisation', verbose_name='organisation')),
                ('account_level', akvo.rsr.fields.ValidXMLCharField(default=b'archived', max_length=12, verbose_name='account level', choices=[(b'archived', 'Free'), (b'freemium', 'Freemium'), (b'premium', 'Premium'), (b'plus', 'Premium Plus'), (b'archived', 'Archived')])),
            ],
            options={
                'verbose_name': 'organisation account',
                'verbose_name_plural': 'organisation accounts',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationCountryBudget',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('period_start', models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period end', blank=True)),
                ('status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The status explains whether the budget being reported is indicative or has been formally committed.', max_length=1, verbose_name='status', choices=[('1', '1 - Indicative'), ('2', '2 - Committed')])),
                ('country', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This identifies the country which concerns the organisation budget.', max_length=2, verbose_name='recipient country', choices=[('AF', 'Afghanistan'), ('AX', '\xc5land Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas (The)'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State Of)'), ('BQ', 'Bonaire, Saint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory (The)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands (The)'), ('CF', 'Central African Republic (The)'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands (The)'), ('CO', 'Colombia'), ('KM', 'Comoros (The)'), ('CG', 'Congo (The)'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands (The)'), ('CR', 'Costa Rica'), ('CI', "C\xf4te D'ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic (The)'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic (The)'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (The) [malvinas]'), ('FO', 'Faroe Islands (The)'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories (The)'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and Mcdonald Islands'), ('VA', 'Holy See (The)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (Islamic Republic Of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (Democratic People's Republic Of)"), ('KR', 'Korea (Republic Of)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic (The)"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (The Former Yugoslav Republic Of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands (The)'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States Of)'), ('MD', 'Moldova (Republic Of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands (The)'), ('AN', 'Netherland Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger (The)'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands (The)'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines (The)'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation (The)'), ('RW', 'Rwanda'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French Part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch Part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan (The)'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands (The)'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates (The)'), ('GB', 'United Kingdom of Great Britain and Northern Ireland (The)'), ('US', 'United States of America (The)'), ('UM', 'United States Minor Outlying Islands (The)'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic Of)'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.s.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a short description.', max_length=100, verbose_name='description', blank=True)),
                ('organisation', models.ForeignKey(related_name='recipient_country_budgets', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
                'verbose_name': 'organisation recipient country budget',
                'verbose_name_plural': 'organisation recipient country budgets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationCountryBudgetLine',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of this specific line. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text="An internal reference that describes the line in the reporting organisation's own system", max_length=50, verbose_name='reference', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='The description for this line.', max_length=1000, verbose_name='description', blank=True)),
                ('budget', models.ForeignKey(related_name='budget_lines', verbose_name='organisation budget', to='rsr.OrganisationCountryBudget')),
            ],
            options={
                'verbose_name': 'country budget line',
                'verbose_name_plural': 'country budget lines',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationCustomField',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='(max 255 characters)', max_length=255, verbose_name='name')),
                ('section', models.IntegerField(help_text='Select the section of the admin where the custom field should be displayed', verbose_name='admin section', choices=[(1, '01 - General information'), (2, '02 - Contact information'), (3, '03 - Project partners'), (4, '04 - Project descriptions'), (5, '05 - Results and indicators'), (6, '06 - Finance'), (7, '07 - Project locations'), (8, '08 - Project focus'), (9, '09 - Links and documents'), (10, '10 - Project comments')])),
                ('max_characters', models.IntegerField(help_text='Set the maximum amount of characters that the user is allowed to fill in. Leave empty or fill in 0 if there is no character limit.', null=True, verbose_name='maximum characters', blank=True)),
                ('help_text', akvo.rsr.fields.ValidXMLTextField(help_text='The help text to be displayed with the field in the admin. Leave empty if there is no need for a help text. (max 1000 characters)', max_length=1000, verbose_name='help text', blank=True)),
                ('mandatory', models.BooleanField(default=False, help_text='Indicate whether this field is mandatory or not', verbose_name='mandatory')),
                ('order', models.PositiveSmallIntegerField(help_text='The order of the fields as they will be displayed in the project editor. Must be a positive number, and the lowest number will be shown on top.', verbose_name='order')),
                ('type', akvo.rsr.fields.ValidXMLCharField(default=b'text', help_text='Select the type of custom field. Text will show a text area in the project editor, and checkbox will show a checkbox.', max_length=20, verbose_name='type', choices=[(b'text', 'Text'), (b'boolean', 'Checkbox')])),
                ('organisation', models.ForeignKey(related_name='custom_fields', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('url', models.URLField(help_text="Enter the online location of your document. The URL should start with 'http://' or 'https://'.", verbose_name='document url', blank=True)),
                ('document', models.FileField(help_text='You can upload a document to your organisation. These documents will be stored on the RSR server and will be publicly available for users to download and view to gain further insight in the organisation.', upload_to=akvo.rsr.models.organisation_document.document_path, verbose_name='document', blank=True)),
                ('format', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This provides the code for the Internet Media Type ("MIME type") of the document, and includes pdf, msword, rtf, xml, csv, etc.', max_length=75, verbose_name='document format', choices=[('application/1d-interleaved-parityfec', 'application/1d-interleaved-parityfec'), ('application/3gpdash-qoe-report+xml', 'application/3gpdash-qoe-report+xml'), ('application/3gpp-ims+xml', 'application/3gpp-ims+xml'), ('application/A2L', 'application/A2L'), ('application/activemessage', 'application/activemessage'), ('application/activemessage', 'application/activemessage'), ('application/alto-costmap+json', 'application/alto-costmap+json'), ('application/alto-costmapfilter+json', 'application/alto-costmapfilter+json'), ('application/alto-directory+json', 'application/alto-directory+json'), ('application/alto-endpointprop+json', 'application/alto-endpointprop+json'), ('application/alto-endpointpropparams+json', 'application/alto-endpointpropparams+json'), ('application/alto-endpointcost+json', 'application/alto-endpointcost+json'), ('application/alto-endpointcostparams+json', 'application/alto-endpointcostparams+json'), ('application/alto-error+json', 'application/alto-error+json'), ('application/alto-networkmapfilter+json', 'application/alto-networkmapfilter+json'), ('application/alto-networkmap+json', 'application/alto-networkmap+json'), ('application/AML', 'application/AML'), ('application/andrew-inset', 'application/andrew-inset'), ('application/applefile', 'application/applefile'), ('application/ATF', 'application/ATF'), ('application/ATFX', 'application/ATFX'), ('application/atom+xml', 'application/atom+xml'), ('application/atomcat+xml', 'application/atomcat+xml'), ('application/atomdeleted+xml', 'application/atomdeleted+xml'), ('application/atomicmail', 'application/atomicmail'), ('application/atomsvc+xml', 'application/atomsvc+xml'), ('application/ATXML', 'application/ATXML'), ('application/auth-policy+xml', 'application/auth-policy+xml'), ('application/bacnet-xdd+zip', 'application/bacnet-xdd+zip'), ('application/batch-SMTP', 'application/batch-SMTP'), ('application/beep+xml', 'application/beep+xml'), ('application/calendar+json', 'application/calendar+json'), ('application/calendar+xml', 'application/calendar+xml'), ('application/call-completion', 'application/call-completion'), ('application/CALS-1840', 'application/CALS-1840'), ('application/cbor', 'application/cbor'), ('application/ccmp+xml', 'application/ccmp+xml'), ('application/ccxml+xml', 'application/ccxml+xml'), ('application/CDFX+XML', 'application/CDFX+XML'), ('application/cdmi-capability', 'application/cdmi-capability'), ('application/cdmi-container', 'application/cdmi-container'), ('application/cdmi-domain', 'application/cdmi-domain'), ('application/cdmi-object', 'application/cdmi-object'), ('application/cdmi-queue', 'application/cdmi-queue'), ('application/cdni', 'application/cdni'), ('application/CEA', 'application/CEA'), ('application/cea-2018+xml', 'application/cea-2018+xml'), ('application/cellml+xml', 'application/cellml+xml'), ('application/cfw', 'application/cfw'), ('application/clue_info+xml', 'application/clue_info+xml'), ('application/cms', 'application/cms'), ('application/cnrp+xml', 'application/cnrp+xml'), ('application/coap-group+json', 'application/coap-group+json'), ('application/coap-payload', 'application/coap-payload'), ('application/commonground', 'application/commonground'), ('application/conference-info+xml', 'application/conference-info+xml'), ('application/cpl+xml', 'application/cpl+xml'), ('application/cose', 'application/cose'), ('application/cose-key', 'application/cose-key'), ('application/cose-key-set', 'application/cose-key-set'), ('application/csrattrs', 'application/csrattrs'), ('application/csta+xml', 'application/csta+xml'), ('application/CSTAdata+xml', 'application/CSTAdata+xml'), ('application/csvm+json', 'application/csvm+json'), ('application/cybercash', 'application/cybercash'), ('application/dash+xml', 'application/dash+xml'), ('application/dashdelta', 'application/dashdelta'), ('application/davmount+xml', 'application/davmount+xml'), ('application/dca-rft', 'application/dca-rft'), ('application/DCD', 'application/DCD'), ('application/dec-dx', 'application/dec-dx'), ('application/dialog-info+xml', 'application/dialog-info+xml'), ('application/dicom', 'application/dicom'), ('application/dicom+json', 'application/dicom+json'), ('application/dicom+xml', 'application/dicom+xml'), ('application/DII', 'application/DII'), ('application/DIT', 'application/DIT'), ('application/dns', 'application/dns'), ('application/dskpp+xml', 'application/dskpp+xml'), ('application/dssc+der', 'application/dssc+der'), ('application/dssc+xml', 'application/dssc+xml'), ('application/dvcs', 'application/dvcs'), ('application/ecmascript', 'application/ecmascript'), ('application/EDI-consent', 'application/EDI-consent'), ('application/EDIFACT', 'application/EDIFACT'), ('application/EDI-X12', 'application/EDI-X12'), ('application/efi', 'application/efi'), ('application/EmergencyCallData.Comment+xml', 'application/EmergencyCallData.Comment+xml'), ('application/EmergencyCallData.Control+xml', 'application/EmergencyCallData.Control+xml'), ('application/EmergencyCallData.DeviceInfo+xml', 'application/EmergencyCallData.DeviceInfo+xml'), ('application/EmergencyCallData.eCall.MSD', 'application/EmergencyCallData.eCall.MSD'), ('application/EmergencyCallData.ProviderInfo+xml', 'application/EmergencyCallData.ProviderInfo+xml'), ('application/EmergencyCallData.ServiceInfo+xml', 'application/EmergencyCallData.ServiceInfo+xml'), ('application/EmergencyCallData.SubscriberInfo+xml', 'application/EmergencyCallData.SubscriberInfo+xml'), ('application/EmergencyCallData.VEDS+xml', 'application/EmergencyCallData.VEDS+xml'), ('application/emma+xml', 'application/emma+xml'), ('application/emotionml+xml', 'application/emotionml+xml'), ('application/encaprtp', 'application/encaprtp'), ('application/epp+xml', 'application/epp+xml'), ('application/epub+zip', 'application/epub+zip'), ('application/eshop', 'application/eshop'), ('application/example', 'application/example'), ('application/exi', 'application/exi'), ('application/fastinfoset', 'application/fastinfoset'), ('application/fastsoap', 'application/fastsoap'), ('application/fdt+xml', 'application/fdt+xml'), ('application/fits', 'application/fits'), ('application/font-sfnt', 'application/font-sfnt'), ('application/font-tdpfr', 'application/font-tdpfr'), ('application/font-woff', 'application/font-woff'), ('application/framework-attributes+xml', 'application/framework-attributes+xml'), ('application/geo+json', 'application/geo+json'), ('application/geo+json-seq', 'application/geo+json-seq'), ('application/gml+xml', 'application/gml+xml'), ('application/gzip', 'application/gzip'), ('application/H224', 'application/H224'), ('application/held+xml', 'application/held+xml'), ('application/http', 'application/http'), ('application/hyperstudio', 'application/hyperstudio'), ('application/ibe-key-request+xml', 'application/ibe-key-request+xml'), ('application/ibe-pkg-reply+xml', 'application/ibe-pkg-reply+xml'), ('application/ibe-pp-data', 'application/ibe-pp-data'), ('application/iges', 'application/iges'), ('application/im-iscomposing+xml', 'application/im-iscomposing+xml'), ('application/index', 'application/index'), ('application/index.cmd', 'application/index.cmd'), ('application/index.obj', 'application/index.obj'), ('application/index.response', 'application/index.response'), ('application/index.vnd', 'application/index.vnd'), ('application/inkml+xml', 'application/inkml+xml'), ('application/iotp', 'application/iotp'), ('application/ipfix', 'application/ipfix'), ('application/ipp', 'application/ipp'), ('application/isup', 'application/isup'), ('application/its+xml', 'application/its+xml'), ('application/javascript', 'application/javascript'), ('application/jose', 'application/jose'), ('application/jose+json', 'application/jose+json'), ('application/jrd+json', 'application/jrd+json'), ('application/json', 'application/json'), ('application/json-patch+json', 'application/json-patch+json'), ('application/json-seq', 'application/json-seq'), ('application/jwk+json', 'application/jwk+json'), ('application/jwk-set+json', 'application/jwk-set+json'), ('application/jwt', 'application/jwt'), ('application/kpml-request+xml', 'application/kpml-request+xml'), ('application/kpml-response+xml', 'application/kpml-response+xml'), ('application/ld+json', 'application/ld+json'), ('application/lgr+xml', 'application/lgr+xml'), ('application/link-format', 'application/link-format'), ('application/load-control+xml', 'application/load-control+xml'), ('application/lost+xml', 'application/lost+xml'), ('application/lostsync+xml', 'application/lostsync+xml'), ('application/LXF', 'application/LXF'), ('application/mac-binhex40', 'application/mac-binhex40'), ('application/macwriteii', 'application/macwriteii'), ('application/mads+xml', 'application/mads+xml'), ('application/marc', 'application/marc'), ('application/marcxml+xml', 'application/marcxml+xml'), ('application/mathematica', 'application/mathematica'), ('application/mathml-content+xml', 'application/mathml-content+xml'), ('application/mathml-presentation+xml', 'application/mathml-presentation+xml'), ('application/mathml+xml', 'application/mathml+xml'), ('application/mbms-associated-procedure-description+xml', 'application/mbms-associated-procedure-description+xml'), ('application/mbms-deregister+xml', 'application/mbms-deregister+xml'), ('application/mbms-envelope+xml', 'application/mbms-envelope+xml'), ('application/mbms-msk-response+xml', 'application/mbms-msk-response+xml'), ('application/mbms-msk+xml', 'application/mbms-msk+xml'), ('application/mbms-protection-description+xml', 'application/mbms-protection-description+xml'), ('application/mbms-reception-report+xml', 'application/mbms-reception-report+xml'), ('application/mbms-register-response+xml', 'application/mbms-register-response+xml'), ('application/mbms-register+xml', 'application/mbms-register+xml'), ('application/mbms-schedule+xml', 'application/mbms-schedule+xml'), ('application/mbms-user-service-description+xml', 'application/mbms-user-service-description+xml'), ('application/mbox', 'application/mbox'), ('application/media_control+xml', 'application/media_control+xml'), ('application/media-policy-dataset+xml', 'application/media-policy-dataset+xml'), ('application/mediaservercontrol+xml', 'application/mediaservercontrol+xml'), ('application/merge-patch+json', 'application/merge-patch+json'), ('application/metalink4+xml', 'application/metalink4+xml'), ('application/mets+xml', 'application/mets+xml'), ('application/MF4', 'application/MF4'), ('application/mikey', 'application/mikey'), ('application/mods+xml', 'application/mods+xml'), ('application/moss-keys', 'application/moss-keys'), ('application/moss-signature', 'application/moss-signature'), ('application/mosskey-data', 'application/mosskey-data'), ('application/mosskey-request', 'application/mosskey-request'), ('application/mp21', 'application/mp21'), ('application/mp4', 'application/mp4'), ('application/mpeg4-generic', 'application/mpeg4-generic'), ('application/mpeg4-iod', 'application/mpeg4-iod'), ('application/mpeg4-iod-xmt', 'application/mpeg4-iod-xmt'), ('application/mrb-consumer+xml', 'application/mrb-consumer+xml'), ('application/mrb-publish+xml', 'application/mrb-publish+xml'), ('application/msc-ivr+xml', 'application/msc-ivr+xml'), ('application/msc-mixer+xml', 'application/msc-mixer+xml'), ('application/msword', 'application/msword'), ('application/mud+json', 'application/mud+json'), ('application/mxf', 'application/mxf'), ('application/n-quads', 'application/n-quads'), ('application/n-triples', 'application/n-triples'), ('application/nasdata', 'application/nasdata'), ('application/news-checkgroups', 'application/news-checkgroups'), ('application/news-groupinfo', 'application/news-groupinfo'), ('application/news-transmission', 'application/news-transmission'), ('application/nlsml+xml', 'application/nlsml+xml'), ('application/nss', 'application/nss'), ('application/ocsp-request', 'application/ocsp-request'), ('application/ocsp-response', 'application/ocsp-response'), ('application/octet-stream', 'application/octet-stream'), ('application/oda', 'application/oda'), ('application/ODX', 'application/ODX'), ('application/oebps-package+xml', 'application/oebps-package+xml'), ('application/ogg', 'application/ogg'), ('application/oxps', 'application/oxps'), ('application/p2p-overlay+xml', 'application/p2p-overlay+xml'), ('application/parityfec', 'application/parityfec'), ('application/patch-ops-error+xml', 'application/patch-ops-error+xml'), ('application/pdf', 'application/pdf'), ('application/PDX', 'application/PDX'), ('application/pgp-encrypted', 'application/pgp-encrypted'), ('application/pgp-keys', 'application/pgp-keys'), ('application/pgp-signature', 'application/pgp-signature'), ('application/pidf-diff+xml', 'application/pidf-diff+xml'), ('application/pidf+xml', 'application/pidf+xml'), ('application/pkcs10', 'application/pkcs10'), ('application/pkcs7-mime', 'application/pkcs7-mime'), ('application/pkcs7-signature', 'application/pkcs7-signature'), ('application/pkcs8', 'application/pkcs8'), ('application/pkcs12', 'application/pkcs12'), ('application/pkix-attr-cert', 'application/pkix-attr-cert'), ('application/pkix-cert', 'application/pkix-cert'), ('application/pkix-crl', 'application/pkix-crl'), ('application/pkix-pkipath', 'application/pkix-pkipath'), ('application/pkixcmp', 'application/pkixcmp'), ('application/pls+xml', 'application/pls+xml'), ('application/poc-settings+xml', 'application/poc-settings+xml'), ('application/postscript', 'application/postscript'), ('application/ppsp-tracker+json', 'application/ppsp-tracker+json'), ('application/problem+json', 'application/problem+json'), ('application/problem+xml', 'application/problem+xml'), ('application/provenance+xml', 'application/provenance+xml'), ('application/prs.alvestrand.titrax-sheet', 'application/prs.alvestrand.titrax-sheet'), ('application/prs.cww', 'application/prs.cww'), ('application/prs.hpub+zip', 'application/prs.hpub+zip'), ('application/prs.nprend', 'application/prs.nprend'), ('application/prs.plucker', 'application/prs.plucker'), ('application/prs.rdf-xml-crypt', 'application/prs.rdf-xml-crypt'), ('application/prs.xsf+xml', 'application/prs.xsf+xml'), ('application/pskc+xml', 'application/pskc+xml'), ('application/rdf+xml', 'application/rdf+xml'), ('application/qsig', 'application/qsig'), ('application/raptorfec', 'application/raptorfec'), ('application/rdap+json', 'application/rdap+json'), ('application/reginfo+xml', 'application/reginfo+xml'), ('application/relax-ng-compact-syntax', 'application/relax-ng-compact-syntax'), ('application/remote-printing', 'application/remote-printing'), ('application/reputon+json', 'application/reputon+json'), ('application/resource-lists-diff+xml', 'application/resource-lists-diff+xml'), ('application/resource-lists+xml', 'application/resource-lists+xml'), ('application/rfc+xml', 'application/rfc+xml'), ('application/riscos', 'application/riscos'), ('application/rlmi+xml', 'application/rlmi+xml'), ('application/rls-services+xml', 'application/rls-services+xml'), ('application/rpki-ghostbusters', 'application/rpki-ghostbusters'), ('application/rpki-manifest', 'application/rpki-manifest'), ('application/rpki-publication', 'application/rpki-publication'), ('application/rpki-roa', 'application/rpki-roa'), ('application/rpki-updown', 'application/rpki-updown'), ('application/rtf', 'application/rtf'), ('application/rtploopback', 'application/rtploopback'), ('application/rtx', 'application/rtx'), ('application/samlassertion+xml', 'application/samlassertion+xml'), ('application/samlmetadata+xml', 'application/samlmetadata+xml'), ('application/sbml+xml', 'application/sbml+xml'), ('application/scaip+xml', 'application/scaip+xml'), ('application/scim+json', 'application/scim+json'), ('application/scvp-cv-request', 'application/scvp-cv-request'), ('application/scvp-cv-response', 'application/scvp-cv-response'), ('application/scvp-vp-request', 'application/scvp-vp-request'), ('application/scvp-vp-response', 'application/scvp-vp-response'), ('application/sdp', 'application/sdp'), ('application/sep-exi', 'application/sep-exi'), ('application/sep+xml', 'application/sep+xml'), ('application/session-info', 'application/session-info'), ('application/set-payment', 'application/set-payment'), ('application/set-payment-initiation', 'application/set-payment-initiation'), ('application/set-registration', 'application/set-registration'), ('application/set-registration-initiation', 'application/set-registration-initiation'), ('application/sgml', 'application/sgml'), ('application/sgml-open-catalog', 'application/sgml-open-catalog'), ('application/shf+xml', 'application/shf+xml'), ('application/sieve', 'application/sieve'), ('application/simple-filter+xml', 'application/simple-filter+xml'), ('application/simple-message-summary', 'application/simple-message-summary'), ('application/simpleSymbolContainer', 'application/simpleSymbolContainer'), ('application/slate', 'application/slate'), ('application/smil', 'application/smil'), ('application/smil+xml', 'application/smil+xml'), ('application/smpte336m', 'application/smpte336m'), ('application/soap+fastinfoset', 'application/soap+fastinfoset'), ('application/soap+xml', 'application/soap+xml'), ('application/sparql-query', 'application/sparql-query'), ('application/sparql-results+xml', 'application/sparql-results+xml'), ('application/spirits-event+xml', 'application/spirits-event+xml'), ('application/sql', 'application/sql'), ('application/srgs', 'application/srgs'), ('application/srgs+xml', 'application/srgs+xml'), ('application/sru+xml', 'application/sru+xml'), ('application/ssml+xml', 'application/ssml+xml'), ('application/tamp-apex-update', 'application/tamp-apex-update'), ('application/tamp-apex-update-confirm', 'application/tamp-apex-update-confirm'), ('application/tamp-community-update', 'application/tamp-community-update'), ('application/tamp-community-update-confirm', 'application/tamp-community-update-confirm'), ('application/tamp-error', 'application/tamp-error'), ('application/tamp-sequence-adjust', 'application/tamp-sequence-adjust'), ('application/tamp-sequence-adjust-confirm', 'application/tamp-sequence-adjust-confirm'), ('application/tamp-status-query', 'application/tamp-status-query'), ('application/tamp-status-response', 'application/tamp-status-response'), ('application/tamp-update', 'application/tamp-update'), ('application/tamp-update-confirm', 'application/tamp-update-confirm'), ('application/tei+xml', 'application/tei+xml'), ('application/thraud+xml', 'application/thraud+xml'), ('application/timestamp-query', 'application/timestamp-query'), ('application/timestamp-reply', 'application/timestamp-reply'), ('application/timestamped-data', 'application/timestamped-data'), ('application/trig', 'application/trig'), ('application/ttml+xml', 'application/ttml+xml'), ('application/tve-trigger', 'application/tve-trigger'), ('application/ulpfec', 'application/ulpfec'), ('application/urc-grpsheet+xml', 'application/urc-grpsheet+xml'), ('application/urc-ressheet+xml', 'application/urc-ressheet+xml'), ('application/urc-targetdesc+xml', 'application/urc-targetdesc+xml'), ('application/urc-uisocketdesc+xml', 'application/urc-uisocketdesc+xml'), ('application/vcard+json', 'application/vcard+json'), ('application/vcard+xml', 'application/vcard+xml'), ('application/vemmi', 'application/vemmi'), ('application/vnd.1000minds.decision-model+xml', 'application/vnd.1000minds.decision-model+xml'), ('application/vnd.3gpp.access-transfer-events+xml', 'application/vnd.3gpp.access-transfer-events+xml'), ('application/vnd.3gpp.bsf+xml', 'application/vnd.3gpp.bsf+xml'), ('application/vnd.3gpp.mid-call+xml', 'application/vnd.3gpp.mid-call+xml'), ('application/vnd.3gpp.pic-bw-large', 'application/vnd.3gpp.pic-bw-large'), ('application/vnd.3gpp.pic-bw-small', 'application/vnd.3gpp.pic-bw-small'), ('application/vnd.3gpp.pic-bw-var', 'application/vnd.3gpp.pic-bw-var'), ('application/vnd.3gpp-prose-pc3ch+xml', 'application/vnd.3gpp-prose-pc3ch+xml'), ('application/vnd.3gpp-prose+xml', 'application/vnd.3gpp-prose+xml'), ('application/vnd.3gpp.sms', 'application/vnd.3gpp.sms'), ('application/vnd.3gpp.sms+xml', 'application/vnd.3gpp.sms+xml'), ('application/vnd.3gpp.srvcc-ext+xml', 'application/vnd.3gpp.srvcc-ext+xml'), ('application/vnd.3gpp.SRVCC-info+xml', 'application/vnd.3gpp.SRVCC-info+xml'), ('application/vnd.3gpp.state-and-event-info+xml', 'application/vnd.3gpp.state-and-event-info+xml'), ('application/vnd.3gpp.ussd+xml', 'application/vnd.3gpp.ussd+xml'), ('application/vnd.3gpp2.bcmcsinfo+xml', 'application/vnd.3gpp2.bcmcsinfo+xml'), ('application/vnd.3gpp2.sms', 'application/vnd.3gpp2.sms'), ('application/vnd.3gpp2.tcap', 'application/vnd.3gpp2.tcap'), ('application/vnd.3lightssoftware.imagescal', 'application/vnd.3lightssoftware.imagescal'), ('application/vnd.3M.Post-it-Notes', 'application/vnd.3M.Post-it-Notes'), ('application/vnd.accpac.simply.aso', 'application/vnd.accpac.simply.aso'), ('application/vnd.accpac.simply.imp', 'application/vnd.accpac.simply.imp'), ('application/vnd.acucobol', 'application/vnd.acucobol'), ('application/vnd.acucorp', 'application/vnd.acucorp'), ('application/vnd.adobe.flash.movie', 'application/vnd.adobe.flash.movie'), ('application/vnd.adobe.formscentral.fcdt', 'application/vnd.adobe.formscentral.fcdt'), ('application/vnd.adobe.fxp', 'application/vnd.adobe.fxp'), ('application/vnd.adobe.partial-upload', 'application/vnd.adobe.partial-upload'), ('application/vnd.adobe.xdp+xml', 'application/vnd.adobe.xdp+xml'), ('application/vnd.adobe.xfdf', 'application/vnd.adobe.xfdf'), ('application/vnd.aether.imp', 'application/vnd.aether.imp'), ('application/vnd.ah-barcode', 'application/vnd.ah-barcode'), ('application/vnd.ahead.space', 'application/vnd.ahead.space'), ('application/vnd.airzip.filesecure.azf', 'application/vnd.airzip.filesecure.azf'), ('application/vnd.airzip.filesecure.azs', 'application/vnd.airzip.filesecure.azs'), ('application/vnd.amazon.mobi8-ebook', 'application/vnd.amazon.mobi8-ebook'), ('application/vnd.americandynamics.acc', 'application/vnd.americandynamics.acc'), ('application/vnd.amiga.ami', 'application/vnd.amiga.ami'), ('application/vnd.amundsen.maze+xml', 'application/vnd.amundsen.maze+xml'), ('application/vnd.anki', 'application/vnd.anki'), ('application/vnd.anser-web-certificate-issue-initiation', 'application/vnd.anser-web-certificate-issue-initiation'), ('application/vnd.antix.game-component', 'application/vnd.antix.game-component'), ('application/vnd.apache.thrift.binary', 'application/vnd.apache.thrift.binary'), ('application/vnd.apache.thrift.compact', 'application/vnd.apache.thrift.compact'), ('application/vnd.apache.thrift.json', 'application/vnd.apache.thrift.json'), ('application/vnd.api+json', 'application/vnd.api+json'), ('application/vnd.apothekende.reservation+json', 'application/vnd.apothekende.reservation+json'), ('application/vnd.apple.mpegurl', 'application/vnd.apple.mpegurl'), ('application/vnd.apple.installer+xml', 'application/vnd.apple.installer+xml'), ('application/vnd.arastra.swi', 'application/vnd.arastra.swi'), ('application/vnd.aristanetworks.swi', 'application/vnd.aristanetworks.swi'), ('application/vnd.artsquare', 'application/vnd.artsquare'), ('application/vnd.astraea-software.iota', 'application/vnd.astraea-software.iota'), ('application/vnd.audiograph', 'application/vnd.audiograph'), ('application/vnd.autopackage', 'application/vnd.autopackage'), ('application/vnd.avistar+xml', 'application/vnd.avistar+xml'), ('application/vnd.balsamiq.bmml+xml', 'application/vnd.balsamiq.bmml+xml'), ('application/vnd.balsamiq.bmpr', 'application/vnd.balsamiq.bmpr'), ('application/vnd.bekitzur-stech+json', 'application/vnd.bekitzur-stech+json'), ('application/vnd.bint.med-content', 'application/vnd.bint.med-content'), ('application/vnd.biopax.rdf+xml', 'application/vnd.biopax.rdf+xml'), ('application/vnd.blueice.multipass', 'application/vnd.blueice.multipass'), ('application/vnd.bluetooth.ep.oob', 'application/vnd.bluetooth.ep.oob'), ('application/vnd.bluetooth.le.oob', 'application/vnd.bluetooth.le.oob'), ('application/vnd.bmi', 'application/vnd.bmi'), ('application/vnd.businessobjects', 'application/vnd.businessobjects'), ('application/vnd.cab-jscript', 'application/vnd.cab-jscript'), ('application/vnd.canon-cpdl', 'application/vnd.canon-cpdl'), ('application/vnd.canon-lips', 'application/vnd.canon-lips'), ('application/vnd.capasystems-pg+json', 'application/vnd.capasystems-pg+json'), ('application/vnd.cendio.thinlinc.clientconf', 'application/vnd.cendio.thinlinc.clientconf'), ('application/vnd.century-systems.tcp_stream', 'application/vnd.century-systems.tcp_stream'), ('application/vnd.chemdraw+xml', 'application/vnd.chemdraw+xml'), ('application/vnd.chess-pgn', 'application/vnd.chess-pgn'), ('application/vnd.chipnuts.karaoke-mmd', 'application/vnd.chipnuts.karaoke-mmd'), ('application/vnd.cinderella', 'application/vnd.cinderella'), ('application/vnd.cirpack.isdn-ext', 'application/vnd.cirpack.isdn-ext'), ('application/vnd.citationstyles.style+xml', 'application/vnd.citationstyles.style+xml'), ('application/vnd.claymore', 'application/vnd.claymore'), ('application/vnd.cloanto.rp9', 'application/vnd.cloanto.rp9'), ('application/vnd.clonk.c4group', 'application/vnd.clonk.c4group'), ('application/vnd.cluetrust.cartomobile-config', 'application/vnd.cluetrust.cartomobile-config'), ('application/vnd.cluetrust.cartomobile-config-pkg', 'application/vnd.cluetrust.cartomobile-config-pkg'), ('application/vnd.coffeescript', 'application/vnd.coffeescript'), ('application/vnd.collection.doc+json', 'application/vnd.collection.doc+json'), ('application/vnd.collection+json', 'application/vnd.collection+json'), ('application/vnd.collection.next+json', 'application/vnd.collection.next+json'), ('application/vnd.comicbook+zip', 'application/vnd.comicbook+zip'), ('application/vnd.commerce-battelle', 'application/vnd.commerce-battelle'), ('application/vnd.commonspace', 'application/vnd.commonspace'), ('application/vnd.coreos.ignition+json', 'application/vnd.coreos.ignition+json'), ('application/vnd.cosmocaller', 'application/vnd.cosmocaller'), ('application/vnd.contact.cmsg', 'application/vnd.contact.cmsg'), ('application/vnd.crick.clicker', 'application/vnd.crick.clicker'), ('application/vnd.crick.clicker.keyboard', 'application/vnd.crick.clicker.keyboard'), ('application/vnd.crick.clicker.palette', 'application/vnd.crick.clicker.palette'), ('application/vnd.crick.clicker.template', 'application/vnd.crick.clicker.template'), ('application/vnd.crick.clicker.wordbank', 'application/vnd.crick.clicker.wordbank'), ('application/vnd.criticaltools.wbs+xml', 'application/vnd.criticaltools.wbs+xml'), ('application/vnd.ctc-posml', 'application/vnd.ctc-posml'), ('application/vnd.ctct.ws+xml', 'application/vnd.ctct.ws+xml'), ('application/vnd.cups-pdf', 'application/vnd.cups-pdf'), ('application/vnd.cups-postscript', 'application/vnd.cups-postscript'), ('application/vnd.cups-ppd', 'application/vnd.cups-ppd'), ('application/vnd.cups-raster', 'application/vnd.cups-raster'), ('application/vnd.cups-raw', 'application/vnd.cups-raw'), ('application/vnd.curl', 'application/vnd.curl'), ('application/vnd.cyan.dean.root+xml', 'application/vnd.cyan.dean.root+xml'), ('application/vnd.cybank', 'application/vnd.cybank'), ('application/vnd.d2l.coursepackage1p0+zip', 'application/vnd.d2l.coursepackage1p0+zip'), ('application/vnd.dart', 'application/vnd.dart'), ('application/vnd.data-vision.rdz', 'application/vnd.data-vision.rdz'), ('application/vnd.datapackage+json', 'application/vnd.datapackage+json'), ('application/vnd.dataresource+json', 'application/vnd.dataresource+json'), ('application/vnd.debian.binary-package', 'application/vnd.debian.binary-package'), ('application/vnd.dece.data', 'application/vnd.dece.data'), ('application/vnd.dece.ttml+xml', 'application/vnd.dece.ttml+xml'), ('application/vnd.dece.unspecified', 'application/vnd.dece.unspecified'), ('application/vnd.dece.zip', 'application/vnd.dece.zip'), ('application/vnd.denovo.fcselayout-link', 'application/vnd.denovo.fcselayout-link'), ('application/vnd.desmume.movie', 'application/vnd.desmume.movie'), ('application/vnd.dir-bi.plate-dl-nosuffix', 'application/vnd.dir-bi.plate-dl-nosuffix'), ('application/vnd.dm.delegation+xml', 'application/vnd.dm.delegation+xml'), ('application/vnd.dna', 'application/vnd.dna'), ('application/vnd.document+json', 'application/vnd.document+json'), ('application/vnd.dolby.mobile.1', 'application/vnd.dolby.mobile.1'), ('application/vnd.dolby.mobile.2', 'application/vnd.dolby.mobile.2'), ('application/vnd.doremir.scorecloud-binary-document', 'application/vnd.doremir.scorecloud-binary-document'), ('application/vnd.dpgraph', 'application/vnd.dpgraph'), ('application/vnd.dreamfactory', 'application/vnd.dreamfactory'), ('application/vnd.drive+json', 'application/vnd.drive+json'), ('application/vnd.dtg.local', 'application/vnd.dtg.local'), ('application/vnd.dtg.local.flash', 'application/vnd.dtg.local.flash'), ('application/vnd.dtg.local.html', 'application/vnd.dtg.local.html'), ('application/vnd.dvb.ait', 'application/vnd.dvb.ait'), ('application/vnd.dvb.dvbj', 'application/vnd.dvb.dvbj'), ('application/vnd.dvb.esgcontainer', 'application/vnd.dvb.esgcontainer'), ('application/vnd.dvb.ipdcdftnotifaccess', 'application/vnd.dvb.ipdcdftnotifaccess'), ('application/vnd.dvb.ipdcesgaccess', 'application/vnd.dvb.ipdcesgaccess'), ('application/vnd.dvb.ipdcesgaccess2', 'application/vnd.dvb.ipdcesgaccess2'), ('application/vnd.dvb.ipdcesgpdd', 'application/vnd.dvb.ipdcesgpdd'), ('application/vnd.dvb.ipdcroaming', 'application/vnd.dvb.ipdcroaming'), ('application/vnd.dvb.iptv.alfec-base', 'application/vnd.dvb.iptv.alfec-base'), ('application/vnd.dvb.iptv.alfec-enhancement', 'application/vnd.dvb.iptv.alfec-enhancement'), ('application/vnd.dvb.notif-aggregate-root+xml', 'application/vnd.dvb.notif-aggregate-root+xml'), ('application/vnd.dvb.notif-container+xml', 'application/vnd.dvb.notif-container+xml'), ('application/vnd.dvb.notif-generic+xml', 'application/vnd.dvb.notif-generic+xml'), ('application/vnd.dvb.notif-ia-msglist+xml', 'application/vnd.dvb.notif-ia-msglist+xml'), ('application/vnd.dvb.notif-ia-registration-request+xml', 'application/vnd.dvb.notif-ia-registration-request+xml'), ('application/vnd.dvb.notif-ia-registration-response+xml', 'application/vnd.dvb.notif-ia-registration-response+xml'), ('application/vnd.dvb.notif-init+xml', 'application/vnd.dvb.notif-init+xml'), ('application/vnd.dvb.pfr', 'application/vnd.dvb.pfr'), ('application/vnd.dvb.service', 'application/vnd.dvb.service'), ('application/vnd.dxr', 'application/vnd.dxr'), ('application/vnd.dynageo', 'application/vnd.dynageo'), ('application/vnd.dzr', 'application/vnd.dzr'), ('application/vnd.easykaraoke.cdgdownload', 'application/vnd.easykaraoke.cdgdownload'), ('application/vnd.ecdis-update', 'application/vnd.ecdis-update'), ('application/vnd.ecowin.chart', 'application/vnd.ecowin.chart'), ('application/vnd.ecowin.filerequest', 'application/vnd.ecowin.filerequest'), ('application/vnd.ecowin.fileupdate', 'application/vnd.ecowin.fileupdate'), ('application/vnd.ecowin.series', 'application/vnd.ecowin.series'), ('application/vnd.ecowin.seriesrequest', 'application/vnd.ecowin.seriesrequest'), ('application/vnd.ecowin.seriesupdate', 'application/vnd.ecowin.seriesupdate'), ('application/vnd.efi.img', 'application/vnd.efi.img'), ('application/vnd.efi.iso', 'application/vnd.efi.iso'), ('application/vnd.emclient.accessrequest+xml', 'application/vnd.emclient.accessrequest+xml'), ('application/vnd.enliven', 'application/vnd.enliven'), ('application/vnd.enphase.envoy', 'application/vnd.enphase.envoy'), ('application/vnd.eprints.data+xml', 'application/vnd.eprints.data+xml'), ('application/vnd.epson.esf', 'application/vnd.epson.esf'), ('application/vnd.epson.msf', 'application/vnd.epson.msf'), ('application/vnd.epson.quickanime', 'application/vnd.epson.quickanime'), ('application/vnd.epson.salt', 'application/vnd.epson.salt'), ('application/vnd.epson.ssf', 'application/vnd.epson.ssf'), ('application/vnd.ericsson.quickcall', 'application/vnd.ericsson.quickcall'), ('application/vnd.espass-espass+zip', 'application/vnd.espass-espass+zip'), ('application/vnd.eszigno3+xml', 'application/vnd.eszigno3+xml'), ('application/vnd.etsi.aoc+xml', 'application/vnd.etsi.aoc+xml'), ('application/vnd.etsi.asic-s+zip', 'application/vnd.etsi.asic-s+zip'), ('application/vnd.etsi.asic-e+zip', 'application/vnd.etsi.asic-e+zip'), ('application/vnd.etsi.cug+xml', 'application/vnd.etsi.cug+xml'), ('application/vnd.etsi.iptvcommand+xml', 'application/vnd.etsi.iptvcommand+xml'), ('application/vnd.etsi.iptvdiscovery+xml', 'application/vnd.etsi.iptvdiscovery+xml'), ('application/vnd.etsi.iptvprofile+xml', 'application/vnd.etsi.iptvprofile+xml'), ('application/vnd.etsi.iptvsad-bc+xml', 'application/vnd.etsi.iptvsad-bc+xml'), ('application/vnd.etsi.iptvsad-cod+xml', 'application/vnd.etsi.iptvsad-cod+xml'), ('application/vnd.etsi.iptvsad-npvr+xml', 'application/vnd.etsi.iptvsad-npvr+xml'), ('application/vnd.etsi.iptvservice+xml', 'application/vnd.etsi.iptvservice+xml'), ('application/vnd.etsi.iptvsync+xml', 'application/vnd.etsi.iptvsync+xml'), ('application/vnd.etsi.iptvueprofile+xml', 'application/vnd.etsi.iptvueprofile+xml'), ('application/vnd.etsi.mcid+xml', 'application/vnd.etsi.mcid+xml'), ('application/vnd.etsi.mheg5', 'application/vnd.etsi.mheg5'), ('application/vnd.etsi.overload-control-policy-dataset+xml', 'application/vnd.etsi.overload-control-policy-dataset+xml'), ('application/vnd.etsi.pstn+xml', 'application/vnd.etsi.pstn+xml'), ('application/vnd.etsi.sci+xml', 'application/vnd.etsi.sci+xml'), ('application/vnd.etsi.simservs+xml', 'application/vnd.etsi.simservs+xml'), ('application/vnd.etsi.timestamp-token', 'application/vnd.etsi.timestamp-token'), ('application/vnd.etsi.tsl+xml', 'application/vnd.etsi.tsl+xml'), ('application/vnd.etsi.tsl.der', 'application/vnd.etsi.tsl.der'), ('application/vnd.evolv.ecig.theme', 'application/vnd.evolv.ecig.theme'), ('application/vnd.eudora.data', 'application/vnd.eudora.data'), ('application/vnd.ezpix-album', 'application/vnd.ezpix-album'), ('application/vnd.ezpix-package', 'application/vnd.ezpix-package'), ('application/vnd.f-secure.mobile', 'application/vnd.f-secure.mobile'), ('application/vnd.fastcopy-disk-image', 'application/vnd.fastcopy-disk-image'), ('application/vnd.fdf', 'application/vnd.fdf'), ('application/vnd.fdsn.mseed', 'application/vnd.fdsn.mseed'), ('application/vnd.fdsn.seed', 'application/vnd.fdsn.seed'), ('application/vnd.ffsns', 'application/vnd.ffsns'), ('application/vnd.filmit.zfc', 'application/vnd.filmit.zfc'), ('application/vnd.fints', 'application/vnd.fints'), ('application/vnd.firemonkeys.cloudcell', 'application/vnd.firemonkeys.cloudcell'), ('application/vnd.FloGraphIt', 'application/vnd.FloGraphIt'), ('application/vnd.fluxtime.clip', 'application/vnd.fluxtime.clip'), ('application/vnd.font-fontforge-sfd', 'application/vnd.font-fontforge-sfd'), ('application/vnd.framemaker', 'application/vnd.framemaker'), ('application/vnd.frogans.fnc', 'application/vnd.frogans.fnc'), ('application/vnd.frogans.ltf', 'application/vnd.frogans.ltf'), ('application/vnd.fsc.weblaunch', 'application/vnd.fsc.weblaunch'), ('application/vnd.fujitsu.oasys', 'application/vnd.fujitsu.oasys'), ('application/vnd.fujitsu.oasys2', 'application/vnd.fujitsu.oasys2'), ('application/vnd.fujitsu.oasys3', 'application/vnd.fujitsu.oasys3'), ('application/vnd.fujitsu.oasysgp', 'application/vnd.fujitsu.oasysgp'), ('application/vnd.fujitsu.oasysprs', 'application/vnd.fujitsu.oasysprs'), ('application/vnd.fujixerox.ART4', 'application/vnd.fujixerox.ART4'), ('application/vnd.fujixerox.ART-EX', 'application/vnd.fujixerox.ART-EX'), ('application/vnd.fujixerox.ddd', 'application/vnd.fujixerox.ddd'), ('application/vnd.fujixerox.docuworks', 'application/vnd.fujixerox.docuworks'), ('application/vnd.fujixerox.docuworks.binder', 'application/vnd.fujixerox.docuworks.binder'), ('application/vnd.fujixerox.docuworks.container', 'application/vnd.fujixerox.docuworks.container'), ('application/vnd.fujixerox.HBPL', 'application/vnd.fujixerox.HBPL'), ('application/vnd.fut-misnet', 'application/vnd.fut-misnet'), ('application/vnd.fuzzysheet', 'application/vnd.fuzzysheet'), ('application/vnd.genomatix.tuxedo', 'application/vnd.genomatix.tuxedo'), ('application/vnd.geo+json', 'application/vnd.geo+json'), ('application/vnd.geocube+xml', 'application/vnd.geocube+xml'), ('application/vnd.geogebra.file', 'application/vnd.geogebra.file'), ('application/vnd.geogebra.tool', 'application/vnd.geogebra.tool'), ('application/vnd.geometry-explorer', 'application/vnd.geometry-explorer'), ('application/vnd.geonext', 'application/vnd.geonext'), ('application/vnd.geoplan', 'application/vnd.geoplan'), ('application/vnd.geospace', 'application/vnd.geospace'), ('application/vnd.gerber', 'application/vnd.gerber'), ('application/vnd.globalplatform.card-content-mgt', 'application/vnd.globalplatform.card-content-mgt'), ('application/vnd.globalplatform.card-content-mgt-response', 'application/vnd.globalplatform.card-content-mgt-response'), ('application/vnd.gmx', 'application/vnd.gmx'), ('application/vnd.google-earth.kml+xml', 'application/vnd.google-earth.kml+xml'), ('application/vnd.google-earth.kmz', 'application/vnd.google-earth.kmz'), ('application/vnd.gov.sk.e-form+xml', 'application/vnd.gov.sk.e-form+xml'), ('application/vnd.gov.sk.e-form+zip', 'application/vnd.gov.sk.e-form+zip'), ('application/vnd.gov.sk.xmldatacontainer+xml', 'application/vnd.gov.sk.xmldatacontainer+xml'), ('application/vnd.grafeq', 'application/vnd.grafeq'), ('application/vnd.gridmp', 'application/vnd.gridmp'), ('application/vnd.groove-account', 'application/vnd.groove-account'), ('application/vnd.groove-help', 'application/vnd.groove-help'), ('application/vnd.groove-identity-message', 'application/vnd.groove-identity-message'), ('application/vnd.groove-injector', 'application/vnd.groove-injector'), ('application/vnd.groove-tool-message', 'application/vnd.groove-tool-message'), ('application/vnd.groove-tool-template', 'application/vnd.groove-tool-template'), ('application/vnd.groove-vcard', 'application/vnd.groove-vcard'), ('application/vnd.hal+json', 'application/vnd.hal+json'), ('application/vnd.hal+xml', 'application/vnd.hal+xml'), ('application/vnd.HandHeld-Entertainment+xml', 'application/vnd.HandHeld-Entertainment+xml'), ('application/vnd.hbci', 'application/vnd.hbci'), ('application/vnd.hc+json', 'application/vnd.hc+json'), ('application/vnd.hcl-bireports', 'application/vnd.hcl-bireports'), ('application/vnd.hdt', 'application/vnd.hdt'), ('application/vnd.heroku+json', 'application/vnd.heroku+json'), ('application/vnd.hhe.lesson-player', 'application/vnd.hhe.lesson-player'), ('application/vnd.hp-HPGL', 'application/vnd.hp-HPGL'), ('application/vnd.hp-hpid', 'application/vnd.hp-hpid'), ('application/vnd.hp-hps', 'application/vnd.hp-hps'), ('application/vnd.hp-jlyt', 'application/vnd.hp-jlyt'), ('application/vnd.hp-PCL', 'application/vnd.hp-PCL'), ('application/vnd.hp-PCLXL', 'application/vnd.hp-PCLXL'), ('application/vnd.httphone', 'application/vnd.httphone'), ('application/vnd.hydrostatix.sof-data', 'application/vnd.hydrostatix.sof-data'), ('application/vnd.hyper-item+json', 'application/vnd.hyper-item+json'), ('application/vnd.hyperdrive+json', 'application/vnd.hyperdrive+json'), ('application/vnd.hzn-3d-crossword', 'application/vnd.hzn-3d-crossword'), ('application/vnd.ibm.afplinedata', 'application/vnd.ibm.afplinedata'), ('application/vnd.ibm.electronic-media', 'application/vnd.ibm.electronic-media'), ('application/vnd.ibm.MiniPay', 'application/vnd.ibm.MiniPay'), ('application/vnd.ibm.modcap', 'application/vnd.ibm.modcap'), ('application/vnd.ibm.rights-management', 'application/vnd.ibm.rights-management'), ('application/vnd.ibm.secure-container', 'application/vnd.ibm.secure-container'), ('application/vnd.iccprofile', 'application/vnd.iccprofile'), ('application/vnd.ieee.1905', 'application/vnd.ieee.1905'), ('application/vnd.igloader', 'application/vnd.igloader'), ('application/vnd.imagemeter.folder+zip', 'application/vnd.imagemeter.folder+zip'), ('application/vnd.imagemeter.image+zip', 'application/vnd.imagemeter.image+zip'), ('application/vnd.immervision-ivp', 'application/vnd.immervision-ivp'), ('application/vnd.immervision-ivu', 'application/vnd.immervision-ivu'), ('application/vnd.ims.imsccv1p1', 'application/vnd.ims.imsccv1p1'), ('application/vnd.ims.imsccv1p2', 'application/vnd.ims.imsccv1p2'), ('application/vnd.ims.imsccv1p3', 'application/vnd.ims.imsccv1p3'), ('application/vnd.ims.lis.v2.result+json', 'application/vnd.ims.lis.v2.result+json'), ('application/vnd.ims.lti.v2.toolconsumerprofile+json', 'application/vnd.ims.lti.v2.toolconsumerprofile+json'), ('application/vnd.ims.lti.v2.toolproxy.id+json', 'application/vnd.ims.lti.v2.toolproxy.id+json'), ('application/vnd.ims.lti.v2.toolproxy+json', 'application/vnd.ims.lti.v2.toolproxy+json'), ('application/vnd.ims.lti.v2.toolsettings+json', 'application/vnd.ims.lti.v2.toolsettings+json'), ('application/vnd.ims.lti.v2.toolsettings.simple+json', 'application/vnd.ims.lti.v2.toolsettings.simple+json'), ('application/vnd.informedcontrol.rms+xml', 'application/vnd.informedcontrol.rms+xml'), ('application/vnd.infotech.project', 'application/vnd.infotech.project'), ('application/vnd.infotech.project+xml', 'application/vnd.infotech.project+xml'), ('application/vnd.informix-visionary', 'application/vnd.informix-visionary'), ('application/vnd.innopath.wamp.notification', 'application/vnd.innopath.wamp.notification'), ('application/vnd.insors.igm', 'application/vnd.insors.igm'), ('application/vnd.intercon.formnet', 'application/vnd.intercon.formnet'), ('application/vnd.intergeo', 'application/vnd.intergeo'), ('application/vnd.intertrust.digibox', 'application/vnd.intertrust.digibox'), ('application/vnd.intertrust.nncp', 'application/vnd.intertrust.nncp'), ('application/vnd.intu.qbo', 'application/vnd.intu.qbo'), ('application/vnd.intu.qfx', 'application/vnd.intu.qfx'), ('application/vnd.iptc.g2.catalogitem+xml', 'application/vnd.iptc.g2.catalogitem+xml'), ('application/vnd.iptc.g2.conceptitem+xml', 'application/vnd.iptc.g2.conceptitem+xml'), ('application/vnd.iptc.g2.knowledgeitem+xml', 'application/vnd.iptc.g2.knowledgeitem+xml'), ('application/vnd.iptc.g2.newsitem+xml', 'application/vnd.iptc.g2.newsitem+xml'), ('application/vnd.iptc.g2.newsmessage+xml', 'application/vnd.iptc.g2.newsmessage+xml'), ('application/vnd.iptc.g2.packageitem+xml', 'application/vnd.iptc.g2.packageitem+xml'), ('application/vnd.iptc.g2.planningitem+xml', 'application/vnd.iptc.g2.planningitem+xml'), ('application/vnd.ipunplugged.rcprofile', 'application/vnd.ipunplugged.rcprofile'), ('application/vnd.irepository.package+xml', 'application/vnd.irepository.package+xml'), ('application/vnd.is-xpr', 'application/vnd.is-xpr'), ('application/vnd.isac.fcs', 'application/vnd.isac.fcs'), ('application/vnd.jam', 'application/vnd.jam'), ('application/vnd.japannet-directory-service', 'application/vnd.japannet-directory-service'), ('application/vnd.japannet-jpnstore-wakeup', 'application/vnd.japannet-jpnstore-wakeup'), ('application/vnd.japannet-payment-wakeup', 'application/vnd.japannet-payment-wakeup'), ('application/vnd.japannet-registration', 'application/vnd.japannet-registration'), ('application/vnd.japannet-registration-wakeup', 'application/vnd.japannet-registration-wakeup'), ('application/vnd.japannet-setstore-wakeup', 'application/vnd.japannet-setstore-wakeup'), ('application/vnd.japannet-verification', 'application/vnd.japannet-verification'), ('application/vnd.japannet-verification-wakeup', 'application/vnd.japannet-verification-wakeup'), ('application/vnd.jcp.javame.midlet-rms', 'application/vnd.jcp.javame.midlet-rms'), ('application/vnd.jisp', 'application/vnd.jisp'), ('application/vnd.joost.joda-archive', 'application/vnd.joost.joda-archive'), ('application/vnd.jsk.isdn-ngn', 'application/vnd.jsk.isdn-ngn'), ('application/vnd.kahootz', 'application/vnd.kahootz'), ('application/vnd.kde.karbon', 'application/vnd.kde.karbon'), ('application/vnd.kde.kchart', 'application/vnd.kde.kchart'), ('application/vnd.kde.kformula', 'application/vnd.kde.kformula'), ('application/vnd.kde.kivio', 'application/vnd.kde.kivio'), ('application/vnd.kde.kontour', 'application/vnd.kde.kontour'), ('application/vnd.kde.kpresenter', 'application/vnd.kde.kpresenter'), ('application/vnd.kde.kspread', 'application/vnd.kde.kspread'), ('application/vnd.kde.kword', 'application/vnd.kde.kword'), ('application/vnd.kenameaapp', 'application/vnd.kenameaapp'), ('application/vnd.kidspiration', 'application/vnd.kidspiration'), ('application/vnd.Kinar', 'application/vnd.Kinar'), ('application/vnd.koan', 'application/vnd.koan'), ('application/vnd.kodak-descriptor', 'application/vnd.kodak-descriptor'), ('application/vnd.las.las+json', 'application/vnd.las.las+json'), ('application/vnd.las.las+xml', 'application/vnd.las.las+xml'), ('application/vnd.liberty-request+xml', 'application/vnd.liberty-request+xml'), ('application/vnd.llamagraphics.life-balance.desktop', 'application/vnd.llamagraphics.life-balance.desktop'), ('application/vnd.llamagraphics.life-balance.exchange+xml', 'application/vnd.llamagraphics.life-balance.exchange+xml'), ('application/vnd.lotus-1-2-3', 'application/vnd.lotus-1-2-3'), ('application/vnd.lotus-approach', 'application/vnd.lotus-approach'), ('application/vnd.lotus-freelance', 'application/vnd.lotus-freelance'), ('application/vnd.lotus-notes', 'application/vnd.lotus-notes'), ('application/vnd.lotus-organizer', 'application/vnd.lotus-organizer'), ('application/vnd.lotus-screencam', 'application/vnd.lotus-screencam'), ('application/vnd.lotus-wordpro', 'application/vnd.lotus-wordpro'), ('application/vnd.macports.portpkg', 'application/vnd.macports.portpkg'), ('application/vnd.macports.portpkg', 'application/vnd.macports.portpkg'), ('application/vnd.mapbox-vector-tile', 'application/vnd.mapbox-vector-tile'), ('application/vnd.marlin.drm.actiontoken+xml', 'application/vnd.marlin.drm.actiontoken+xml'), ('application/vnd.marlin.drm.conftoken+xml', 'application/vnd.marlin.drm.conftoken+xml'), ('application/vnd.marlin.drm.license+xml', 'application/vnd.marlin.drm.license+xml'), ('application/vnd.marlin.drm.mdcf', 'application/vnd.marlin.drm.mdcf'), ('application/vnd.mason+json', 'application/vnd.mason+json'), ('application/vnd.maxmind.maxmind-db', 'application/vnd.maxmind.maxmind-db'), ('application/vnd.mcd', 'application/vnd.mcd'), ('application/vnd.medcalcdata', 'application/vnd.medcalcdata'), ('application/vnd.mediastation.cdkey', 'application/vnd.mediastation.cdkey'), ('application/vnd.meridian-slingshot', 'application/vnd.meridian-slingshot'), ('application/vnd.MFER', 'application/vnd.MFER'), ('application/vnd.mfmp', 'application/vnd.mfmp'), ('application/vnd.micro+json', 'application/vnd.micro+json'), ('application/vnd.micrografx.flo', 'application/vnd.micrografx.flo'), ('application/vnd.micrografx.igx', 'application/vnd.micrografx.igx'), ('application/vnd.microsoft.portable-executable', 'application/vnd.microsoft.portable-executable'), ('application/vnd.microsoft.windows.thumbnail-cache', 'application/vnd.microsoft.windows.thumbnail-cache'), ('application/vnd.miele+json', 'application/vnd.miele+json'), ('application/vnd.mif', 'application/vnd.mif'), ('application/vnd.minisoft-hp3000-save', 'application/vnd.minisoft-hp3000-save'), ('application/vnd.mitsubishi.misty-guard.trustweb', 'application/vnd.mitsubishi.misty-guard.trustweb'), ('application/vnd.Mobius.DAF', 'application/vnd.Mobius.DAF'), ('application/vnd.Mobius.DIS', 'application/vnd.Mobius.DIS'), ('application/vnd.Mobius.MBK', 'application/vnd.Mobius.MBK'), ('application/vnd.Mobius.MQY', 'application/vnd.Mobius.MQY'), ('application/vnd.Mobius.MSL', 'application/vnd.Mobius.MSL'), ('application/vnd.Mobius.PLC', 'application/vnd.Mobius.PLC'), ('application/vnd.Mobius.TXF', 'application/vnd.Mobius.TXF'), ('application/vnd.mophun.application', 'application/vnd.mophun.application'), ('application/vnd.mophun.certificate', 'application/vnd.mophun.certificate'), ('application/vnd.motorola.flexsuite', 'application/vnd.motorola.flexsuite'), ('application/vnd.motorola.flexsuite.adsi', 'application/vnd.motorola.flexsuite.adsi'), ('application/vnd.motorola.flexsuite.fis', 'application/vnd.motorola.flexsuite.fis'), ('application/vnd.motorola.flexsuite.gotap', 'application/vnd.motorola.flexsuite.gotap'), ('application/vnd.motorola.flexsuite.kmr', 'application/vnd.motorola.flexsuite.kmr'), ('application/vnd.motorola.flexsuite.ttc', 'application/vnd.motorola.flexsuite.ttc'), ('application/vnd.motorola.flexsuite.wem', 'application/vnd.motorola.flexsuite.wem'), ('application/vnd.motorola.iprm', 'application/vnd.motorola.iprm'), ('application/vnd.mozilla.xul+xml', 'application/vnd.mozilla.xul+xml'), ('application/vnd.ms-artgalry', 'application/vnd.ms-artgalry'), ('application/vnd.ms-asf', 'application/vnd.ms-asf'), ('application/vnd.ms-cab-compressed', 'application/vnd.ms-cab-compressed'), ('application/vnd.ms-3mfdocument', 'application/vnd.ms-3mfdocument'), ('application/vnd.ms-excel', 'application/vnd.ms-excel'), ('application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12'), ('application/vnd.ms-excel.sheet.binary.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'), ('application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.sheet.macroEnabled.12'), ('application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12'), ('application/vnd.ms-fontobject', 'application/vnd.ms-fontobject'), ('application/vnd.ms-htmlhelp', 'application/vnd.ms-htmlhelp'), ('application/vnd.ms-ims', 'application/vnd.ms-ims'), ('application/vnd.ms-lrm', 'application/vnd.ms-lrm'), ('application/vnd.ms-office.activeX+xml', 'application/vnd.ms-office.activeX+xml'), ('application/vnd.ms-officetheme', 'application/vnd.ms-officetheme'), ('application/vnd.ms-playready.initiator+xml', 'application/vnd.ms-playready.initiator+xml'), ('application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint'), ('application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.addin.macroEnabled.12'), ('application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'), ('application/vnd.ms-powerpoint.slide.macroEnabled.12', 'application/vnd.ms-powerpoint.slide.macroEnabled.12'), ('application/vnd.ms-powerpoint.slideshow.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'), ('application/vnd.ms-powerpoint.template.macroEnabled.12', 'application/vnd.ms-powerpoint.template.macroEnabled.12'), ('application/vnd.ms-PrintDeviceCapabilities+xml', 'application/vnd.ms-PrintDeviceCapabilities+xml'), ('application/vnd.ms-PrintSchemaTicket+xml', 'application/vnd.ms-PrintSchemaTicket+xml'), ('application/vnd.ms-project', 'application/vnd.ms-project'), ('application/vnd.ms-tnef', 'application/vnd.ms-tnef'), ('application/vnd.ms-windows.devicepairing', 'application/vnd.ms-windows.devicepairing'), ('application/vnd.ms-windows.nwprinting.oob', 'application/vnd.ms-windows.nwprinting.oob'), ('application/vnd.ms-windows.printerpairing', 'application/vnd.ms-windows.printerpairing'), ('application/vnd.ms-windows.wsd.oob', 'application/vnd.ms-windows.wsd.oob'), ('application/vnd.ms-wmdrm.lic-chlg-req', 'application/vnd.ms-wmdrm.lic-chlg-req'), ('application/vnd.ms-wmdrm.lic-resp', 'application/vnd.ms-wmdrm.lic-resp'), ('application/vnd.ms-wmdrm.meter-chlg-req', 'application/vnd.ms-wmdrm.meter-chlg-req'), ('application/vnd.ms-wmdrm.meter-resp', 'application/vnd.ms-wmdrm.meter-resp'), ('application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.document.macroEnabled.12'), ('application/vnd.ms-word.template.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'), ('application/vnd.ms-works', 'application/vnd.ms-works'), ('application/vnd.ms-wpl', 'application/vnd.ms-wpl'), ('application/vnd.ms-xpsdocument', 'application/vnd.ms-xpsdocument'), ('application/vnd.msa-disk-image', 'application/vnd.msa-disk-image'), ('application/vnd.mseq', 'application/vnd.mseq'), ('application/vnd.msign', 'application/vnd.msign'), ('application/vnd.multiad.creator', 'application/vnd.multiad.creator'), ('application/vnd.multiad.creator.cif', 'application/vnd.multiad.creator.cif'), ('application/vnd.musician', 'application/vnd.musician'), ('application/vnd.music-niff', 'application/vnd.music-niff'), ('application/vnd.muvee.style', 'application/vnd.muvee.style'), ('application/vnd.mynfc', 'application/vnd.mynfc'), ('application/vnd.ncd.control', 'application/vnd.ncd.control'), ('application/vnd.ncd.reference', 'application/vnd.ncd.reference'), ('application/vnd.nearst.inv+json', 'application/vnd.nearst.inv+json'), ('application/vnd.nervana', 'application/vnd.nervana'), ('application/vnd.netfpx', 'application/vnd.netfpx'), ('application/vnd.neurolanguage.nlu', 'application/vnd.neurolanguage.nlu'), ('application/vnd.nintendo.snes.rom', 'application/vnd.nintendo.snes.rom'), ('application/vnd.nintendo.nitro.rom', 'application/vnd.nintendo.nitro.rom'), ('application/vnd.nitf', 'application/vnd.nitf'), ('application/vnd.noblenet-directory', 'application/vnd.noblenet-directory'), ('application/vnd.noblenet-sealer', 'application/vnd.noblenet-sealer'), ('application/vnd.noblenet-web', 'application/vnd.noblenet-web'), ('application/vnd.nokia.catalogs', 'application/vnd.nokia.catalogs'), ('application/vnd.nokia.conml+wbxml', 'application/vnd.nokia.conml+wbxml'), ('application/vnd.nokia.conml+xml', 'application/vnd.nokia.conml+xml'), ('application/vnd.nokia.iptv.config+xml', 'application/vnd.nokia.iptv.config+xml'), ('application/vnd.nokia.iSDS-radio-presets', 'application/vnd.nokia.iSDS-radio-presets'), ('application/vnd.nokia.landmark+wbxml', 'application/vnd.nokia.landmark+wbxml'), ('application/vnd.nokia.landmark+xml', 'application/vnd.nokia.landmark+xml'), ('application/vnd.nokia.landmarkcollection+xml', 'application/vnd.nokia.landmarkcollection+xml'), ('application/vnd.nokia.ncd', 'application/vnd.nokia.ncd'), ('application/vnd.nokia.n-gage.ac+xml', 'application/vnd.nokia.n-gage.ac+xml'), ('application/vnd.nokia.n-gage.data', 'application/vnd.nokia.n-gage.data'), ('application/vnd.nokia.n-gage.symbian.install', 'application/vnd.nokia.n-gage.symbian.install'), ('application/vnd.nokia.pcd+wbxml', 'application/vnd.nokia.pcd+wbxml'), ('application/vnd.nokia.pcd+xml', 'application/vnd.nokia.pcd+xml'), ('application/vnd.nokia.radio-preset', 'application/vnd.nokia.radio-preset'), ('application/vnd.nokia.radio-presets', 'application/vnd.nokia.radio-presets'), ('application/vnd.novadigm.EDM', 'application/vnd.novadigm.EDM'), ('application/vnd.novadigm.EDX', 'application/vnd.novadigm.EDX'), ('application/vnd.novadigm.EXT', 'application/vnd.novadigm.EXT'), ('application/vnd.ntt-local.content-share', 'application/vnd.ntt-local.content-share'), ('application/vnd.ntt-local.file-transfer', 'application/vnd.ntt-local.file-transfer'), ('application/vnd.ntt-local.ogw_remote-access', 'application/vnd.ntt-local.ogw_remote-access'), ('application/vnd.ntt-local.sip-ta_remote', 'application/vnd.ntt-local.sip-ta_remote'), ('application/vnd.ntt-local.sip-ta_tcp_stream', 'application/vnd.ntt-local.sip-ta_tcp_stream'), ('application/vnd.oasis.opendocument.chart', 'application/vnd.oasis.opendocument.chart'), ('application/vnd.oasis.opendocument.chart-template', 'application/vnd.oasis.opendocument.chart-template'), ('application/vnd.oasis.opendocument.database', 'application/vnd.oasis.opendocument.database'), ('application/vnd.oasis.opendocument.formula', 'application/vnd.oasis.opendocument.formula'), ('application/vnd.oasis.opendocument.formula-template', 'application/vnd.oasis.opendocument.formula-template'), ('application/vnd.oasis.opendocument.graphics', 'application/vnd.oasis.opendocument.graphics'), ('application/vnd.oasis.opendocument.graphics-template', 'application/vnd.oasis.opendocument.graphics-template'), ('application/vnd.oasis.opendocument.image', 'application/vnd.oasis.opendocument.image'), ('application/vnd.oasis.opendocument.image-template', 'application/vnd.oasis.opendocument.image-template'), ('application/vnd.oasis.opendocument.presentation', 'application/vnd.oasis.opendocument.presentation'), ('application/vnd.oasis.opendocument.presentation-template', 'application/vnd.oasis.opendocument.presentation-template'), ('application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.spreadsheet'), ('application/vnd.oasis.opendocument.spreadsheet-template', 'application/vnd.oasis.opendocument.spreadsheet-template'), ('application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.text'), ('application/vnd.oasis.opendocument.text-master', 'application/vnd.oasis.opendocument.text-master'), ('application/vnd.oasis.opendocument.text-template', 'application/vnd.oasis.opendocument.text-template'), ('application/vnd.oasis.opendocument.text-web', 'application/vnd.oasis.opendocument.text-web'), ('application/vnd.obn', 'application/vnd.obn'), ('application/vnd.ocf+cbor', 'application/vnd.ocf+cbor'), ('application/vnd.oftn.l10n+json', 'application/vnd.oftn.l10n+json'), ('application/vnd.oipf.contentaccessdownload+xml', 'application/vnd.oipf.contentaccessdownload+xml'), ('application/vnd.oipf.contentaccessstreaming+xml', 'application/vnd.oipf.contentaccessstreaming+xml'), ('application/vnd.oipf.cspg-hexbinary', 'application/vnd.oipf.cspg-hexbinary'), ('application/vnd.oipf.dae.svg+xml', 'application/vnd.oipf.dae.svg+xml'), ('application/vnd.oipf.dae.xhtml+xml', 'application/vnd.oipf.dae.xhtml+xml'), ('application/vnd.oipf.mippvcontrolmessage+xml', 'application/vnd.oipf.mippvcontrolmessage+xml'), ('application/vnd.oipf.pae.gem', 'application/vnd.oipf.pae.gem'), ('application/vnd.oipf.spdiscovery+xml', 'application/vnd.oipf.spdiscovery+xml'), ('application/vnd.oipf.spdlist+xml', 'application/vnd.oipf.spdlist+xml'), ('application/vnd.oipf.ueprofile+xml', 'application/vnd.oipf.ueprofile+xml'), ('application/vnd.oipf.userprofile+xml', 'application/vnd.oipf.userprofile+xml'), ('application/vnd.olpc-sugar', 'application/vnd.olpc-sugar'), ('application/vnd.oma.bcast.associated-procedure-parameter+xml', 'application/vnd.oma.bcast.associated-procedure-parameter+xml'), ('application/vnd.oma.bcast.drm-trigger+xml', 'application/vnd.oma.bcast.drm-trigger+xml'), ('application/vnd.oma.bcast.imd+xml', 'application/vnd.oma.bcast.imd+xml'), ('application/vnd.oma.bcast.ltkm', 'application/vnd.oma.bcast.ltkm'), ('application/vnd.oma.bcast.notification+xml', 'application/vnd.oma.bcast.notification+xml'), ('application/vnd.oma.bcast.provisioningtrigger', 'application/vnd.oma.bcast.provisioningtrigger'), ('application/vnd.oma.bcast.sgboot', 'application/vnd.oma.bcast.sgboot'), ('application/vnd.oma.bcast.sgdd+xml', 'application/vnd.oma.bcast.sgdd+xml'), ('application/vnd.oma.bcast.sgdu', 'application/vnd.oma.bcast.sgdu'), ('application/vnd.oma.bcast.simple-symbol-container', 'application/vnd.oma.bcast.simple-symbol-container'), ('application/vnd.oma.bcast.smartcard-trigger+xml', 'application/vnd.oma.bcast.smartcard-trigger+xml'), ('application/vnd.oma.bcast.sprov+xml', 'application/vnd.oma.bcast.sprov+xml'), ('application/vnd.oma.bcast.stkm', 'application/vnd.oma.bcast.stkm'), ('application/vnd.oma.cab-address-book+xml', 'application/vnd.oma.cab-address-book+xml'), ('application/vnd.oma.cab-feature-handler+xml', 'application/vnd.oma.cab-feature-handler+xml'), ('application/vnd.oma.cab-pcc+xml', 'application/vnd.oma.cab-pcc+xml'), ('application/vnd.oma.cab-subs-invite+xml', 'application/vnd.oma.cab-subs-invite+xml'), ('application/vnd.oma.cab-user-prefs+xml', 'application/vnd.oma.cab-user-prefs+xml'), ('application/vnd.oma.dcd', 'application/vnd.oma.dcd'), ('application/vnd.oma.dcdc', 'application/vnd.oma.dcdc'), ('application/vnd.oma.dd2+xml', 'application/vnd.oma.dd2+xml'), ('application/vnd.oma.drm.risd+xml', 'application/vnd.oma.drm.risd+xml'), ('application/vnd.oma.group-usage-list+xml', 'application/vnd.oma.group-usage-list+xml'), ('application/vnd.oma.lwm2m+json', 'application/vnd.oma.lwm2m+json'), ('application/vnd.oma.lwm2m+tlv', 'application/vnd.oma.lwm2m+tlv'), ('application/vnd.oma.pal+xml', 'application/vnd.oma.pal+xml'), ('application/vnd.oma.poc.detailed-progress-report+xml', 'application/vnd.oma.poc.detailed-progress-report+xml'), ('application/vnd.oma.poc.final-report+xml', 'application/vnd.oma.poc.final-report+xml'), ('application/vnd.oma.poc.groups+xml', 'application/vnd.oma.poc.groups+xml'), ('application/vnd.oma.poc.invocation-descriptor+xml', 'application/vnd.oma.poc.invocation-descriptor+xml'), ('application/vnd.oma.poc.optimized-progress-report+xml', 'application/vnd.oma.poc.optimized-progress-report+xml'), ('application/vnd.oma.push', 'application/vnd.oma.push'), ('application/vnd.oma.scidm.messages+xml', 'application/vnd.oma.scidm.messages+xml'), ('application/vnd.oma.xcap-directory+xml', 'application/vnd.oma.xcap-directory+xml'), ('application/vnd.omads-email+xml', 'application/vnd.omads-email+xml'), ('application/vnd.omads-file+xml', 'application/vnd.omads-file+xml'), ('application/vnd.omads-folder+xml', 'application/vnd.omads-folder+xml'), ('application/vnd.omaloc-supl-init', 'application/vnd.omaloc-supl-init'), ('application/vnd.oma-scws-config', 'application/vnd.oma-scws-config'), ('application/vnd.oma-scws-http-request', 'application/vnd.oma-scws-http-request'), ('application/vnd.oma-scws-http-response', 'application/vnd.oma-scws-http-response'), ('application/vnd.onepager', 'application/vnd.onepager'), ('application/vnd.onepagertamp', 'application/vnd.onepagertamp'), ('application/vnd.onepagertamx', 'application/vnd.onepagertamx'), ('application/vnd.onepagertat', 'application/vnd.onepagertat'), ('application/vnd.onepagertatp', 'application/vnd.onepagertatp'), ('application/vnd.onepagertatx', 'application/vnd.onepagertatx'), ('application/vnd.openblox.game-binary', 'application/vnd.openblox.game-binary'), ('application/vnd.openblox.game+xml', 'application/vnd.openblox.game+xml'), ('application/vnd.openeye.oeb', 'application/vnd.openeye.oeb'), ('application/vnd.openstreetmap.data+xml', 'application/vnd.openstreetmap.data+xml'), ('application/vnd.openxmlformats-officedocument.custom-properties+xml', 'application/vnd.openxmlformats-officedocument.custom-properties+xml'), ('application/vnd.openxmlformats-officedocument.customXmlProperties+xml', 'application/vnd.openxmlformats-officedocument.customXmlProperties+xml'), ('application/vnd.openxmlformats-officedocument.drawing+xml', 'application/vnd.openxmlformats-officedocument.drawing+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.chart+xml', 'application/vnd.openxmlformats-officedocument.drawingml.chart+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml', 'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml'), ('application/vnd.openxmlformats-officedocument.extended-properties+xml', 'application/vnd.openxmlformats-officedocument.extended-properties+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml', 'application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.comments+xml', 'application/vnd.openxmlformats-officedocument.presentationml.comments+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml', 'application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'), ('application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.presProps+xml', 'application/vnd.openxmlformats-officedocument.presentationml.presProps+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slide', 'application/vnd.openxmlformats-officedocument.presentationml.slide'), ('application/vnd.openxmlformats-officedocument.presentationml.slide+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slide+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'), ('application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml', 'application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.tags+xml', 'application/vnd.openxmlformats-officedocument.presentationml.tags+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.template'), ('application/vnd.openxmlformats-officedocument.presentationml.template.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml', 'application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'), ('application/vnd.openxmlformats-officedocument.theme+xml', 'application/vnd.openxmlformats-officedocument.theme+xml'), ('application/vnd.openxmlformats-officedocument.themeOverride+xml', 'application/vnd.openxmlformats-officedocument.themeOverride+xml'), ('application/vnd.openxmlformats-officedocument.vmlDrawing', 'application/vnd.openxmlformats-officedocument.vmlDrawing'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml'), ('application/vnd.openxmlformats-package.core-properties+xml', 'application/vnd.openxmlformats-package.core-properties+xml'), ('application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml', 'application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml'), ('application/vnd.openxmlformats-package.relationships+xml', 'application/vnd.openxmlformats-package.relationships+xml'), ('application/vnd.oracle.resource+json', 'application/vnd.oracle.resource+json'), ('application/vnd.orange.indata', 'application/vnd.orange.indata'), ('application/vnd.osa.netdeploy', 'application/vnd.osa.netdeploy'), ('application/vnd.osgeo.mapguide.package', 'application/vnd.osgeo.mapguide.package'), ('application/vnd.osgi.bundle', 'application/vnd.osgi.bundle'), ('application/vnd.osgi.dp', 'application/vnd.osgi.dp'), ('application/vnd.osgi.subsystem', 'application/vnd.osgi.subsystem'), ('application/vnd.otps.ct-kip+xml', 'application/vnd.otps.ct-kip+xml'), ('application/vnd.oxli.countgraph', 'application/vnd.oxli.countgraph'), ('application/vnd.pagerduty+json', 'application/vnd.pagerduty+json'), ('application/vnd.palm', 'application/vnd.palm'), ('application/vnd.panoply', 'application/vnd.panoply'), ('application/vnd.paos.xml', 'application/vnd.paos.xml'), ('application/vnd.pawaafile', 'application/vnd.pawaafile'), ('application/vnd.pcos', 'application/vnd.pcos'), ('application/vnd.pg.format', 'application/vnd.pg.format'), ('application/vnd.pg.osasli', 'application/vnd.pg.osasli'), ('application/vnd.piaccess.application-licence', 'application/vnd.piaccess.application-licence'), ('application/vnd.picsel', 'application/vnd.picsel'), ('application/vnd.pmi.widget', 'application/vnd.pmi.widget'), ('application/vnd.poc.group-advertisement+xml', 'application/vnd.poc.group-advertisement+xml'), ('application/vnd.pocketlearn', 'application/vnd.pocketlearn'), ('application/vnd.powerbuilder6', 'application/vnd.powerbuilder6'), ('application/vnd.powerbuilder6-s', 'application/vnd.powerbuilder6-s'), ('application/vnd.powerbuilder7', 'application/vnd.powerbuilder7'), ('application/vnd.powerbuilder75', 'application/vnd.powerbuilder75'), ('application/vnd.powerbuilder75-s', 'application/vnd.powerbuilder75-s'), ('application/vnd.powerbuilder7-s', 'application/vnd.powerbuilder7-s'), ('application/vnd.preminet', 'application/vnd.preminet'), ('application/vnd.previewsystems.box', 'application/vnd.previewsystems.box'), ('application/vnd.proteus.magazine', 'application/vnd.proteus.magazine'), ('application/vnd.publishare-delta-tree', 'application/vnd.publishare-delta-tree'), ('application/vnd.pvi.ptid1', 'application/vnd.pvi.ptid1'), ('application/vnd.pwg-multiplexed', 'application/vnd.pwg-multiplexed'), ('application/vnd.pwg-xhtml-print+xml', 'application/vnd.pwg-xhtml-print+xml'), ('application/vnd.qualcomm.brew-app-res', 'application/vnd.qualcomm.brew-app-res'), ('application/vnd.quarantainenet', 'application/vnd.quarantainenet'), ('application/vnd.Quark.QuarkXPress', 'application/vnd.Quark.QuarkXPress'), ('application/vnd.quobject-quoxdocument', 'application/vnd.quobject-quoxdocument'), ('application/vnd.radisys.moml+xml', 'application/vnd.radisys.moml+xml'), ('application/vnd.radisys.msml-audit-conf+xml', 'application/vnd.radisys.msml-audit-conf+xml'), ('application/vnd.radisys.msml-audit-conn+xml', 'application/vnd.radisys.msml-audit-conn+xml'), ('application/vnd.radisys.msml-audit-dialog+xml', 'application/vnd.radisys.msml-audit-dialog+xml'), ('application/vnd.radisys.msml-audit-stream+xml', 'application/vnd.radisys.msml-audit-stream+xml'), ('application/vnd.radisys.msml-audit+xml', 'application/vnd.radisys.msml-audit+xml'), ('application/vnd.radisys.msml-conf+xml', 'application/vnd.radisys.msml-conf+xml'), ('application/vnd.radisys.msml-dialog-base+xml', 'application/vnd.radisys.msml-dialog-base+xml'), ('application/vnd.radisys.msml-dialog-fax-detect+xml', 'application/vnd.radisys.msml-dialog-fax-detect+xml'), ('application/vnd.radisys.msml-dialog-fax-sendrecv+xml', 'application/vnd.radisys.msml-dialog-fax-sendrecv+xml'), ('application/vnd.radisys.msml-dialog-group+xml', 'application/vnd.radisys.msml-dialog-group+xml'), ('application/vnd.radisys.msml-dialog-speech+xml', 'application/vnd.radisys.msml-dialog-speech+xml'), ('application/vnd.radisys.msml-dialog-transform+xml', 'application/vnd.radisys.msml-dialog-transform+xml'), ('application/vnd.radisys.msml-dialog+xml', 'application/vnd.radisys.msml-dialog+xml'), ('application/vnd.radisys.msml+xml', 'application/vnd.radisys.msml+xml'), ('application/vnd.rainstor.data', 'application/vnd.rainstor.data'), ('application/vnd.rapid', 'application/vnd.rapid'), ('application/vnd.rar', 'application/vnd.rar'), ('application/vnd.realvnc.bed', 'application/vnd.realvnc.bed'), ('application/vnd.recordare.musicxml', 'application/vnd.recordare.musicxml'), ('application/vnd.recordare.musicxml+xml', 'application/vnd.recordare.musicxml+xml'), ('application/vnd.RenLearn.rlprint', 'application/vnd.RenLearn.rlprint'), ('application/vnd.rig.cryptonote', 'application/vnd.rig.cryptonote'), ('application/vnd.route66.link66+xml', 'application/vnd.route66.link66+xml'), ('application/vnd.rs-274x', 'application/vnd.rs-274x'), ('application/vnd.ruckus.download', 'application/vnd.ruckus.download'), ('application/vnd.s3sms', 'application/vnd.s3sms'), ('application/vnd.sailingtracker.track', 'application/vnd.sailingtracker.track'), ('application/vnd.sbm.cid', 'application/vnd.sbm.cid'), ('application/vnd.sbm.mid2', 'application/vnd.sbm.mid2'), ('application/vnd.scribus', 'application/vnd.scribus'), ('application/vnd.sealed.3df', 'application/vnd.sealed.3df'), ('application/vnd.sealed.csf', 'application/vnd.sealed.csf'), ('application/vnd.sealed.doc', 'application/vnd.sealed.doc'), ('application/vnd.sealed.eml', 'application/vnd.sealed.eml'), ('application/vnd.sealed.mht', 'application/vnd.sealed.mht'), ('application/vnd.sealed.net', 'application/vnd.sealed.net'), ('application/vnd.sealed.ppt', 'application/vnd.sealed.ppt'), ('application/vnd.sealed.tiff', 'application/vnd.sealed.tiff'), ('application/vnd.sealed.xls', 'application/vnd.sealed.xls'), ('application/vnd.sealedmedia.softseal.html', 'application/vnd.sealedmedia.softseal.html'), ('application/vnd.sealedmedia.softseal.pdf', 'application/vnd.sealedmedia.softseal.pdf'), ('application/vnd.seemail', 'application/vnd.seemail'), ('application/vnd.sema', 'application/vnd.sema'), ('application/vnd.semd', 'application/vnd.semd'), ('application/vnd.semf', 'application/vnd.semf'), ('application/vnd.shana.informed.formdata', 'application/vnd.shana.informed.formdata'), ('application/vnd.shana.informed.formtemplate', 'application/vnd.shana.informed.formtemplate'), ('application/vnd.shana.informed.interchange', 'application/vnd.shana.informed.interchange'), ('application/vnd.shana.informed.package', 'application/vnd.shana.informed.package'), ('application/vnd.sigrok.session', 'application/vnd.sigrok.session'), ('application/vnd.SimTech-MindMapper', 'application/vnd.SimTech-MindMapper'), ('application/vnd.siren+json', 'application/vnd.siren+json'), ('application/vnd.smaf', 'application/vnd.smaf'), ('application/vnd.smart.notebook', 'application/vnd.smart.notebook'), ('application/vnd.smart.teacher', 'application/vnd.smart.teacher'), ('application/vnd.software602.filler.form+xml', 'application/vnd.software602.filler.form+xml'), ('application/vnd.software602.filler.form-xml-zip', 'application/vnd.software602.filler.form-xml-zip'), ('application/vnd.solent.sdkm+xml', 'application/vnd.solent.sdkm+xml'), ('application/vnd.spotfire.dxp', 'application/vnd.spotfire.dxp'), ('application/vnd.spotfire.sfs', 'application/vnd.spotfire.sfs'), ('application/vnd.sss-cod', 'application/vnd.sss-cod'), ('application/vnd.sss-dtf', 'application/vnd.sss-dtf'), ('application/vnd.sss-ntf', 'application/vnd.sss-ntf'), ('application/vnd.stepmania.package', 'application/vnd.stepmania.package'), ('application/vnd.stepmania.stepchart', 'application/vnd.stepmania.stepchart'), ('application/vnd.street-stream', 'application/vnd.street-stream'), ('application/vnd.sun.wadl+xml', 'application/vnd.sun.wadl+xml'), ('application/vnd.sus-calendar', 'application/vnd.sus-calendar'), ('application/vnd.svd', 'application/vnd.svd'), ('application/vnd.swiftview-ics', 'application/vnd.swiftview-ics'), ('application/vnd.syncml.dm.notification', 'application/vnd.syncml.dm.notification'), ('application/vnd.syncml.dmddf+xml', 'application/vnd.syncml.dmddf+xml'), ('application/vnd.syncml.dmtnds+wbxml', 'application/vnd.syncml.dmtnds+wbxml'), ('application/vnd.syncml.dmtnds+xml', 'application/vnd.syncml.dmtnds+xml'), ('application/vnd.syncml.dmddf+wbxml', 'application/vnd.syncml.dmddf+wbxml'), ('application/vnd.syncml.dm+wbxml', 'application/vnd.syncml.dm+wbxml'), ('application/vnd.syncml.dm+xml', 'application/vnd.syncml.dm+xml'), ('application/vnd.syncml.ds.notification', 'application/vnd.syncml.ds.notification'), ('application/vnd.syncml+xml', 'application/vnd.syncml+xml'), ('application/vnd.tableschema+json', 'application/vnd.tableschema+json'), ('application/vnd.tao.intent-module-archive', 'application/vnd.tao.intent-module-archive'), ('application/vnd.tcpdump.pcap', 'application/vnd.tcpdump.pcap'), ('application/vnd.tml', 'application/vnd.tml'), ('application/vnd.tmd.mediaflex.api+xml', 'application/vnd.tmd.mediaflex.api+xml'), ('application/vnd.tmobile-livetv', 'application/vnd.tmobile-livetv'), ('application/vnd.tri.onesource', 'application/vnd.tri.onesource'), ('application/vnd.trid.tpt', 'application/vnd.trid.tpt'), ('application/vnd.triscape.mxs', 'application/vnd.triscape.mxs'), ('application/vnd.trueapp', 'application/vnd.trueapp'), ('application/vnd.truedoc', 'application/vnd.truedoc'), ('application/vnd.ubisoft.webplayer', 'application/vnd.ubisoft.webplayer'), ('application/vnd.ufdl', 'application/vnd.ufdl'), ('application/vnd.uiq.theme', 'application/vnd.uiq.theme'), ('application/vnd.umajin', 'application/vnd.umajin'), ('application/vnd.unity', 'application/vnd.unity'), ('application/vnd.uoml+xml', 'application/vnd.uoml+xml'), ('application/vnd.uplanet.alert', 'application/vnd.uplanet.alert'), ('application/vnd.uplanet.alert-wbxml', 'application/vnd.uplanet.alert-wbxml'), ('application/vnd.uplanet.bearer-choice', 'application/vnd.uplanet.bearer-choice'), ('application/vnd.uplanet.bearer-choice-wbxml', 'application/vnd.uplanet.bearer-choice-wbxml'), ('application/vnd.uplanet.cacheop', 'application/vnd.uplanet.cacheop'), ('application/vnd.uplanet.cacheop-wbxml', 'application/vnd.uplanet.cacheop-wbxml'), ('application/vnd.uplanet.channel', 'application/vnd.uplanet.channel'), ('application/vnd.uplanet.channel-wbxml', 'application/vnd.uplanet.channel-wbxml'), ('application/vnd.uplanet.list', 'application/vnd.uplanet.list'), ('application/vnd.uplanet.listcmd', 'application/vnd.uplanet.listcmd'), ('application/vnd.uplanet.listcmd-wbxml', 'application/vnd.uplanet.listcmd-wbxml'), ('application/vnd.uplanet.list-wbxml', 'application/vnd.uplanet.list-wbxml'), ('application/vnd.uri-map', 'application/vnd.uri-map'), ('application/vnd.uplanet.signal', 'application/vnd.uplanet.signal'), ('application/vnd.valve.source.material', 'application/vnd.valve.source.material'), ('application/vnd.vcx', 'application/vnd.vcx'), ('application/vnd.vd-study', 'application/vnd.vd-study'), ('application/vnd.vectorworks', 'application/vnd.vectorworks'), ('application/vnd.vel+json', 'application/vnd.vel+json'), ('application/vnd.verimatrix.vcas', 'application/vnd.verimatrix.vcas'), ('application/vnd.vidsoft.vidconference', 'application/vnd.vidsoft.vidconference'), ('application/vnd.visio', 'application/vnd.visio'), ('application/vnd.visionary', 'application/vnd.visionary'), ('application/vnd.vividence.scriptfile', 'application/vnd.vividence.scriptfile'), ('application/vnd.vsf', 'application/vnd.vsf'), ('application/vnd.wap.sic', 'application/vnd.wap.sic'), ('application/vnd.wap.slc', 'application/vnd.wap.slc'), ('application/vnd.wap.wbxml', 'application/vnd.wap.wbxml'), ('application/vnd.wap.wmlc', 'application/vnd.wap.wmlc'), ('application/vnd.wap.wmlscriptc', 'application/vnd.wap.wmlscriptc'), ('application/vnd.webturbo', 'application/vnd.webturbo'), ('application/vnd.wfa.p2p', 'application/vnd.wfa.p2p'), ('application/vnd.wfa.wsc', 'application/vnd.wfa.wsc'), ('application/vnd.windows.devicepairing', 'application/vnd.windows.devicepairing'), ('application/vnd.wmc', 'application/vnd.wmc'), ('application/vnd.wmf.bootstrap', 'application/vnd.wmf.bootstrap'), ('application/vnd.wolfram.mathematica', 'application/vnd.wolfram.mathematica'), ('application/vnd.wolfram.mathematica.package', 'application/vnd.wolfram.mathematica.package'), ('application/vnd.wolfram.player', 'application/vnd.wolfram.player'), ('application/vnd.wordperfect', 'application/vnd.wordperfect'), ('application/vnd.wqd', 'application/vnd.wqd'), ('application/vnd.wrq-hp3000-labelled', 'application/vnd.wrq-hp3000-labelled'), ('application/vnd.wt.stf', 'application/vnd.wt.stf'), ('application/vnd.wv.csp+xml', 'application/vnd.wv.csp+xml'), ('application/vnd.wv.csp+wbxml', 'application/vnd.wv.csp+wbxml'), ('application/vnd.wv.ssp+xml', 'application/vnd.wv.ssp+xml'), ('application/vnd.xacml+json', 'application/vnd.xacml+json'), ('application/vnd.xara', 'application/vnd.xara'), ('application/vnd.xfdl', 'application/vnd.xfdl'), ('application/vnd.xfdl.webform', 'application/vnd.xfdl.webform'), ('application/vnd.xmi+xml', 'application/vnd.xmi+xml'), ('application/vnd.xmpie.cpkg', 'application/vnd.xmpie.cpkg'), ('application/vnd.xmpie.dpkg', 'application/vnd.xmpie.dpkg'), ('application/vnd.xmpie.plan', 'application/vnd.xmpie.plan'), ('application/vnd.xmpie.ppkg', 'application/vnd.xmpie.ppkg'), ('application/vnd.xmpie.xlim', 'application/vnd.xmpie.xlim'), ('application/vnd.yamaha.hv-dic', 'application/vnd.yamaha.hv-dic'), ('application/vnd.yamaha.hv-script', 'application/vnd.yamaha.hv-script'), ('application/vnd.yamaha.hv-voice', 'application/vnd.yamaha.hv-voice'), ('application/vnd.yamaha.openscoreformat.osfpvg+xml', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'), ('application/vnd.yamaha.openscoreformat', 'application/vnd.yamaha.openscoreformat'), ('application/vnd.yamaha.remote-setup', 'application/vnd.yamaha.remote-setup'), ('application/vnd.yamaha.smaf-audio', 'application/vnd.yamaha.smaf-audio'), ('application/vnd.yamaha.smaf-phrase', 'application/vnd.yamaha.smaf-phrase'), ('application/vnd.yamaha.through-ngn', 'application/vnd.yamaha.through-ngn'), ('application/vnd.yamaha.tunnel-udpencap', 'application/vnd.yamaha.tunnel-udpencap'), ('application/vnd.yaoweme', 'application/vnd.yaoweme'), ('application/vnd.yellowriver-custom-menu', 'application/vnd.yellowriver-custom-menu'), ('application/vnd.zul', 'application/vnd.zul'), ('application/vnd.zzazz.deck+xml', 'application/vnd.zzazz.deck+xml'), ('application/voicexml+xml', 'application/voicexml+xml'), ('application/vq-rtcpxr', 'application/vq-rtcpxr'), ('application/watcherinfo+xml', 'application/watcherinfo+xml'), ('application/whoispp-query', 'application/whoispp-query'), ('application/whoispp-response', 'application/whoispp-response'), ('application/widget', 'application/widget'), ('application/wita', 'application/wita'), ('application/wordperfect5.1', 'application/wordperfect5.1'), ('application/wsdl+xml', 'application/wsdl+xml'), ('application/wspolicy+xml', 'application/wspolicy+xml'), ('application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), ('application/x400-bp', 'application/x400-bp'), ('application/xacml+xml', 'application/xacml+xml'), ('application/xcap-att+xml', 'application/xcap-att+xml'), ('application/xcap-caps+xml', 'application/xcap-caps+xml'), ('application/xcap-diff+xml', 'application/xcap-diff+xml'), ('application/xcap-el+xml', 'application/xcap-el+xml'), ('application/xcap-error+xml', 'application/xcap-error+xml'), ('application/xcap-ns+xml', 'application/xcap-ns+xml'), ('application/xcon-conference-info-diff+xml', 'application/xcon-conference-info-diff+xml'), ('application/xcon-conference-info+xml', 'application/xcon-conference-info+xml'), ('application/xenc+xml', 'application/xenc+xml'), ('application/xhtml-voice+xml', 'application/xhtml-voice+xml'), ('application/xhtml+xml', 'application/xhtml+xml'), ('application/xml', 'application/xml'), ('application/xml-dtd', 'application/xml-dtd'), ('application/xml-external-parsed-entity', 'application/xml-external-parsed-entity'), ('application/xml-patch+xml', 'application/xml-patch+xml'), ('application/xmpp+xml', 'application/xmpp+xml'), ('application/xop+xml', 'application/xop+xml'), ('application/xslt+xml', 'application/xslt+xml'), ('application/xv+xml', 'application/xv+xml'), ('application/yang', 'application/yang'), ('application/yang-data+json', 'application/yang-data+json'), ('application/yang-data+xml', 'application/yang-data+xml'), ('application/yang-patch+json', 'application/yang-patch+json'), ('application/yang-patch+xml', 'application/yang-patch+xml'), ('application/yin+xml', 'application/yin+xml'), ('application/zip', 'application/zip'), ('application/zlib', 'application/zlib'), ('audio/1d-interleaved-parityfec', 'audio/1d-interleaved-parityfec'), ('audio/32kadpcm', 'audio/32kadpcm'), ('audio/3gpp', 'audio/3gpp'), ('audio/3gpp2', 'audio/3gpp2'), ('audio/ac3', 'audio/ac3'), ('audio/AMR', 'audio/AMR'), ('audio/AMR-WB', 'audio/AMR-WB'), ('audio/amr-wb+', 'audio/amr-wb+'), ('audio/aptx', 'audio/aptx'), ('audio/asc', 'audio/asc'), ('audio/ATRAC-ADVANCED-LOSSLESS', 'audio/ATRAC-ADVANCED-LOSSLESS'), ('audio/ATRAC-X', 'audio/ATRAC-X'), ('audio/ATRAC3', 'audio/ATRAC3'), ('audio/basic', 'audio/basic'), ('audio/BV16', 'audio/BV16'), ('audio/BV32', 'audio/BV32'), ('audio/clearmode', 'audio/clearmode'), ('audio/CN', 'audio/CN'), ('audio/DAT12', 'audio/DAT12'), ('audio/dls', 'audio/dls'), ('audio/dsr-es201108', 'audio/dsr-es201108'), ('audio/dsr-es202050', 'audio/dsr-es202050'), ('audio/dsr-es202211', 'audio/dsr-es202211'), ('audio/dsr-es202212', 'audio/dsr-es202212'), ('audio/DV', 'audio/DV'), ('audio/DVI4', 'audio/DVI4'), ('audio/eac3', 'audio/eac3'), ('audio/encaprtp', 'audio/encaprtp'), ('audio/EVRC', 'audio/EVRC'), ('audio/EVRC-QCP', 'audio/EVRC-QCP'), ('audio/EVRC0', 'audio/EVRC0'), ('audio/EVRC1', 'audio/EVRC1'), ('audio/EVRCB', 'audio/EVRCB'), ('audio/EVRCB0', 'audio/EVRCB0'), ('audio/EVRCB1', 'audio/EVRCB1'), ('audio/EVRCNW', 'audio/EVRCNW'), ('audio/EVRCNW0', 'audio/EVRCNW0'), ('audio/EVRCNW1', 'audio/EVRCNW1'), ('audio/EVRCWB', 'audio/EVRCWB'), ('audio/EVRCWB0', 'audio/EVRCWB0'), ('audio/EVRCWB1', 'audio/EVRCWB1'), ('audio/EVS', 'audio/EVS'), ('audio/example', 'audio/example'), ('audio/fwdred', 'audio/fwdred'), ('audio/G711-0', 'audio/G711-0'), ('audio/G719', 'audio/G719'), ('audio/G7221', 'audio/G7221'), ('audio/G722', 'audio/G722'), ('audio/G723', 'audio/G723'), ('audio/G726-16', 'audio/G726-16'), ('audio/G726-24', 'audio/G726-24'), ('audio/G726-32', 'audio/G726-32'), ('audio/G726-40', 'audio/G726-40'), ('audio/G728', 'audio/G728'), ('audio/G729', 'audio/G729'), ('audio/G7291', 'audio/G7291'), ('audio/G729D', 'audio/G729D'), ('audio/G729E', 'audio/G729E'), ('audio/GSM', 'audio/GSM'), ('audio/GSM-EFR', 'audio/GSM-EFR'), ('audio/GSM-HR-08', 'audio/GSM-HR-08'), ('audio/iLBC', 'audio/iLBC'), ('audio/ip-mr_v2.5', 'audio/ip-mr_v2.5'), ('audio/L8', 'audio/L8'), ('audio/L16', 'audio/L16'), ('audio/L20', 'audio/L20'), ('audio/L24', 'audio/L24'), ('audio/LPC', 'audio/LPC'), ('audio/MELP', 'audio/MELP'), ('audio/MELP600', 'audio/MELP600'), ('audio/MELP1200', 'audio/MELP1200'), ('audio/MELP2400', 'audio/MELP2400'), ('audio/mobile-xmf', 'audio/mobile-xmf'), ('audio/MPA', 'audio/MPA'), ('audio/mp4', 'audio/mp4'), ('audio/MP4A-LATM', 'audio/MP4A-LATM'), ('audio/mpa-robust', 'audio/mpa-robust'), ('audio/mpeg', 'audio/mpeg'), ('audio/mpeg4-generic', 'audio/mpeg4-generic'), ('audio/ogg', 'audio/ogg'), ('audio/opus', 'audio/opus'), ('audio/parityfec', 'audio/parityfec'), ('audio/PCMA', 'audio/PCMA'), ('audio/PCMA-WB', 'audio/PCMA-WB'), ('audio/PCMU', 'audio/PCMU'), ('audio/PCMU-WB', 'audio/PCMU-WB'), ('audio/prs.sid', 'audio/prs.sid'), ('audio/QCELP', 'audio/QCELP'), ('audio/raptorfec', 'audio/raptorfec'), ('audio/RED', 'audio/RED'), ('audio/rtp-enc-aescm128', 'audio/rtp-enc-aescm128'), ('audio/rtploopback', 'audio/rtploopback'), ('audio/rtp-midi', 'audio/rtp-midi'), ('audio/rtx', 'audio/rtx'), ('audio/SMV', 'audio/SMV'), ('audio/SMV0', 'audio/SMV0'), ('audio/SMV-QCP', 'audio/SMV-QCP'), ('audio/sp-midi', 'audio/sp-midi'), ('audio/speex', 'audio/speex'), ('audio/t140c', 'audio/t140c'), ('audio/t38', 'audio/t38'), ('audio/telephone-event', 'audio/telephone-event'), ('audio/tone', 'audio/tone'), ('audio/UEMCLIP', 'audio/UEMCLIP'), ('audio/ulpfec', 'audio/ulpfec'), ('audio/VDVI', 'audio/VDVI'), ('audio/VMR-WB', 'audio/VMR-WB'), ('audio/vnd.3gpp.iufp', 'audio/vnd.3gpp.iufp'), ('audio/vnd.4SB', 'audio/vnd.4SB'), ('audio/vnd.audiokoz', 'audio/vnd.audiokoz'), ('audio/vnd.CELP', 'audio/vnd.CELP'), ('audio/vnd.cisco.nse', 'audio/vnd.cisco.nse'), ('audio/vnd.cmles.radio-events', 'audio/vnd.cmles.radio-events'), ('audio/vnd.cns.anp1', 'audio/vnd.cns.anp1'), ('audio/vnd.cns.inf1', 'audio/vnd.cns.inf1'), ('audio/vnd.dece.audio', 'audio/vnd.dece.audio'), ('audio/vnd.digital-winds', 'audio/vnd.digital-winds'), ('audio/vnd.dlna.adts', 'audio/vnd.dlna.adts'), ('audio/vnd.dolby.heaac.1', 'audio/vnd.dolby.heaac.1'), ('audio/vnd.dolby.heaac.2', 'audio/vnd.dolby.heaac.2'), ('audio/vnd.dolby.mlp', 'audio/vnd.dolby.mlp'), ('audio/vnd.dolby.mps', 'audio/vnd.dolby.mps'), ('audio/vnd.dolby.pl2', 'audio/vnd.dolby.pl2'), ('audio/vnd.dolby.pl2x', 'audio/vnd.dolby.pl2x'), ('audio/vnd.dolby.pl2z', 'audio/vnd.dolby.pl2z'), ('audio/vnd.dolby.pulse.1', 'audio/vnd.dolby.pulse.1'), ('audio/vnd.dra', 'audio/vnd.dra'), ('audio/vnd.dts', 'audio/vnd.dts'), ('audio/vnd.dts.hd', 'audio/vnd.dts.hd'), ('audio/vnd.dvb.file', 'audio/vnd.dvb.file'), ('audio/vnd.everad.plj', 'audio/vnd.everad.plj'), ('audio/vnd.hns.audio', 'audio/vnd.hns.audio'), ('audio/vnd.lucent.voice', 'audio/vnd.lucent.voice'), ('audio/vnd.ms-playready.media.pya', 'audio/vnd.ms-playready.media.pya'), ('audio/vnd.nokia.mobile-xmf', 'audio/vnd.nokia.mobile-xmf'), ('audio/vnd.nortel.vbk', 'audio/vnd.nortel.vbk'), ('audio/vnd.nuera.ecelp4800', 'audio/vnd.nuera.ecelp4800'), ('audio/vnd.nuera.ecelp7470', 'audio/vnd.nuera.ecelp7470'), ('audio/vnd.nuera.ecelp9600', 'audio/vnd.nuera.ecelp9600'), ('audio/vnd.octel.sbc', 'audio/vnd.octel.sbc'), ('audio/vnd.qcelp', 'audio/vnd.qcelp'), ('audio/vnd.rhetorex.32kadpcm', 'audio/vnd.rhetorex.32kadpcm'), ('audio/vnd.rip', 'audio/vnd.rip'), ('audio/vnd.sealedmedia.softseal.mpeg', 'audio/vnd.sealedmedia.softseal.mpeg'), ('audio/vnd.vmx.cvsd', 'audio/vnd.vmx.cvsd'), ('audio/vorbis', 'audio/vorbis'), ('audio/vorbis-config', 'audio/vorbis-config'), ('font/collection', 'font/collection'), ('font/otf', 'font/otf'), ('font/sfnt', 'font/sfnt'), ('font/ttf', 'font/ttf'), ('font/woff', 'font/woff'), ('font/woff2', 'font/woff2'), ('image/bmp', 'image/bmp'), ('image/cgm', 'image/cgm'), ('image/dicom-rle', 'image/dicom-rle'), ('image/emf', 'image/emf'), ('image/example', 'image/example'), ('image/fits', 'image/fits'), ('image/g3fax', 'image/g3fax'), ('image/gif', 'image/gif'), ('image/ief', 'image/ief'), ('image/jls', 'image/jls'), ('image/jp2', 'image/jp2'), ('image/jpeg', 'image/jpeg'), ('image/jpm', 'image/jpm'), ('image/jpx', 'image/jpx'), ('image/ktx', 'image/ktx'), ('image/naplps', 'image/naplps'), ('image/png', 'image/png'), ('image/prs.btif', 'image/prs.btif'), ('image/prs.pti', 'image/prs.pti'), ('image/pwg-raster', 'image/pwg-raster'), ('image/svg+xml', 'image/svg+xml'), ('image/t38', 'image/t38'), ('image/tiff', 'image/tiff'), ('image/tiff-fx', 'image/tiff-fx'), ('image/vnd.adobe.photoshop', 'image/vnd.adobe.photoshop'), ('image/vnd.airzip.accelerator.azv', 'image/vnd.airzip.accelerator.azv'), ('image/vnd.cns.inf2', 'image/vnd.cns.inf2'), ('image/vnd.dece.graphic', 'image/vnd.dece.graphic'), ('image/vnd.djvu', 'image/vnd.djvu'), ('image/vnd.dwg', 'image/vnd.dwg'), ('image/vnd.dxf', 'image/vnd.dxf'), ('image/vnd.dvb.subtitle', 'image/vnd.dvb.subtitle'), ('image/vnd.fastbidsheet', 'image/vnd.fastbidsheet'), ('image/vnd.fpx', 'image/vnd.fpx'), ('image/vnd.fst', 'image/vnd.fst'), ('image/vnd.fujixerox.edmics-mmr', 'image/vnd.fujixerox.edmics-mmr'), ('image/vnd.fujixerox.edmics-rlc', 'image/vnd.fujixerox.edmics-rlc'), ('image/vnd.globalgraphics.pgb', 'image/vnd.globalgraphics.pgb'), ('image/vnd.microsoft.icon', 'image/vnd.microsoft.icon'), ('image/vnd.mix', 'image/vnd.mix'), ('image/vnd.ms-modi', 'image/vnd.ms-modi'), ('image/vnd.mozilla.apng', 'image/vnd.mozilla.apng'), ('image/vnd.net-fpx', 'image/vnd.net-fpx'), ('image/vnd.radiance', 'image/vnd.radiance'), ('image/vnd.sealed.png', 'image/vnd.sealed.png'), ('image/vnd.sealedmedia.softseal.gif', 'image/vnd.sealedmedia.softseal.gif'), ('image/vnd.sealedmedia.softseal.jpg', 'image/vnd.sealedmedia.softseal.jpg'), ('image/vnd.svf', 'image/vnd.svf'), ('image/vnd.tencent.tap', 'image/vnd.tencent.tap'), ('image/vnd.valve.source.texture', 'image/vnd.valve.source.texture'), ('image/vnd.wap.wbmp', 'image/vnd.wap.wbmp'), ('image/vnd.xiff', 'image/vnd.xiff'), ('image/vnd.zbrush.pcx', 'image/vnd.zbrush.pcx'), ('image/wmf', 'image/wmf'), ('image/x-emf', 'image/x-emf'), ('image/x-wmf', 'image/x-wmf'), ('message/CPIM', 'message/CPIM'), ('message/delivery-status', 'message/delivery-status'), ('message/disposition-notification', 'message/disposition-notification'), ('message/example', 'message/example'), ('message/external-body', 'message/external-body'), ('message/feedback-report', 'message/feedback-report'), ('message/global', 'message/global'), ('message/global-delivery-status', 'message/global-delivery-status'), ('message/global-disposition-notification', 'message/global-disposition-notification'), ('message/global-headers', 'message/global-headers'), ('message/http', 'message/http'), ('message/imdn+xml', 'message/imdn+xml'), ('message/news', 'message/news'), ('message/partial', 'message/partial'), ('message/rfc822', 'message/rfc822'), ('message/s-http', 'message/s-http'), ('message/sip', 'message/sip'), ('message/sipfrag', 'message/sipfrag'), ('message/tracking-status', 'message/tracking-status'), ('message/vnd.si.simp', 'message/vnd.si.simp'), ('message/vnd.wfa.wsc', 'message/vnd.wfa.wsc'), ('model/3mf', 'model/3mf'), ('model/example', 'model/example'), ('model/gltf+json', 'model/gltf+json'), ('model/iges', 'model/iges'), ('model/mesh', 'model/mesh'), ('model/vnd.collada+xml', 'model/vnd.collada+xml'), ('model/vnd.dwf', 'model/vnd.dwf'), ('model/vnd.flatland.3dml', 'model/vnd.flatland.3dml'), ('model/vnd.gdl', 'model/vnd.gdl'), ('model/vnd.gs-gdl', 'model/vnd.gs-gdl'), ('model/vnd.gtw', 'model/vnd.gtw'), ('model/vnd.moml+xml', 'model/vnd.moml+xml'), ('model/vnd.mts', 'model/vnd.mts'), ('model/vnd.opengex', 'model/vnd.opengex'), ('model/vnd.parasolid.transmit.binary', 'model/vnd.parasolid.transmit.binary'), ('model/vnd.parasolid.transmit.text', 'model/vnd.parasolid.transmit.text'), ('model/vnd.rosette.annotated-data-model', 'model/vnd.rosette.annotated-data-model'), ('model/vnd.valve.source.compiled-map', 'model/vnd.valve.source.compiled-map'), ('model/vnd.vtu', 'model/vnd.vtu'), ('model/vrml', 'model/vrml'), ('model/x3d-vrml', 'model/x3d-vrml'), ('model/x3d+fastinfoset', 'model/x3d+fastinfoset'), ('model/x3d+xml', 'model/x3d+xml'), ('multipart/alternative', 'multipart/alternative'), ('multipart/appledouble', 'multipart/appledouble'), ('multipart/byteranges', 'multipart/byteranges'), ('multipart/digest', 'multipart/digest'), ('multipart/encrypted', 'multipart/encrypted'), ('multipart/example', 'multipart/example'), ('multipart/form-data', 'multipart/form-data'), ('multipart/header-set', 'multipart/header-set'), ('multipart/mixed', 'multipart/mixed'), ('multipart/parallel', 'multipart/parallel'), ('multipart/related', 'multipart/related'), ('multipart/report', 'multipart/report'), ('multipart/signed', 'multipart/signed'), ('multipart/vnd.bint.med-plus', 'multipart/vnd.bint.med-plus'), ('multipart/voice-message', 'multipart/voice-message'), ('multipart/x-mixed-replace', 'multipart/x-mixed-replace'), ('text/1d-interleaved-parityfec', 'text/1d-interleaved-parityfec'), ('text/cache-manifest', 'text/cache-manifest'), ('text/calendar', 'text/calendar'), ('text/css', 'text/css'), ('text/csv', 'text/csv'), ('text/csv-schema', 'text/csv-schema'), ('text/directory', 'text/directory'), ('text/dns', 'text/dns'), ('text/ecmascript', 'text/ecmascript'), ('text/encaprtp', 'text/encaprtp'), ('text/enriched', 'text/enriched'), ('text/example', 'text/example'), ('text/fwdred', 'text/fwdred'), ('text/grammar-ref-list', 'text/grammar-ref-list'), ('text/html', 'text/html'), ('text/javascript', 'text/javascript'), ('text/jcr-cnd', 'text/jcr-cnd'), ('text/markdown', 'text/markdown'), ('text/mizar', 'text/mizar'), ('text/n3', 'text/n3'), ('text/parameters', 'text/parameters'), ('text/parityfec', 'text/parityfec'), ('text/plain', 'text/plain'), ('text/provenance-notation', 'text/provenance-notation'), ('text/prs.fallenstein.rst', 'text/prs.fallenstein.rst'), ('text/prs.lines.tag', 'text/prs.lines.tag'), ('text/prs.prop.logic', 'text/prs.prop.logic'), ('text/raptorfec', 'text/raptorfec'), ('text/RED', 'text/RED'), ('text/rfc822-headers', 'text/rfc822-headers'), ('text/richtext', 'text/richtext'), ('text/rtf', 'text/rtf'), ('text/rtp-enc-aescm128', 'text/rtp-enc-aescm128'), ('text/rtploopback', 'text/rtploopback'), ('text/rtx', 'text/rtx'), ('text/sgml', 'text/sgml'), ('text/strings', 'text/strings'), ('text/t140', 'text/t140'), ('text/tab-separated-values', 'text/tab-separated-values'), ('text/troff', 'text/troff'), ('text/turtle', 'text/turtle'), ('text/ulpfec', 'text/ulpfec'), ('text/uri-list', 'text/uri-list'), ('text/vcard', 'text/vcard'), ('text/vnd.a', 'text/vnd.a'), ('text/vnd.abc', 'text/vnd.abc'), ('text/vnd.ascii-art', 'text/vnd.ascii-art'), ('text/vnd.curl', 'text/vnd.curl'), ('text/vnd.debian.copyright', 'text/vnd.debian.copyright'), ('text/vnd.DMClientScript', 'text/vnd.DMClientScript'), ('text/vnd.dvb.subtitle', 'text/vnd.dvb.subtitle'), ('text/vnd.esmertec.theme-descriptor', 'text/vnd.esmertec.theme-descriptor'), ('text/vnd.fly', 'text/vnd.fly'), ('text/vnd.fmi.flexstor', 'text/vnd.fmi.flexstor'), ('text/vnd.graphviz', 'text/vnd.graphviz'), ('text/vnd.in3d.3dml', 'text/vnd.in3d.3dml'), ('text/vnd.in3d.spot', 'text/vnd.in3d.spot'), ('text/vnd.IPTC.NewsML', 'text/vnd.IPTC.NewsML'), ('text/vnd.IPTC.NITF', 'text/vnd.IPTC.NITF'), ('text/vnd.latex-z', 'text/vnd.latex-z'), ('text/vnd.motorola.reflex', 'text/vnd.motorola.reflex'), ('text/vnd.ms-mediapackage', 'text/vnd.ms-mediapackage'), ('text/vnd.net2phone.commcenter.command', 'text/vnd.net2phone.commcenter.command'), ('text/vnd.radisys.msml-basic-layout', 'text/vnd.radisys.msml-basic-layout'), ('text/vnd.si.uricatalogue', 'text/vnd.si.uricatalogue'), ('text/vnd.sun.j2me.app-descriptor', 'text/vnd.sun.j2me.app-descriptor'), ('text/vnd.trolltech.linguist', 'text/vnd.trolltech.linguist'), ('text/vnd.wap.si', 'text/vnd.wap.si'), ('text/vnd.wap.sl', 'text/vnd.wap.sl'), ('text/vnd.wap.wml', 'text/vnd.wap.wml'), ('text/vnd.wap.wmlscript', 'text/vnd.wap.wmlscript'), ('text/xml', 'text/xml'), ('text/xml-external-parsed-entity', 'text/xml-external-parsed-entity'), ('video/1d-interleaved-parityfec', 'video/1d-interleaved-parityfec'), ('video/3gpp', 'video/3gpp'), ('video/3gpp2', 'video/3gpp2'), ('video/3gpp-tt', 'video/3gpp-tt'), ('video/BMPEG', 'video/BMPEG'), ('video/BT656', 'video/BT656'), ('video/CelB', 'video/CelB'), ('video/DV', 'video/DV'), ('video/encaprtp', 'video/encaprtp'), ('video/example', 'video/example'), ('video/H261', 'video/H261'), ('video/H263', 'video/H263'), ('video/H263-1998', 'video/H263-1998'), ('video/H263-2000', 'video/H263-2000'), ('video/H264', 'video/H264'), ('video/H264-RCDO', 'video/H264-RCDO'), ('video/H264-SVC', 'video/H264-SVC'), ('video/H265', 'video/H265'), ('video/iso.segment', 'video/iso.segment'), ('video/JPEG', 'video/JPEG'), ('video/jpeg2000', 'video/jpeg2000'), ('video/mj2', 'video/mj2'), ('video/MP1S', 'video/MP1S'), ('video/MP2P', 'video/MP2P'), ('video/MP2T', 'video/MP2T'), ('video/mp4', 'video/mp4'), ('video/MP4V-ES', 'video/MP4V-ES'), ('video/MPV', 'video/MPV'), ('video/mpeg', 'video/mpeg'), ('video/mpeg4-generic', 'video/mpeg4-generic'), ('video/nv', 'video/nv'), ('video/ogg', 'video/ogg'), ('video/parityfec', 'video/parityfec'), ('video/pointer', 'video/pointer'), ('video/quicktime', 'video/quicktime'), ('video/raptorfec', 'video/raptorfec'), ('video/raw', 'video/raw'), ('video/rtp-enc-aescm128', 'video/rtp-enc-aescm128'), ('video/rtploopback', 'video/rtploopback'), ('video/rtx', 'video/rtx'), ('video/SMPTE292M', 'video/SMPTE292M'), ('video/ulpfec', 'video/ulpfec'), ('video/vc1', 'video/vc1'), ('video/vnd.CCTV', 'video/vnd.CCTV'), ('video/vnd.dece.hd', 'video/vnd.dece.hd'), ('video/vnd.dece.mobile', 'video/vnd.dece.mobile'), ('video/vnd.dece.mp4', 'video/vnd.dece.mp4'), ('video/vnd.dece.pd', 'video/vnd.dece.pd'), ('video/vnd.dece.sd', 'video/vnd.dece.sd'), ('video/vnd.dece.video', 'video/vnd.dece.video'), ('video/vnd.directv.mpeg', 'video/vnd.directv.mpeg'), ('video/vnd.directv.mpeg-tts', 'video/vnd.directv.mpeg-tts'), ('video/vnd.dlna.mpeg-tts', 'video/vnd.dlna.mpeg-tts'), ('video/vnd.dvb.file', 'video/vnd.dvb.file'), ('video/vnd.fvt', 'video/vnd.fvt'), ('video/vnd.hns.video', 'video/vnd.hns.video'), ('video/vnd.iptvforum.1dparityfec-1010', 'video/vnd.iptvforum.1dparityfec-1010'), ('video/vnd.iptvforum.1dparityfec-2005', 'video/vnd.iptvforum.1dparityfec-2005'), ('video/vnd.iptvforum.2dparityfec-1010', 'video/vnd.iptvforum.2dparityfec-1010'), ('video/vnd.iptvforum.2dparityfec-2005', 'video/vnd.iptvforum.2dparityfec-2005'), ('video/vnd.iptvforum.ttsavc', 'video/vnd.iptvforum.ttsavc'), ('video/vnd.iptvforum.ttsmpeg2', 'video/vnd.iptvforum.ttsmpeg2'), ('video/vnd.motorola.video', 'video/vnd.motorola.video'), ('video/vnd.motorola.videop', 'video/vnd.motorola.videop'), ('video/vnd.mpegurl', 'video/vnd.mpegurl'), ('video/vnd.ms-playready.media.pyv', 'video/vnd.ms-playready.media.pyv'), ('video/vnd.nokia.interleaved-multimedia', 'video/vnd.nokia.interleaved-multimedia'), ('video/vnd.nokia.videovoip', 'video/vnd.nokia.videovoip'), ('video/vnd.objectvideo', 'video/vnd.objectvideo'), ('video/vnd.radgamettools.bink', 'video/vnd.radgamettools.bink'), ('video/vnd.radgamettools.smacker', 'video/vnd.radgamettools.smacker'), ('video/vnd.sealed.mpeg1', 'video/vnd.sealed.mpeg1'), ('video/vnd.sealed.mpeg4', 'video/vnd.sealed.mpeg4'), ('video/vnd.sealed.swf', 'video/vnd.sealed.swf'), ('video/vnd.sealedmedia.softseal.mov', 'video/vnd.sealedmedia.softseal.mov'), ('video/vnd.uvvu.mp4', 'video/vnd.uvvu.mp4'), ('video/vnd.vivo', 'video/vnd.vivo'), ('video/VP8', 'video/VP8')])),
                ('title', akvo.rsr.fields.ValidXMLCharField(help_text='Enter the title of your document.', max_length=100, verbose_name='document title', blank=True)),
                ('title_language', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language of the document title.', max_length=2, verbose_name='title language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')])),
                ('language', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language that the document is written in.', max_length=2, verbose_name='document language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')])),
                ('document_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for the production or publishing date of the relevant document to identify the specific document version.', null=True, verbose_name='document date', blank=True)),
                ('organisation', models.ForeignKey(related_name='documents', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'organisation document',
                'verbose_name_plural': 'organisation documents',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationDocumentCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('category', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The description of the type of content contained within the document.', max_length=3, verbose_name='document category', choices=[('A01', 'A01 - Pre- and post-project impact appraisal'), ('A02', 'A02 - Objectives / Purpose of activity'), ('A03', 'A03 - Intended ultimate beneficiaries'), ('A04', 'A04 - Conditions'), ('A05', 'A05 - Budget'), ('A06', 'A06 - Summary information about contract'), ('A07', 'A07 - Review of project performance and evaluation'), ('A08', 'A08 - Results, outcomes and outputs'), ('A09', 'A09 - Memorandum of understanding (If agreed by all parties)'), ('A10', 'A10 - Tender'), ('A11', 'A11 - Contract'), ('A12', 'A12 - Activity web page'), ('B01', 'B01 - Annual report'), ('B02', 'B02 - Institutional Strategy paper'), ('B03', 'B03 - Country strategy paper'), ('B04', 'B04 - Aid Allocation Policy'), ('B05', 'B05 - Procurement Policy and Procedure'), ('B06', 'B06 - Institutional Audit Report'), ('B07', 'B07 - Country Audit Report'), ('B08', 'B08 - Exclusions Policy'), ('B09', 'B09 - Institutional Evaluation Report'), ('B10', 'B10 - Country Evaluation Report'), ('B11', 'B11 - Sector strategy'), ('B12', 'B12 - Thematic strategy'), ('B13', 'B13 - Country-level Memorandum of Understanding'), ('B14', 'B14 - Evaluations policy'), ('B15', 'B15 - General Terms and Conditions'), ('B16', 'B16 - Organisation web page'), ('B17', 'B17 - Country/Region web page'), ('B18', 'B18 - Sector web page')])),
                ('document', models.ForeignKey(related_name='categories', verbose_name='document', to='rsr.OrganisationDocument')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'document category',
                'verbose_name_plural': 'document categories',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationDocumentCountry',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This identifies the country which concerns the organisation document.', max_length=2, verbose_name='recipient country', choices=[('AF', 'Afghanistan'), ('AX', '\xc5land Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas (The)'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State Of)'), ('BQ', 'Bonaire, Saint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory (The)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands (The)'), ('CF', 'Central African Republic (The)'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands (The)'), ('CO', 'Colombia'), ('KM', 'Comoros (The)'), ('CG', 'Congo (The)'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands (The)'), ('CR', 'Costa Rica'), ('CI', "C\xf4te D'ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic (The)'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic (The)'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (The) [malvinas]'), ('FO', 'Faroe Islands (The)'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories (The)'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and Mcdonald Islands'), ('VA', 'Holy See (The)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (Islamic Republic Of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (Democratic People's Republic Of)"), ('KR', 'Korea (Republic Of)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic (The)"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (The Former Yugoslav Republic Of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands (The)'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States Of)'), ('MD', 'Moldova (Republic Of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands (The)'), ('AN', 'Netherland Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger (The)'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands (The)'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines (The)'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation (The)'), ('RW', 'Rwanda'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French Part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch Part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan (The)'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands (The)'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates (The)'), ('GB', 'United Kingdom of Great Britain and Northern Ireland (The)'), ('US', 'United States of America (The)'), ('UM', 'United States Minor Outlying Islands (The)'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic Of)'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.s.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a short description.', max_length=100, verbose_name='description', blank=True)),
                ('document', models.ForeignKey(related_name='countries', verbose_name='document', to='rsr.OrganisationDocument')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'document country',
                'verbose_name_plural': 'document countries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationExpenseLine',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of this specific line. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text="An internal reference that describes the line in the reporting organisation's own system", max_length=50, verbose_name='reference', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='The description for this line.', max_length=1000, verbose_name='description', blank=True)),
            ],
            options={
                'verbose_name': 'expense line',
                'verbose_name_plural': 'expense lines',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationIndicatorLabel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('label', akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='label')),
                ('organisation', models.ForeignKey(related_name='indicator_labels', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
                'ordering': ('organisation', 'label'),
                'verbose_name': 'organisation indicator label',
                'verbose_name_plural': 'organisation indicator labels',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('latitude', akvo.rsr.fields.LatitudeField(default=None, blank=True, help_text='Use a period to denote decimals.', null=True, verbose_name='latitude', db_index=True)),
                ('longitude', akvo.rsr.fields.LongitudeField(default=None, blank=True, help_text='Use a period to denote decimals.', null=True, verbose_name='longitude', db_index=True)),
                ('city', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='city', blank=True)),
                ('state', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='state', blank=True)),
                ('address_1', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 1', blank=True)),
                ('address_2', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 2', blank=True)),
                ('postcode', akvo.rsr.fields.ValidXMLCharField(max_length=10, verbose_name='postal code', blank=True)),
                ('iati_country', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The country in which the organisation is located.', max_length=2, verbose_name='country', choices=[('AF', 'Afghanistan'), ('AX', '\xc5land Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas (The)'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State Of)'), ('BQ', 'Bonaire, Saint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory (The)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands (The)'), ('CF', 'Central African Republic (The)'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands (The)'), ('CO', 'Colombia'), ('KM', 'Comoros (The)'), ('CG', 'Congo (The)'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands (The)'), ('CR', 'Costa Rica'), ('CI', "C\xf4te D'ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic (The)'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic (The)'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (The) [malvinas]'), ('FO', 'Faroe Islands (The)'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories (The)'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and Mcdonald Islands'), ('VA', 'Holy See (The)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (Islamic Republic Of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (Democratic People's Republic Of)"), ('KR', 'Korea (Republic Of)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic (The)"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (The Former Yugoslav Republic Of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands (The)'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States Of)'), ('MD', 'Moldova (Republic Of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands (The)'), ('AN', 'Netherland Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger (The)'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands (The)'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines (The)'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation (The)'), ('RW', 'Rwanda'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French Part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch Part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan (The)'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands (The)'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates (The)'), ('GB', 'United Kingdom of Great Britain and Northern Ireland (The)'), ('US', 'United States of America (The)'), ('UM', 'United States Minor Outlying Islands (The)'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic Of)'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.s.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('country', models.ForeignKey(verbose_name='country', blank=True, to='rsr.Country', null=True)),
                ('location_target', models.ForeignKey(related_name='locations', to='rsr.Organisation')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationRecipientOrgBudget',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('period_start', models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period end', blank=True)),
                ('status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The status explains whether the budget being reported is indicative or has been formally committed.', max_length=1, verbose_name='status', choices=[('1', '1 - Indicative'), ('2', '2 - Committed')])),
                ('organisation', models.ForeignKey(related_name='recipient_org_budgets', verbose_name='organisation', to='rsr.Organisation')),
                ('recipient_organisation', models.ForeignKey(related_name='receiver_org_budgets', verbose_name='recipient organisation', to='rsr.Organisation')),
            ],
            options={
                'verbose_name': 'recipient organisation budget',
                'verbose_name_plural': 'recipient organisation budgets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationRecipientOrgBudgetLine',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of this specific line. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text="An internal reference that describes the line in the reporting organisation's own system", max_length=50, verbose_name='reference', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='The description for this line.', max_length=1000, verbose_name='description', blank=True)),
                ('budget', models.ForeignKey(related_name='budget_lines', verbose_name='organisation budget', to='rsr.OrganisationRecipientOrgBudget')),
            ],
            options={
                'verbose_name': 'recipient organisation budget line',
                'verbose_name_plural': 'recipient organisation budget lines',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationRegionBudget',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('period_start', models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period end', blank=True)),
                ('status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The status explains whether the budget being reported is indicative or has been formally committed.', max_length=1, verbose_name='status', choices=[('1', '1 - Indicative'), ('2', '2 - Committed')])),
                ('region', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This identifies the region which concerns the organisation budget.', max_length=25, verbose_name='recipient region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North & Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South & Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')])),
                ('region_vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text="The vocabulary from which the region code is drawn. If it is not present 1 \u2013 'OECD DAC' is assumed.", max_length=2, verbose_name='vocabulary', choices=[('1', '1 - OECD DAC'), ('2', '2 - UN'), ('99', '99 - Reporting Organisation')])),
                ('region_vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='vocabulary URI', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a short description.', max_length=100, verbose_name='description', blank=True)),
                ('organisation', models.ForeignKey(related_name='recipient_region_budgets', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
                'verbose_name': 'organisation recipient region budget',
                'verbose_name_plural': 'organisation recipient region budgets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationRegionBudgetLine',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of this specific line. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text="An internal reference that describes the line in the reporting organisation's own system", max_length=50, verbose_name='reference', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='The description for this line.', max_length=1000, verbose_name='description', blank=True)),
                ('budget', models.ForeignKey(related_name='budget_lines', verbose_name='organisation budget', to='rsr.OrganisationRegionBudget')),
            ],
            options={
                'verbose_name': 'region budget line',
                'verbose_name_plural': 'region budget lines',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationTotalBudget',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('period_start', models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period end', blank=True)),
                ('status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The status explains whether the budget being reported is indicative or has been formally committed.', max_length=1, verbose_name='status', choices=[('1', '1 - Indicative'), ('2', '2 - Committed')])),
                ('organisation', models.ForeignKey(related_name='total_budgets', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
                'verbose_name': 'organisation total budget',
                'verbose_name_plural': 'organisation total budgets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationTotalBudgetLine',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of this specific line. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text="An internal reference that describes the line in the reporting organisation's own system", max_length=50, verbose_name='reference', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='The description for this line.', max_length=1000, verbose_name='description', blank=True)),
                ('budget', models.ForeignKey(related_name='budget_lines', verbose_name='organisation budget', to='rsr.OrganisationTotalBudget')),
            ],
            options={
                'verbose_name': 'total budget line',
                'verbose_name_plural': 'total budget lines',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrganisationTotalExpenditure',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=20, blank=True, help_text='Enter the amount of budget that is set aside for this specific budget. Use a period to denote decimals.', null=True, verbose_name='value')),
                ('value_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for determining the exchange rate for currency conversions.', null=True, verbose_name='value date', blank=True)),
                ('period_start', models.DateField(help_text='Enter the start date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the budget period.', null=True, verbose_name='period end', blank=True)),
                ('organisation', models.ForeignKey(related_name='total_expenditures', verbose_name='organisation', to='rsr.Organisation')),
            ],
            options={
                'verbose_name': 'organisation total expenditure',
                'verbose_name_plural': 'organisation total expenditures',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Partnership',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('iati_organisation_role', models.PositiveSmallIntegerField(choices=[(1, 'Funding partner'), (2, 'Accountable partner'), (3, 'Extending partner'), (4, 'Implementing partner'), (100, 'Sponsor partner'), (101, 'Reporting organisation')], blank=True, help_text='Select the role of the organisation within the project:<br/>- Funding organisation: a government or organisation that provides funds to the project<br/>- Implementing organisation: an organisation involved in carrying out the activity or intervention<br/>- Accountable organisation: an organisation responsible for oversight of the project and its outcomes<br/>- Extending organisation: an organisation that manages the budget and direction of a project on behalf of the funding organisation<br/>- Reporting organisation: an organisation that will report this project in an IATI file', null=True, verbose_name='organisation role', db_index=True)),
                ('is_secondary_reporter', models.NullBooleanField(help_text='This indicates whether the reporting organisation is a secondary publisher: publishing data for which it is not directly responsible.', verbose_name='secondary reporter')),
                ('funding_amount', models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='It\u2019s only possible to indicate a funding amount for funding partners. Use a period to denote decimals.', null=True, verbose_name='funding amount', db_index=True)),
                ('partner_type_extra', akvo.rsr.fields.ValidXMLCharField(choices=[('alliance', 'Alliance'), ('knowledge', 'Knowledge'), ('network', 'Network')], max_length=30, blank=True, help_text='RSR specific partner type.', null=True, verbose_name='partner type extra')),
                ('iati_activity_id', akvo.rsr.fields.ValidXMLCharField(max_length=100, blank=True, help_text='A valid activity identifier published by the participating organisation which points to the activity that it has published to IATI that describes its role in this activity.', null=True, verbose_name='IATI activity ID', db_index=True)),
                ('internal_id', akvo.rsr.fields.ValidXMLCharField(max_length=75, blank=True, help_text='This field can be used to indicate an internal identifier that is used by the organisation for this project. (75 characters)', null=True, verbose_name='Internal ID', db_index=True)),
                ('iati_url', models.URLField(help_text='Please enter the URL for where the IATI Activity Id Funding details are published. For projects directly or indirectly funded by the Dutch Government, this should be the OpenAid.nl page. For other projects, an alternative URL can be used.', blank=True)),
                ('related_activity_id', akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='related IATI activity ID', blank=True)),
                ('organisation', models.ForeignKey(related_name='partnerships', blank=True, to='rsr.Organisation', help_text='Select an organisation that is taking an active role in the project.', null=True, verbose_name='organisation')),
            ],
            options={
                'ordering': ['iati_organisation_role'],
                'verbose_name': 'project partner',
                'verbose_name_plural': 'project partners',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PartnerSite',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('notes', akvo.rsr.fields.ValidXMLTextField(default=b'', verbose_name='Akvo page notes', blank=True)),
                ('hostname', models.CharField(help_text='<p>Your hostname is used in the default web address of your Akvo page. The web address created from  the hostname <em>myorganisation</em> would be <em>http://myorganisation.akvoapp.org/</em>.</p>', unique=True, max_length=50, verbose_name='hostname', validators=[akvo.rsr.validators.hostname_validator])),
                ('cname', akvo.rsr.fields.NullCharField(null=True, max_length=100, blank=True, help_text='<p>Enter a custom domain name for accessing the Akvo page, for example <i>projects.mydomain.org</i>. Optional. Requires additional DNS setup.</p>', unique=True, verbose_name='CNAME')),
                ('redirect_cname', models.BooleanField(default=False, help_text="Indicate if we should redirect to the Hostname when the request is made to the CNAME. This is for sites that don't yet have a valid TLS certificate for the CNAME.")),
                ('custom_return_url', models.URLField(help_text='<p>Enter the full URL (including http://) for the page to which users should be returned when leaving the Akvo page.</p>', verbose_name='Return URL', blank=True)),
                ('custom_return_url_text', akvo.rsr.fields.ValidXMLCharField(default=b'', help_text='<p>Enter a text for the back button and return URL. Leave empty to display "Back to <em>myorganisation</em>".</p>', max_length=50, verbose_name='Return URL text', blank=True)),
                ('piwik_id', models.PositiveIntegerField(verbose_name='Piwik analytics ID')),
                ('custom_css', models.FileField(upload_to=akvo.rsr.models.partner_site.custom_css_path, verbose_name='stylesheet', blank=True)),
                ('custom_logo', models.FileField(help_text='<p>Upload a logo file for the logo at the top of the Akvo page. By default logo of the organisation belonging to the Akvo Page will be displayed.</p>', upload_to=akvo.rsr.models.partner_site.custom_logo_path, verbose_name='organisation banner logo', blank=True)),
                ('custom_favicon', models.FileField(help_text="<p>A favicon (.ico file) is the 16x16 pixel image shown inside the browser's location bar, on tabs and in the bookmark menu.</p>", upload_to=akvo.rsr.models.partner_site.custom_favicon_path, verbose_name='favicon', blank=True)),
                ('show_keyword_logos', models.BooleanField(default=False, verbose_name='Show keyword logos on project pages')),
                ('about_box', akvo.rsr.fields.ValidXMLTextField(help_text='Enter HTML that will make up the top left box of the home page. (500 characters)<p>    Any text added should be wrapped in 2 &lt;div&gt; tags, an outer one specifying     position and width of the text, and an inner for formatting of the text .</p><p>    The Outer &lt;div&gt; tag can use the classes <code>quarter, half,     three_quarters and full</code> to specify the    width of the text. It can use the classes <code>bottom</code> and     <code>right</code> to specify a position other than top left.</p><p>    The Inner &lt;div&gt; tag can use the class <code>text_bg</code> to create a     semi-transparent text background if a background image will be uploaded.     Any other inline styles can also be used within the inner &lt;div&gt;. The     tags &lt;h1&gt;, &lt;h3&gt;, &lt;h5&gt; and &lt;a&gt; are blue, while     &lt;p&gt; tags are black by default. Use the classes <code>first</code> and     <code>last</code> with &lt;p&gt; tags to reduce the margins above or below     respectively.</p><p>    Add additional styling inline, or upload a .css stylesheet in the Stylesheet     setting above. <em>Tip:</em> When using a .css file, use the #about_box ID     selector to apply a style only to the About box.</p>', max_length=500, verbose_name='about box text', blank=True)),
                ('about_image', models.ImageField(help_text='<p>The optional background image for the About box <em>must</em> be 470 pixels wide and 250 pixels tall.</p>', upload_to=akvo.rsr.models.partner_site.about_image_path, verbose_name='about box image', blank=True)),
                ('enabled', models.BooleanField(default=True, verbose_name='enabled')),
                ('default_language', akvo.rsr.fields.ValidXMLCharField(default=b'en', max_length=5, verbose_name='Site UI default language', choices=[(b'en', b'English'), (b'es', b'Spanish'), (b'fr', b'French')])),
                ('ui_translation', models.BooleanField(default=False, verbose_name='Translate user interface')),
                ('google_translation', models.BooleanField(default=False, verbose_name='Google translation widget')),
                ('facebook_button', models.BooleanField(default=False, verbose_name='Facebook share button')),
                ('twitter_button', models.BooleanField(default=False, verbose_name='Twitter share button')),
                ('facebook_app_id', akvo.rsr.fields.ValidXMLCharField(help_text='<p>Your FaceBook app id is used when sharing pages from your partner site. It can be obtained by creating a Facebook app, which will let you monitor when your pages are referenced. Follow the instructions <a href="http://help.yahoo.com/l/us/yahoo/smallbusiness/store/edit/social/social-06.html">here</a>', max_length=40, null=True, verbose_name='Facebook App Id', blank=True)),
                ('partner_projects', models.BooleanField(default=True, help_text='Uncheck to list all projects on this Akvo page.', verbose_name='Show only projects of partner')),
                ('exclude_keywords', models.BooleanField(default=False, verbose_name='Exclude projects with selected keyword(s)')),
                ('all_maps', models.BooleanField(default=False, verbose_name='Show all projects, updates and organisations on the maps.')),
                ('keywords', models.ManyToManyField(related_name='partnersites', verbose_name='keywords', to='rsr.Keyword', blank=True)),
                ('organisation', models.ForeignKey(verbose_name='organisation', to='rsr.Organisation', help_text='Select your organisation from the drop-down list.')),
            ],
            options={
                'ordering': ('organisation__name',),
                'verbose_name': 'Akvo page',
                'verbose_name_plural': 'Akvo pages',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PlannedDisbursement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='This should only be used to report specific planned cash transfers. Use a period to denote decimals.', null=True, verbose_name='planned disbursement value')),
                ('value_date', models.DateField(help_text='Enter the specific date (DD/MM/YYYY) for the planned disbursement value.', null=True, verbose_name='planned disbursement value date', blank=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('updated', models.DateField(null=True, verbose_name='updated', blank=True)),
                ('period_start', models.DateField(help_text='The exact date of the planned disbursement OR the starting date for the disbursement period (DD/MM/YYYY).', null=True, verbose_name='planned disbursement period start', blank=True)),
                ('period_end', models.DateField(help_text='Enter the end date (DD/MM/YYYY) for the disbursement period.', null=True, verbose_name='planned disbursement period end', blank=True)),
                ('type', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=1, verbose_name='planned disbursement type', choices=[('1', '1 - Original'), ('2', '2 - Revised')])),
                ('provider_organisation_activity', akvo.rsr.fields.ValidXMLCharField(help_text='If incoming funds are being provided from the budget of another activity that is reported to IATI, it is STRONGLY RECOMMENDED that this should record the provider\u2019s unique IATI activity identifier for that activity.', max_length=100, verbose_name='provider organisation activity id', blank=True)),
                ('receiver_organisation_activity', akvo.rsr.fields.ValidXMLCharField(help_text='The internal identifier used by the receiver organisation for its activity that receives the funds from this disbursement (not to be confused with the IATI identifier for the target activity).', max_length=100, verbose_name='receiver organisation activity id', blank=True)),
            ],
            options={
                'verbose_name': 'planned disbursement',
                'verbose_name_plural': 'planned disbursements',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PolicyMarker',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('policy_marker', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='A policy or theme addressed by the activity, based on DAC policy markers. These indicators track key policy issues, like gender equality, environment, and trade development.', max_length=25, verbose_name='policy marker', choices=[('1', '1 - Gender Equality'), ('2', '2 - Aid to Environment'), ('3', '3 - Participatory Development/Good Governance'), ('4', '4 - Trade Development'), ('5', '5 - Aid Targeting the Objectives of the Convention on Biological Diversity'), ('6', '6 - Aid Targeting the Objectives of the Framework Convention on Climate Change - Mitigation'), ('7', '7 - Aid Targeting the Objectives of the Framework Convention on Climate Change - Adaptation'), ('8', '8 - Aid Targeting the Objectives of the Convention to Combat Desertification'), ('9', '9 - Reproductive, Maternal, Newborn and Child Health (RMNCH)')])),
                ('significance', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Each reported marker must contain the significance of the policy marker for this activity. Choices are:<br/>0 - Not targeted<br/>1 - Significant objective: the policy objectives are important, but were not the prime motivation for undertaking the activity.<br/>2 - Principal objective: the policy objective was the primary reason to undertake this activity.<br/>3 - Principal objective AND in support of an action programme: valid for the markers dealing with Desertification only.<br/>4 - Explicit primary objective: only to be used in combination with policy marker.<br/>9 - reproductive, maternal, newborn and child health.', max_length=2, verbose_name='policy marker significance', choices=[('0', '0 - not targeted'), ('1', '1 - significant objective'), ('2', '2 - principal objective'), ('3', '3 - principal objective AND in support of an action programme'), ('4', '4 - Explicit primary objective')])),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=5, verbose_name='vocabulary', choices=[('1', '1 - OECD DAC CRS'), ('99', '99 - Reporting Organisation')])),
                ('vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='vocabulary URI', blank=True)),
                ('description', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='policy marker description', blank=True)),
            ],
            options={
                'verbose_name': 'policy marker',
                'verbose_name_plural': 'policy markers',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('title', akvo.rsr.fields.ValidXMLCharField(db_index=True, max_length=200, verbose_name='project title', blank=True)),
                ('subtitle', akvo.rsr.fields.ValidXMLCharField(max_length=200, verbose_name='project subtitle', blank=True)),
                ('status', akvo.rsr.fields.ValidXMLCharField(default=b'N', max_length=1, verbose_name='status', db_index=True, choices=[(b'N', b''), (b'H', 'Needs funding'), (b'A', 'Active'), (b'C', 'Complete'), (b'L', 'Cancelled'), (b'R', 'Archived')])),
                ('iati_status', akvo.rsr.fields.ValidXMLCharField(choices=[('1', '1 - Pipeline/identification'), ('2', '2 - Implementation'), ('3', '3 - Completion'), ('4', '4 - Post-completion'), ('5', '5 - Cancelled'), ('6', '6 - Suspended')], max_length=1, blank=True, help_text='There are six different project statuses:<br/>1) Pipeline/identification: the project is being scoped or planned<br/>2) Implementation: the project is currently being implemented<br/>3) Completion: the project is complete or the final disbursement has been made<br/>4) Post-completion: the project is complete or the final disbursement has been made, but the project remains open pending financial sign off or M&E<br/>5) Cancelled: the project has been cancelled<br/>6) Suspended: the project has been temporarily suspended or the reporting partner no longer uses RSR.', verbose_name='status', db_index=True)),
                ('project_plan_summary', akvo.rsr.fields.ProjectLimitedTextField(help_text='Enter a brief summary, try to restrict the number of characters to 400 in order to display the summary nicely on the project page. The summary should explain:<br>- Why the project is being carried out;<br>- Where it is taking place;<br>- Who will benefit and/or participate;<br>- What it specifically hopes to accomplish;<br>- How those specific goals will be reached', max_length=2000, verbose_name='summary of project plan', blank=True)),
                ('current_image', sorl.thumbnail.fields.ImageField(help_text='Add your project photo here. You can only add one photo. If you have more, you can add them via RSR updates when your project is published. A photo album will feature on the project page. The photo should not be larger than 2 MB in size, and should preferably be in JPG format.', upload_to=akvo.rsr.models.project.image_path, verbose_name='photo', blank=True)),
                ('current_image_caption', akvo.rsr.fields.ValidXMLCharField(help_text='Briefly describe who or what you see in the photo.', max_length=60, verbose_name='photo caption', blank=True)),
                ('current_image_credit', akvo.rsr.fields.ValidXMLCharField(help_text='Enter who took the photo.', max_length=60, verbose_name='photo credit', blank=True)),
                ('goals_overview', akvo.rsr.fields.ValidXMLTextField(help_text='Provide a brief description of the overall project goals. For links and styling of the text, <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Markdown</a> is supported.', verbose_name='goals overview', blank=True)),
                ('current_status', akvo.rsr.fields.ValidXMLTextField(help_text='Describe the situation at the start of the project. For links and styling of the text, <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Markdown</a> is supported.', verbose_name='baseline situation', blank=True)),
                ('project_plan', akvo.rsr.fields.ValidXMLTextField(help_text='Detailed information about the implementation of the project: the what, how, who and when. For links and styling of the text, <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Markdown</a> is supported.', verbose_name='project plan', blank=True)),
                ('sustainability', akvo.rsr.fields.ValidXMLTextField(help_text='Describe how you aim to guarantee sustainability of the project until 10 years after project implementation. Think about the institutional setting, capacity-building, a cost recovery plan, products used, feasible arrangements for operation and maintenance, anticipation of environmental impact and social integration. For links and styling of the text, <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Markdown</a> is supported.', verbose_name='sustainability', blank=True)),
                ('background', akvo.rsr.fields.ValidXMLTextField(help_text='This should describe the geographical, political, environmental, social and/or cultural context of the project, and any related activities that have already taken place or are underway. For links and styling of the text, <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Markdown</a> is supported.', verbose_name='background', blank=True)),
                ('target_group', akvo.rsr.fields.ProjectLimitedTextField(help_text='This should include information about the people, organisations or resources that are being impacted by this project. For links and styling of the text, <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Markdown</a> is supported.', verbose_name='target group', blank=True)),
                ('aggregate_children', models.BooleanField(default=True, help_text='By selecting this option, the results data of child projects will be aggregated to this project. In the child project(s), this can be turned off per project as well.', verbose_name='Aggregate results data from child projects')),
                ('aggregate_to_parent', models.BooleanField(default=True, help_text='By selecting this option, the results data of this project will be aggregated to the parent project.', verbose_name='Aggregate results data to parent project')),
                ('is_impact_project', models.BooleanField(default=True, help_text='Determines whether the results framework is active for this project.', verbose_name='is rsr impact project')),
                ('is_public', models.BooleanField(default=True, help_text='Determines whether this project is a public project.', verbose_name='is public project')),
                ('language', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the language used when entering the details for this project.', max_length=2, choices=[(b'de', 'German'), (b'en', 'English'), (b'es', 'Spanish'), (b'fr', 'French'), (b'nl', 'Dutch'), (b'ru', 'Russian')])),
                ('notes', akvo.rsr.fields.ValidXMLTextField(help_text='The project comments are only for internal use and will not be displayed anywhere on the project page.', verbose_name='project comments', blank=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(default=b'EUR', help_text='The default currency for this project. Used in all financial aspects of the project.', max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('date_start_planned', models.DateField(help_text='Enter the original start date of the project (DD/MM/YYYY).', null=True, verbose_name='start date (planned)', blank=True)),
                ('date_start_actual', models.DateField(help_text='Enter the actual start date of the project (DD/MM/YYYY).', null=True, verbose_name='start date (actual)', blank=True)),
                ('date_end_planned', models.DateField(help_text='Enter the original end date of the project (DD/MM/YYYY).', null=True, verbose_name='end date (planned)', blank=True)),
                ('date_end_actual', models.DateField(help_text='Enter the actual end date of the project (DD/MM/YYYY).', null=True, verbose_name='end date (actual)', blank=True)),
                ('donate_url', models.URLField(help_text='Add a donation url for this project. If no URL is added, it is not possible to donate to this project through RSR.', null=True, verbose_name='donate url', blank=True)),
                ('donations', models.DecimalField(decimal_places=2, default=0, max_digits=14, blank=True, help_text='The total sum of donations the project has already recieved.', null=True, db_index=True)),
                ('iati_activity_id', akvo.rsr.fields.ValidXMLCharField(null=True, max_length=100, blank=True, help_text='This is a globally unique identifier for this activity. It is a requirement to be compliant with the IATI standard. This code consists of: [country code]-[Chamber of Commerce number]-[organisation\u2019s internal project code]. For Dutch organisations this is e.g. NL-KVK-31156201-TZ1234. For more information see <a href="http://iatistandard.org/202/activity-standard/iati-activities/iati-activity/iati-identifier/#definition" target="_blank">http://iatistandard.org/201/activity-standard/iati-activities/iati-activity/iati-identifier/#definition</a>', unique=True, verbose_name='IATI identifier', db_index=True)),
                ('hierarchy', models.PositiveIntegerField(choices=[(1, 'Core Activity'), (2, 'Sub Activity'), (3, 'Lower Sub Activity')], max_length=1, blank=True, help_text='If you are reporting multiple levels of projects in RSR, you can specify whether this is a core, sub, or lower sub activity here.', null=True, verbose_name='hierarchy')),
                ('project_scope', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the geographical scope of the project.', max_length=2, verbose_name='project scope', choices=[('1', '1 - Global'), ('2', '2 - Regional'), ('3', '3 - Multi-national'), ('4', '4 - National'), ('5', '5 - Sub-national: Multi-first-level administrative areas'), ('6', '6 - Sub-national: Single first-level administrative area'), ('7', '7 - Sub-national: Single second-level administrative area'), ('8', '8 - Single location')])),
                ('capital_spend_percentage', models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='The percentage of the total commitment allocated to or planned for capital expenditure. Content must be a positive decimal number between 0 and 100, with no percentage sign. Use a period to denote decimals.', null=True, verbose_name='capital spend percentage')),
                ('collaboration_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for the type of collaboration involved. For reference, please visit: <a href="http://iatistandard.org/202/codelists/CollaborationType/" target="_blank">http://iatistandard.org/202/codelists/CollaborationType/</a>.', max_length=1, verbose_name='collaboration type', choices=[('1', '1 - Bilateral'), ('2', '2 - Multilateral (inflows)'), ('3', '3 - Bilateral, core contributions to NGOs and other private bodies / PPPs'), ('4', '4 - Multilateral outflows'), ('6', '6 - Private sector outflows'), ('7', '7 - Bilateral, ex-post reporting on NGOs\u2019 activities funded through core contributions'), ('8', '8 - bilateral, triangular co-operation: activities where one or more bilateral providers of development co-operation or international organisations support South-South co-operation, joining forces with developing countries to facilitate a sharing of knowledge and experience among all partners involved.')])),
                ('default_aid_type_vocabulary', akvo.rsr.fields.ValidXMLCharField(default=b'1', choices=[('1', '1 - OECD DAC'), ('2', '2 - Earmarking Category'), ('3', '3 - Earmarking Modality')], max_length=1, blank=True, help_text='This is the IATI identifier for the type of vocabulary being used for describing the type of the aid being supplied or activity being undertaken. For reference, please visit: <a href="http://iatistandard.org/203/codelists/AidTypeVocabulary/" target="_blank"> http://iatistandard.org/203/codelists/AidTypeVocabulary/</a>.', verbose_name='default aid type vocabulary')),
                ('default_aid_type', akvo.rsr.fields.ValidXMLCharField(help_text='This is the IATI identifier for the type of aid being supplied or activity being undertaken. This element specifies a default for all the project\u2019s financial transactions. This can be overridden at the individual transaction level. For reference, please visit: <a href="http://iatistandard.org/202/codelists/AidType/" target="_blank">http://iatistandard.org/202/codelists/AidType/</a>.', max_length=3, verbose_name='default aid type', blank=True)),
                ('default_finance_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for the type of finance. This element specifies a default for all the transactions in the project\u2019s activity report; it can be overridden at the individual transaction level. For reference visit: <a href="http://iatistandard.org/202/codelists/FinanceType/" target="_blank">http://iatistandard.org/202/codelists/FinanceType/</a>.', max_length=3, verbose_name='default finance type', choices=[('110', '110 - Standard grant'), ('111', '111 - Subsidies to national private investors'), ('210', '210 - Interest subsidy'), ('211', '211 - Interest subsidy to national private exporters'), ('310', '310 - Capital subscription on deposit basis'), ('311', '311 - Capital subscription on encashment basis'), ('410', '410 - Aid loan excluding debt reorganisation'), ('411', '411 - Investment-related loan to developing countries'), ('412', '412 - Loan in a joint venture with the recipient'), ('413', '413 - Loan to national private investor'), ('414', '414 - Loan to national private exporter'), ('421', '421 - Standard loan'), ('422', '422 - Reimbursable grant'), ('423', '423 - Bonds'), ('424', '424 - Asset-backed securities'), ('425', '425 - Other debt securities'), ('431', '431 - Subordinated loan'), ('432', '432 - Preferred equity'), ('433', '433 - Other hybrid instruments'), ('451', '451 - Non-banks guaranteed export credits'), ('452', '452 - Non-banks non-guaranteed portions of guaranteed export credits'), ('453', '453 - Bank export credits'), ('510', '510 - Common equity'), ('511', '511 - Acquisition of equity not part of joint venture in developing countries'), ('512', '512 - Other acquisition of equity'), ('520', '520 - Shares in collective investment vehicles'), ('530', '530 - Reinvested earnings'), ('610', '610 - Debt forgiveness/conversion: ODA claims (P)'), ('611', '611 - Debt forgiveness/conversion: ODA claims (I)'), ('612', '612 - Debt forgiveness/conversion: OOF claims (P)'), ('613', '613 - Debt forgiveness/conversion: OOF claims (I)'), ('614', '614 - Debt forgiveness/conversion: Private claims (P)'), ('615', '615 - Debt forgiveness/conversion: Private claims (I)'), ('616', '616 - Debt forgiveness: OOF claims (DSR)'), ('617', '617 - Debt forgiveness: Private claims (DSR)'), ('618', '618 - Debt forgiveness: Other'), ('620', '620 - Debt rescheduling: ODA claims (P)'), ('621', '621 - Debt rescheduling: ODA claims (I)'), ('622', '622 - Debt rescheduling: OOF claims (P)'), ('623', '623 - Debt rescheduling: OOF claims (I)'), ('624', '624 - Debt rescheduling: Private claims (P)'), ('625', '625 - Debt rescheduling: Private claims (I)'), ('626', '626 - Debt rescheduling: OOF claims (DSR)'), ('627', '627 - Debt rescheduling: Private claims (DSR)'), ('630', '630 - Debt rescheduling: OOF claim (DSR \u2013 original loan principal)'), ('631', '631 - Debt rescheduling: OOF claim (DSR \u2013 original loan interest)'), ('632', '632 - Debt rescheduling: Private claim (DSR \u2013 original loan principal)'), ('633', '633 - Debt forgiveness/conversion: export credit claims (P)'), ('634', '634 - Debt forgiveness/conversion: export credit claims (I)'), ('635', '635 - Debt forgiveness: export credit claims (DSR)'), ('636', '636 - Debt rescheduling: export credit claims (P)'), ('637', '637 - Debt rescheduling: export credit claims (I)'), ('638', '638 - Debt rescheduling: export credit claims (DSR)'), ('639', '639 - Debt rescheduling: export credit claim (DSR \u2013 original loan principal)'), ('710', '710 - Foreign direct investment'), ('711', '711 - Other foreign direct investment, including reinvested earnings'), ('810', '810 - Bank bonds'), ('811', '811 - Non-bank bonds'), ('910', '910 - Other bank securities/claims'), ('911', '911 - Other non-bank securities/claims'), ('912', '912 - Securities and other instruments issued by multilateral agencies')])),
                ('default_flow_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the IATI identifier for how the activity (project) is funded. For reference, please visit: <a href="http://iatistandard.org/202/codelists/FlowType/" target="_blank">http://iatistandard.org/202/codelists/FlowType/</a>.', max_length=2, verbose_name='default flow type', choices=[('10', '10 - ODA'), ('20', '20 - OOF'), ('21', '21 - Non-export credit OOF'), ('22', '22 - Officially supported export credits'), ('30', '30 - Private grants'), ('35', '35 - Private market'), ('36', '36 - Private Foreign Direct Investment'), ('37', '37 - Other Private flows at market terms'), ('40', '40 - Non flow'), ('50', '50 - Other flows')])),
                ('default_tied_status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This element specifies a default for all the activity\u2019s financial transactions; it can be overridden at the individual transaction level. For reference, please visit: <a href="http://iatistandard.org/202/codelists/TiedStatus/" target="_blank">http://iatistandard.org/202/codelists/TiedStatus/</a>.', max_length=10, verbose_name='default tied status', choices=[('3', '3 - Partially tied'), ('4', '4 - Tied'), ('5', '5 - Untied')])),
                ('country_budget_vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter an IATI code for the common functional classification or country system (this allows for common codes, country-specific codes, or any other classification agreed between countries and donors) see: <a href="http://iatistandard.org/202/codelists/BudgetIdentifierVocabulary/" target="_blank">http://iatistandard.org/202/codelists/BudgetIdentifierVocabulary/</a>.', max_length=1, verbose_name='country budget vocabulary', choices=[('1', '1 - IATI'), ('2', '2 - Country Chart of Accounts'), ('3', '3 - Other Country System'), ('4', '4 - Reporting Organisation'), ('5', '5 - Other')])),
                ('humanitarian', models.NullBooleanField(help_text='Determines whether this project relates entirely or partially to humanitarian aid.', verbose_name='humanitarian project')),
                ('budget', models.DecimalField(decimal_places=2, default=0, max_digits=14, blank=True, null=True, verbose_name='project budget', db_index=True)),
                ('funds', models.DecimalField(decimal_places=2, default=0, max_digits=14, blank=True, null=True, db_index=True)),
                ('funds_needed', models.DecimalField(decimal_places=2, default=0, max_digits=14, blank=True, null=True, db_index=True)),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'permissions': (('post_updates', 'Can post updates'),),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Fss',
            fields=[
                ('project', models.OneToOneField(primary_key=True, serialize=False, to='rsr.Project')),
                ('extraction_date', models.DateField(help_text="The exact date when the information was collected or extracted from donors' aid management systems.", null=True, verbose_name='extraction date', blank=True)),
                ('priority', models.NullBooleanField(help_text='True if the partner country is a priority partner country.', verbose_name='priority')),
                ('phaseout_year', models.PositiveIntegerField(help_text='If there are plans to phase out operations from the partner country, this shows the projected year of last disbursements.', max_length=4, null=True, verbose_name='phaseout year', blank=True)),
            ],
            options={
                'verbose_name': 'FSS',
                'verbose_name_plural': 'FSS',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CrsAdd',
            fields=[
                ('project', models.OneToOneField(primary_key=True, serialize=False, to='rsr.Project')),
                ('loan_terms_rate1', models.DecimalField(decimal_places=2, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=5, blank=True, help_text='Interest Rate. If an ODA loan with variable interest rate, report the variable rate here and the reference fixed rate as rate 2.', null=True, verbose_name='loan terms rate 1')),
                ('loan_terms_rate2', models.DecimalField(decimal_places=2, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=5, blank=True, help_text='Second Interest Rate. If an ODA loan with variable interest rate, report the variable rate as rate 1 and the reference fixed rate here.', null=True, verbose_name='loan terms rate 2')),
                ('repayment_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='An IATI codelist tabulating CRS-specified values for the type of Repayment. See the <a href="http://iatistandard.org/202/codelists/LoanRepaymentType/" target="_blank">IATI codelist</a>.', max_length=1, verbose_name='loan terms repayment type', choices=[('1', '1 - Equal Principal Payments (EPP)'), ('2', '2 - Annuity'), ('3', '3 - Lump sum'), ('5', '5 - Other')])),
                ('repayment_plan', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='An IATI codelist tabulating CRS-specified values for the number of repayments per annum. See the <a href="http://iatistandard.org/202/codelists/LoanRepaymentPeriod/" target="_blank">IATI codelist</a>.', max_length=2, verbose_name='loan terms repayment plan', choices=[('1', '1 - Annual'), ('2', '2 - Semi-annual'), ('4', '4 - Quarterly'), ('12', '12 - Monthly')])),
                ('commitment_date', models.DateField(help_text='The CRS++ reported commitment date.', null=True, verbose_name='loan terms commitment date', blank=True)),
                ('repayment_first_date', models.DateField(help_text='The CRS++ reported first repayment date.', null=True, verbose_name='loan terms first repayment date', blank=True)),
                ('repayment_final_date', models.DateField(help_text='The CRS++ reported final repayment date.', null=True, verbose_name='loan terms final repayment date', blank=True)),
                ('loan_status_year', models.PositiveIntegerField(help_text='CRS reporting year (CRS++ Column 1).', max_length=4, null=True, verbose_name='loan status year', blank=True)),
                ('loan_status_currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='loan status currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('loan_status_value_date', models.DateField(help_text='Enter the specific date (DD/MM/YYYY) for the loan status values.', null=True, verbose_name='loan status value date', blank=True)),
                ('interest_received', models.DecimalField(decimal_places=2, max_digits=10, blank=True, help_text='Interest received during the reporting year.', null=True, verbose_name='loan status interest received')),
                ('principal_outstanding', models.DecimalField(decimal_places=2, max_digits=10, blank=True, help_text='The amount of principal owed on the loan at the end of the reporting year.', null=True, verbose_name='loan status principal outstanding')),
                ('principal_arrears', models.DecimalField(decimal_places=2, max_digits=10, blank=True, help_text='Arrears of principal at the end of the year. Included in principal outstanding.', null=True, verbose_name='loan status principal arrears')),
                ('interest_arrears', models.DecimalField(decimal_places=2, max_digits=10, blank=True, help_text='Arrears of interest at the end of the year.', null=True, verbose_name='loan status interest arrears')),
                ('channel_code', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The CRS channel code for this activity. The codelist contains both organisation types and names of organisations. For non-CRS purposes these should be reported using participating organisations. See the <a href="http://iatistandard.org/202/codelists/CRSChannelCode/" target="_blank">IATI codelist</a>.', max_length=5, verbose_name='channel code', choices=[('10000', '10000 - PUBLIC SECTOR INSTITUTIONS'), ('11000', '11000 - Donor Government'), ('11001', '11001 - Central Government'), ('11002', '11002 - Local Government'), ('11003', '11003 - Public corporations'), ('11004', '11004 - Other public entities in donor country'), ('12000', '12000 - Recipient Government'), ('12001', '12001 - Central Government'), ('12002', '12002 - Local Government'), ('12003', '12003 - Public corporations'), ('12004', '12004 - Other public entities in recipient country'), ('13000', '13000 - Third Country Government (Delegated co-operation)'), ('20000', '20000 - NON-GOVERNMENTAL ORGANISATIONS (NGOs) AND CIVIL SOCIETY'), ('21000', '21000 - INTERNATIONAL NGO'), ('21045', '21045 - African Medical and Research Foundation'), ('21046', '21046 - Agency for Cooperation and Research in Development'), ('21001', '21001 - Association of Geoscientists for International Development'), ('21063', '21063 - Conservation International'), ('21005', '21005 - Consumer Unity and Trust Society International'), ('21029', '21029 - Doctors Without Borders'), ('47035', '47035 - Environmental Development Action in the Third World'), ('21007', '21007 - Environmental Liaison Centre International'), ('21503', '21503 - Family Health International 360'), ('21011', '21011 - Global Campaign for Education'), ('21013', '21013 - Health Action International'), ('21024', '21024 - Inter Press Service, International Association'), ('21038', '21038 - International Alert'), ('21057', '21057 - International Centre for Transitional Justice'), ('21016', '21016 - International Committee of the Red Cross'), ('21044', '21044 - International Council for the Control of Iodine Deficiency Disorders'), ('21018', '21018 - International Federation of Red Cross and Red Crescent Societies'), ('21020', '21020 - International HIV/AIDS Alliance'), ('21022', '21022 - International Network for Alternative Financial Institutions'), ('21042', '21042 - International Peacebuilding Alliance'), ('21023', '21023 - International Planned Parenthood Federation'), ('21061', '21061 - International Rehabilitation Council for Torture Victims'), ('21504', '21504 - International Relief and Development'), ('21506', '21506 - International Rescue Committee'), ('21034', '21034 - International Union Against Tuberculosis and Lung Disease'), ('21053', '21053 - IPAS-Protecting Women\u2019s Health, Advancing Women\u2019s Reproductive Rights'), ('21054', '21054 - Life and Peace Institute'), ('21501', '21501 - OXFAM International'), ('21507', '21507 - Pact World'), ('21031', '21031 - PANOS Institute'), ('21032', '21032 - Population Services International'), ('21505', '21505 - Save the Children'), ('21041', '21041 - Society for International Development'), ('21062', '21062 - The Nature Conservancy'), ('21036', '21036 - World University Service'), ('21502', '21502 - World Vision'), ('22000', '22000 - Donor country-based NGO'), ('21047', '21047 - AgriCord'), ('21060', '21060 - Association for the Prevention of Torture'), ('21006', '21006 - Development Gateway Foundation'), ('21049', '21049 - European Centre for Development Policy Management'), ('21008', '21008 - Eurostep'), ('47042', '47042 - Foundation for International Training'), ('21050', '21050 - Geneva Call'), ('21014', '21014 - Human Rights Information and Documentation Systems'), ('21015', '21015 - International Catholic Rural Association'), ('21058', '21058 - International Crisis Group'), ('21019', '21019 - International Federation of Settlements and Neighbourhood Centres'), ('21025', '21025 - International Seismological Centre'), ('21026', '21026 - International Service for Human Rights'), ('21027', '21027 - ITF Enhancing Human Security'), ('21040', "21040 - International Women's Tribune Centre"), ('22501', '22501 - OXFAM - provider country office'), ('22502', '22502 - Save the Children - donor country office'), ('21033', '21033 - Transparency International'), ('21037', "21037 - Women's World Banking"), ('21035', '21035 - World Organisation Against Torture'), ('23000', '23000 - Developing country-based NGO'), ('21059', '21059 - Africa Solidarity Fund'), ('21048', '21048 - Association of African Universities'), ('21010', '21010 - Forum for African Women Educationalists'), ('21051', '21051 - Institut Sup\xe9rieur Panafricaine d\u2019Economie Coop\xe9rative'), ('21028', '21028 - International University Exchange Fund - IUEF Stip. in Africa and Latin America'), ('21003', '21003 - Latin American Council for Social Sciences'), ('23501', '23501 - National Red Cross and Red Crescent Societies'), ('21030', '21030 - Pan African Institute for Development'), ('21055', '21055 - Regional AIDS Training Network'), ('30000', '30000 - PUBLIC-PRIVATE PARTNERSHIPS (PPPs) and NETWORKS'), ('31000', '31000 - Public-Private Partnership (PPP)'), ('30008', '30008 - Cities Alliance'), ('30016', '30016 - European Fund for Southeast Europe'), ('30007', '30007 - Global Alliance for ICT and Development'), ('30001', '30001 - Global Alliance for Improved Nutrition'), ('30012', '30012 - Global Climate Partnership Fund'), ('47043', '47043 - Global Crop Diversity Trust'), ('30015', '30015 - Global Energy Efficiency and Renewable Energy Fund'), ('30003', '30003 - Global e-Schools and Communities Initiative'), ('30004', '30004 - Global Water Partnership'), ('30005', '30005 - International AIDS Vaccine Initiative'), ('30006', '30006 - International Partnership on Microbicides'), ('30011', '30011 - International Union for the Conservation of Nature'), ('30013', '30013 - Microfinance Enhancement Facility'), ('30014', '30014 - Regional Micro, Small and Medium Enterprise Investment Fund for Sub-Saharan Africa'), ('21056', '21056 - Renewable Energy and Energy Efficiency Partnership'), ('30017', '30017 - SANAD Fund for Micro, Small and Medium Enterprises'), ('30009', '30009 - Small Arms Survey'), ('32000', '32000 - Network'), ('47010', '47010 - Commonwealth Agency for Public Administration and Management'), ('47028', '47028 - Commonwealth Partnership for Technical Management'), ('21043', '21043 - European Parliamentarians for Africa'), ('31004', '31004 - Extractive Industries Transparency Initiative International Secretariat'), ('31001', '31001 - Global Development Network'), ('31002', '31002 - Global Knowledge Partnership'), ('21017', '21017 - International Centre for Trade and Sustainable Development'), ('31003', '31003 - International Land Coalition'), ('31005', '31005 - Parliamentary Network on the World Bank'), ('40000', '40000 - MULTILATERAL ORGANISATIONS'), ('41000', '41000 - United Nations agency, fund or commission (UN)'), ('41147', '41147 - Central Emergency Response Fund'), ('41101', '41101 - Convention to Combat Desertification'), ('41102', '41102 - Desert Locust Control Organisation for Eastern Africa'), ('41106', '41106 - Economic and Social Commission for Asia and the Pacific'), ('41105', '41105 - Economic and Social Commission for Western Asia'), ('41103', '41103 - Economic Commission for Africa'), ('41104', '41104 - Economic Commission for Latin America and the Caribbean'), ('41301', '41301 - Food and Agricultural Organisation'), ('41318', '41318 - Global Mechanism'), ('41317', '41317 - Green Climate Fund'), ('41312', '41312 - International Atomic Energy Agency - assessed contributions'), ('41107', '41107 - International Atomic Energy Agency (Contributions to Technical Cooperation Fund Only)'), ('41108', '41108 - International Fund for Agricultural Development'), ('41302', '41302 - International Labour Organisation - Assessed Contributions'), ('41144', '41144 - International Labour Organisation - Regular Budget Supplementary Account'), ('41145', '41145 - International Maritime Organization - Technical Co-operation Fund'), ('41303', '41303 - International Telecommunications Union'), ('41110', '41110 - Joint United Nations Programme on HIV/AIDS'), ('41305', '41305 - United Nations'), ('41111', '41111 - United Nations Capital Development Fund'), ('41122', '41122 - United Nations Children\u2019s Fund'), ('41112', '41112 - United Nations Conference on Trade and Development'), ('41142', '41142 - United Nations Democracy Fund'), ('41310', '41310 - United Nations Department of Peacekeeping Operations [only MINURSO, MINUSCA, MINUSMA, MINUSTAH, MONUSCO, UNAMID, UNIFIL, UNISFA, UNMIK, UNMIL, UNMISS, UNOCI]. Report contributions mission by mission in CRS++.'), ('41148', '41148 - United Nations Department of Political Affairs, Trust Fund in Support of Political Affairs'), ('41114', '41114 - United Nations Development Programme'), ('41314', '41314 - United Nations Economic Commission for Europe (extrabudgetary contributions only)'), ('41304', '41304 - United Nations Educational, Scientific and Cultural Organisation'), ('41146', '41146 - United Nations Entity for Gender Equality and the Empowerment of Women'), ('41116', '41116 - United Nations Environment Programme'), ('41316', '41316 - United Nations Framework Convention on Climate Change'), ('41313', '41313 - United Nations High Commissioner for Human Rights (extrabudgetary contributions only)'), ('41120', '41120 - United Nations Human Settlement Programme'), ('41123', '41123 - United Nations Industrial Development Organisation'), ('41125', '41125 - United Nations Institute for Training and Research'), ('41315', '41315 - United Nations International Strategy for Disaster Reduction'), ('41126', '41126 - United Nations Mine Action Service'), ('41502', '41502 - United Nations Office for Project Services'), ('41127', '41127 - United Nations Office of Co-ordination of Humanitarian Affairs'), ('41121', '41121 - United Nations Office of the United Nations High Commissioner for Refugees'), ('41128', '41128 - United Nations Office on Drugs and Crime'), ('41311', '41311 - United Nations Peacebuilding Fund (Window One:  Flexible Contributions Only)'), ('41141', '41141 - United Nations Peacebuilding Fund (Window Two:  Restricted Contributions Only)'), ('41119', '41119 - United Nations Population Fund'), ('41501', '41501 - United Nations Reducing Emissions from Deforestation and Forest Degradation'), ('41130', '41130 - United Nations Relief and Works Agency for Palestine Refugees in the Near East'), ('41129', '41129 - United Nations Research Institute for Social Development'), ('41133', '41133 - United Nations Special Initiative on Africa'), ('41131', '41131 - United Nations System Staff College'), ('41132', '41132 - United Nations System Standing Committee on Nutrition'), ('41134', '41134 - United Nations University (including Endowment Fund)'), ('41137', '41137 - United Nations Voluntary Fund for Technical Co-operation in the Field of Human Rights'), ('41138', '41138 - United Nations Voluntary Fund for Victims of Torture'), ('41136', '41136 - United Nations Voluntary Fund on Disability'), ('41135', '41135 - United Nations Volunteers'), ('41306', '41306 - Universal Postal Union'), ('41503', '41503 - UN-led Country-based Pooled Funds'), ('41140', '41140 - World Food Programme'), ('41307', '41307 - World Health Organisation - assessed contributions'), ('41143', '41143 - World Health Organisation - core voluntary contributions account'), ('41308', '41308 - World Intellectual Property Organisation'), ('41309', '41309 - World Meteorological Organisation'), ('41319', '41319 - World Tourism Organization'), ('42000', '42000 - European Union Institution (EU)'), ('42001', '42001 - European Commission - Development Share of Budget'), ('42003', '42003 - European Commission - European Development Fund'), ('42004', '42004 - European Investment Bank'), ('43000', '43000 - International Monetary Fund (IMF)'), ('43005', '43005 - International Monetary Fund - Post-Catastrophe Debt Relief Trust'), ('43002', '43002 - International Monetary Fund - Poverty Reduction and Growth - Heavily Indebted Poor Countries Debt Relief Initiative Trust Fund [includes HIPC, Extended Credit Facility (ECF), and ECF-HIPC sub-accounts]'), ('43004', '43004 - International Monetary Fund - Poverty Reduction and Growth - Multilateral Debt Relief Initiative Trust'), ('43001', '43001 - International Monetary Fund - Poverty Reduction and Growth Trust'), ('43003', '43003 - International Monetary Fund - Subsidization of Emergency Post Conflict Assistance/Emergency Assistance for Natural Disasters for PRGT-eligible members'), ('43006', '43006 - Catastrophe Containment and Relief Trust'), ('44000', '44000 - World Bank Group (WB)'), ('44006', '44006 - Advance Market Commitments'), ('44001', '44001 - International Bank for Reconstruction and Development'), ('44002', '44002 - International Development Association'), ('44003', '44003 - International Development Association - Heavily Indebted Poor Countries Debt Initiative Trust Fund'), ('44007', '44007 - International Development Association - Multilateral Debt Relief Initiative'), ('44004', '44004 - International Finance Corporation'), ('44005', '44005 - Multilateral Investment Guarantee Agency'), ('45000', '45000 - World Trade Organisation'), ('45002', '45002 - World Trade Organisation - Advisory Centre on WTO Law'), ('45003', '45003 - World Trade Organisation - Doha Development Agenda Global Trust Fund'), ('45001', '45001 - World Trade Organisation - International Trade Centre'), ('46000', '46000 - Regional Development Bank'), ('46002', '46002 - African Development Bank'), ('46003', '46003 - African Development Fund'), ('46022', '46022 - African Export Import Bank'), ('46008', '46008 - Andean Development Corporation'), ('46004', '46004 - Asian Development Bank'), ('46005', '46005 - Asian Development Fund'), ('46026', '46026 - Asian Infrastructure Investment Bank'), ('46006', '46006 - Black Sea Trade and Development Bank'), ('46009', '46009 - Caribbean Development Bank'), ('46020', '46020 - Central African States Development Bank'), ('46007', '46007 - Central American Bank for Economic Integration'), ('46024', '46024 - Council of Europe Development Bank'), ('46023', '46023 - Eastern and Southern African Trade and Development Bank'), ('46015', '46015 - European Bank for Reconstruction and Development'), ('46018', '46018 - European Bank for Reconstruction and Development - Early Transition Countries Fund'), ('46017', '46017 - European Bank for Reconstruction and Development \u2013 technical co-operation and special funds (all EBRD countries of operations)'), ('46016', '46016 - European Bank for Reconstruction and Development \u2013 technical co-operation and special funds (ODA-eligible countries only)'), ('46019', '46019 - European Bank for Reconstruction and Development - Western Balkans Joint Trust Fund'), ('46013', '46013 - Inter-American Development Bank, Fund for Special Operations'), ('46012', '46012 - Inter-American Development Bank, Inter-American Investment Corporation and Multilateral Investment Fund'), ('46025', '46025 - Islamic Development Bank'), ('46021', '46021 - West African Development Bank'), ('47000', '47000 - Other multilateral institution'), ('47111', '47111 - Adaptation Fund'), ('47009', '47009 - African and Malagasy Council for Higher Education'), ('47001', '47001 - African Capacity Building Foundation'), ('47137', '47137 - African Risk Capacity Group'), ('47141', '47141 - African Tax Administration Forum'), ('47005', '47005 - African Union (excluding peacekeeping facilities)'), ('21002', '21002 - Agency for International Trade Information and Co-operation'), ('47002', '47002 - Asian Productivity Organisation'), ('47109', '47109 - Asia-Pacific Economic Cooperation Support Fund (except contributions tied to counter-terrorism activities)'), ('47068', '47068 - Asia-Pacific Fishery Commission'), ('47003', '47003 - Association of South East Asian Nations: Economic Co-operation'), ('47011', '47011 - Caribbean Community Secretariat'), ('47012', '47012 - Caribbean Epidemiology Centre'), ('47145', '47145 - Center of Excellence in Finance'), ('47112', '47112 - Central European Initiative - Special Fund for Climate and Environmental Protection'), ('47015', '47015 - CGIAR Fund'), ('47134', '47134 - Clean Technology Fund'), ('47027', '47027 - Colombo Plan'), ('47105', '47105 - Common Fund for Commodities'), ('47013', '47013 - Commonwealth Foundation'), ('47025', '47025 - Commonwealth of Learning'), ('47132', '47132 - Commonwealth Secretariat (ODA-eligible contributions only)'), ('47026', '47026 - Community of Portuguese Speaking Countries'), ('47022', '47022 - Convention on International Trade in Endangered Species of Wild Flora and Fauna'), ('47138', '47138 - Council of Europe'), ('47037', '47037 - Eastern-Regional Organisation of Public Administration'), ('47113', '47113 - Economic and Monetary Community of Central Africa'), ('47034', '47034 - Economic Community of West African States'), ('47036', '47036 - European and Mediterranean Plant Protection Organisation'), ('47504', '47504 - Forest Carbon Partnership Facility'), ('47040', '47040 - Forum Fisheries Agency'), ('47106', '47106 - Geneva Centre for the Democratic Control of Armed Forces'), ('47123', '47123 - Geneva International Centre for Humanitarian Demining'), ('47503', '47503 - Global Agriculture and Food Security Program'), ('47122', '47122 - Global Alliance for Vaccines and Immunization'), ('47129', '47129 - Global Environment Facility - Least Developed Countries Fund'), ('47130', '47130 - Global Environment Facility - Special Climate Change Fund'), ('47044', '47044 - Global Environment Facility Trust Fund'), ('47502', '47502 - Global Fund for Disaster Risk Reduction'), ('47045', '47045 - Global Fund to Fight AIDS, Tuberculosis and Malaria'), ('47136', '47136 - Global Green Growth Institute'), ('47501', '47501 - Global Partnership for Education'), ('47116', '47116 - Integrated Framework for Trade-Related Technical Assistance to Least Developed Countries'), ('47061', '47061 - Inter-American Institute for Co-operation on Agriculture'), ('47065', '47065 - Intergovernmental Oceanographic Commission'), ('47067', '47067 - Intergovernmental Panel on Climate Change'), ('47019', '47019 - International Centre for Advanced Mediterranean Agronomic Studies'), ('47050', '47050 - International Cotton Advisory Committee'), ('47059', '47059 - International Development Law Organisation'), ('30010', '30010 - International drug purchase facility'), ('47107', '47107 - International Finance Facility for Immunisation'), ('47058', '47058 - International Institute for Democracy and Electoral Assistance'), ('47064', '47064 - International Network for Bamboo and Rattan'), ('47066', '47066 - International Organisation for Migration'), ('47046', '47046 - International Organisation of the Francophonie'), ('47073', '47073 - International Tropical Timber Organisation'), ('47074', '47074 - International Vaccine Institute'), ('47076', '47076 - Justice Studies Centre of the Americas'), ('47127', '47127 - Latin-American Energy Organisation'), ('47077', '47077 - Mekong River Commission'), ('47078', '47078 - Multilateral Fund for the Implementation of the Montreal Protocol'), ('47117', "47117 - New Partnership for Africa's Development"), ('47128', '47128 - Nordic Development Fund'), ('47081', '47081 - OECD Development Centre'), ('47142', '47142 - OPEC Fund for International Development'), ('47080', '47080 - Organisation for Economic Co-operation and Development (Contributions to special funds for Technical Co-operation Activities Only)'), ('47079', '47079 - Organisation of American States'), ('47082', '47082 - Organisation of Eastern Caribbean States'), ('47140', '47140 - Organisation of Ibero-American States for Education, Science and Culture'), ('47110', '47110 - Organisation of the Black Sea Economic Cooperation'), ('47131', '47131 - Organization for Security and Co-operation in Europe'), ('47087', '47087 - Pacific Islands Forum Secretariat'), ('47097', '47097 - Pacific Regional Environment Programme'), ('47083', '47083 - Pan-American Health Organisation'), ('47084', '47084 - Pan-American Institute of Geography and History'), ('47086', '47086 - Private Infrastructure Development Group'), ('47118', '47118 - Regional Organisation for the Strengthening of Supreme Audit Institutions of Francophone Sub-Saharan Countries'), ('47119', '47119 - Sahara and Sahel Observatory'), ('47029', '47029 - Sahel and West Africa Club'), ('47096', '47096 - Secretariat of the Pacific Community'), ('47120', '47120 - South Asian Association for Regional Cooperation'), ('47092', '47092 - South East Asian Fisheries Development Centre'), ('47093', '47093 - South East Asian Ministers of Education'), ('47095', '47095 - South Pacific Board for Educational Assessment'), ('47089', '47089 - Southern African Development Community'), ('47135', '47135 - Strategic Climate Fund'), ('47121', '47121 - United Cities and Local Governments of Africa'), ('47098', '47098 - Unrepresented Nations and Peoples\u2019 Organisation'), ('47100', '47100 - West African Monetary Union'), ('47139', '47139 - World Customs Organization Customs Co-operation Fund'), ('47143', '47143 - Global Community Engagement and Resilience Fund'), ('47144', '47144 - International Renewable Energy Agency'), ('50000', '50000 - Other'), ('51000', '51000 - University, college or other teaching institution, research institute or think\u2011tank'), ('47101', '47101 - Africa Rice Centre'), ('47069', '47069 - Bioversity International'), ('47018', '47018 - Centre for International Forestry Research'), ('21004', '21004 - Council for the Development of Economic and Social Research in Africa'), ('47041', '47041 - Food and Fertilizer Technology Centre'), ('21009', '21009 - Forum for Agricultural Research in Africa'), ('47047', '47047 - International African Institute'), ('47051', '47051 - International Centre for Agricultural Research in Dry Areas'), ('47055', '47055 - International Centre for Development Oriented Research in Agriculture'), ('47053', '47053 - International Centre for Diarrhoeal Disease Research, Bangladesh'), ('47017', '47017 - International Centre for Tropical Agriculture'), ('47054', '47054 - International Centre of Insect Physiology and Ecology'), ('47057', '47057 - International Crop Research for Semi-Arid Tropics'), ('51001', '51001 - International Food Policy Research Institute'), ('21021', '21021 - International Institute for Environment and Development'), ('21039', '21039 - International Institute for Sustainable Development'), ('47062', '47062 - International Institute of Tropical Agriculture'), ('47063', '47063 - International Livestock Research Institute'), ('47020', '47020 - International Maize and Wheat Improvement Centre'), ('47021', '47021 - International Potato Centre'), ('47070', '47070 - International Rice Research Institute'), ('47071', '47071 - International Seed Testing Association'), ('47075', '47075 - International Water Management Institute'), ('47099', '47099 - University of the South Pacific'), ('47056', '47056 - World AgroForestry Centre'), ('47103', '47103 - World Maritime University'), ('47008', '47008 - World Vegetable Centre'), ('47104', '47104 - WorldFish Centre'), ('52000', '52000 - Other'), ('60000', '60000 - Private sector institution'), ('61000', '61000 - Private sector in provider country'), ('61001', '61001 - Private bank in provider country'), ('61002', '61002 - Private exporter in provider country'), ('61003', '61003 - Private investor in provider country'), ('61004', '61004 - Other non-bank entity in provider country'), ('62000', '62000 - Private sector in recipient country'), ('62001', '62001 - Private bank in recipient country'), ('62002', '62002 - Joint-venture in recipient country'), ('62003', '62003 - Other non-bank in recipient country'), ('63000', '63000 - Private sector in third country'), ('63001', '63001 - Private bank in third country'), ('63002', '63002 - Private non-bank in third country'), ('90000', '90000 - Other')])),
            ],
            options={
                'verbose_name': 'CRS reporting',
                'verbose_name_plural': 'CRS reporting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('comment', akvo.rsr.fields.ValidXMLTextField(verbose_name='comment')),
                ('project', models.ForeignKey(related_name='comments', verbose_name='project', to='rsr.Project')),
                ('user', models.ForeignKey(verbose_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
                'verbose_name': 'project comment',
                'verbose_name_plural': 'project comments',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectCondition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='The text of a specific condition attached to the Project. Organisation-wide terms and conditions that apply to all activities should not be reported here, but in either iati-organisation/document-link or iati-activity-document-link.', max_length=100, verbose_name='condition', blank=True)),
                ('type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Condition type \u2013 e.g. policy, performance.<br/>1 - Policy: The condition attached requires a particular policy to be implemented by the recipient<br/>2 - Performance: The condition attached requires certain outputs or outcomes to be achieved by the recipient<br/>3 - Fiduciary: The condition attached requires use of certain public financial management or public accountability measures by the recipient', max_length=1, verbose_name='condition type', choices=[('1', '1 - Policy'), ('2', '2 - Performance'), ('3', '3 - Fiduciary')])),
                ('project', models.ForeignKey(related_name='conditions', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'verbose_name': 'condition',
                'verbose_name_plural': 'conditions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='What types of enquiries this contact person is best-placed to handle.', max_length=1, verbose_name='contact type', choices=[('1', '1 - General Enquiries'), ('2', '2 - Project Management'), ('3', '3 - Financial Management'), ('4', '4 - Communications')])),
                ('person_name', akvo.rsr.fields.ValidXMLCharField(help_text='Please enter the name of the contact person for this project.', max_length=100, verbose_name='contact name', blank=True)),
                ('email', models.EmailField(max_length=75, verbose_name='contact email', blank=True)),
                ('job_title', akvo.rsr.fields.ValidXMLCharField(help_text='Job title of the contact person.', max_length=100, verbose_name='job title', blank=True)),
                ('organisation', akvo.rsr.fields.ValidXMLCharField(help_text='The organisation that the contact person works for.', max_length=100, verbose_name='contact organisation', blank=True)),
                ('telephone', akvo.rsr.fields.ValidXMLCharField(help_text='Contact number for the contact person. Avoid giving personal contact details.', max_length=30, verbose_name='contact phone number', blank=True)),
                ('mailing_address', akvo.rsr.fields.ValidXMLCharField(help_text='Address of the contact person. Avoid giving personal contact details.', max_length=255, verbose_name='contact address', blank=True)),
                ('state', akvo.rsr.fields.ValidXMLCharField(help_text='(100 characters)', max_length=100, verbose_name='state', blank=True)),
                ('department', akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='department', blank=True)),
                ('website', models.URLField(help_text="The contact web address, if available. The web address should start with 'http://' or 'https://'.", verbose_name='contact website', blank=True)),
                ('country', models.ForeignKey(related_name='contacts', verbose_name='country', blank=True, to='rsr.Country', null=True)),
                ('project', models.ForeignKey(related_name='contacts', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'verbose_name': 'contact',
                'verbose_name_plural': 'contacts',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectCustomField',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='(max 255 characters)', max_length=255, verbose_name='name')),
                ('section', models.IntegerField(help_text='Select the section of the admin where the custom field should be displayed', verbose_name='admin section', choices=[(1, '01 - General information'), (2, '02 - Contact information'), (3, '03 - Project partners'), (4, '04 - Project descriptions'), (5, '05 - Results and indicators'), (6, '06 - Finance'), (7, '07 - Project locations'), (8, '08 - Project focus'), (9, '09 - Links and documents'), (10, '10 - Project comments')])),
                ('max_characters', models.IntegerField(help_text='Set the maximum amount of characters that the user is allowed to fill in. Leave empty or fill in 0 if there is no character limit.', null=True, verbose_name='maximum characters', blank=True)),
                ('help_text', akvo.rsr.fields.ValidXMLTextField(help_text='The help text to be displayed with the field in the admin. Leave empty if there is no need for a help text. (max 1000 characters)', max_length=1000, verbose_name='help text', blank=True)),
                ('value', akvo.rsr.fields.ValidXMLTextField(verbose_name='value', blank=True)),
                ('mandatory', models.BooleanField(default=False, help_text='Indicate whether this field is mandatory or not', verbose_name='mandatory')),
                ('order', models.PositiveSmallIntegerField(help_text='The order of the fields as they will be displayed in the project editor. Must be a positive number, and the lowest number will be shown on top.', verbose_name='order')),
                ('type', akvo.rsr.fields.ValidXMLCharField(default=b'text', help_text='Select the type of custom field. Text will show a text area in the project editor, and checkbox will show a checkbox.', max_length=20, verbose_name='type', choices=[(b'text', 'Text'), (b'boolean', 'Checkbox')])),
                ('project', models.ForeignKey(related_name='custom_fields', verbose_name='project', to='rsr.Project')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('url', models.URLField(help_text="Enter the online location of your document. The URL should start with 'http://' or 'https://'.", verbose_name='document url', blank=True)),
                ('document', models.FileField(help_text="You can upload a document to your project. To upload multiple documents, press the 'Add another document' link.<br>These documents will be stored on the RSR server and will be publicly available for users to download and view to gain further insight in the project activities.", upload_to=akvo.rsr.models.project_document.document_path, verbose_name='document', blank=True)),
                ('format', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This provides the code for the Internet Media Type ("MIME type") of the document, and includes pdf, msword, rtf, xml, csv, etc. For a list of commonly used MIME types, visit this link: <a href="http://www.sitepoint.com/web-foundations/mime-types-summary-list/" target="_blank">http://www.sitepoint.com/web-foundations/mime-types-summary-list/</a>.', max_length=75, verbose_name='document format', choices=[('application/1d-interleaved-parityfec', 'application/1d-interleaved-parityfec'), ('application/3gpdash-qoe-report+xml', 'application/3gpdash-qoe-report+xml'), ('application/3gpp-ims+xml', 'application/3gpp-ims+xml'), ('application/A2L', 'application/A2L'), ('application/activemessage', 'application/activemessage'), ('application/activemessage', 'application/activemessage'), ('application/alto-costmap+json', 'application/alto-costmap+json'), ('application/alto-costmapfilter+json', 'application/alto-costmapfilter+json'), ('application/alto-directory+json', 'application/alto-directory+json'), ('application/alto-endpointprop+json', 'application/alto-endpointprop+json'), ('application/alto-endpointpropparams+json', 'application/alto-endpointpropparams+json'), ('application/alto-endpointcost+json', 'application/alto-endpointcost+json'), ('application/alto-endpointcostparams+json', 'application/alto-endpointcostparams+json'), ('application/alto-error+json', 'application/alto-error+json'), ('application/alto-networkmapfilter+json', 'application/alto-networkmapfilter+json'), ('application/alto-networkmap+json', 'application/alto-networkmap+json'), ('application/AML', 'application/AML'), ('application/andrew-inset', 'application/andrew-inset'), ('application/applefile', 'application/applefile'), ('application/ATF', 'application/ATF'), ('application/ATFX', 'application/ATFX'), ('application/atom+xml', 'application/atom+xml'), ('application/atomcat+xml', 'application/atomcat+xml'), ('application/atomdeleted+xml', 'application/atomdeleted+xml'), ('application/atomicmail', 'application/atomicmail'), ('application/atomsvc+xml', 'application/atomsvc+xml'), ('application/ATXML', 'application/ATXML'), ('application/auth-policy+xml', 'application/auth-policy+xml'), ('application/bacnet-xdd+zip', 'application/bacnet-xdd+zip'), ('application/batch-SMTP', 'application/batch-SMTP'), ('application/beep+xml', 'application/beep+xml'), ('application/calendar+json', 'application/calendar+json'), ('application/calendar+xml', 'application/calendar+xml'), ('application/call-completion', 'application/call-completion'), ('application/CALS-1840', 'application/CALS-1840'), ('application/cbor', 'application/cbor'), ('application/ccmp+xml', 'application/ccmp+xml'), ('application/ccxml+xml', 'application/ccxml+xml'), ('application/CDFX+XML', 'application/CDFX+XML'), ('application/cdmi-capability', 'application/cdmi-capability'), ('application/cdmi-container', 'application/cdmi-container'), ('application/cdmi-domain', 'application/cdmi-domain'), ('application/cdmi-object', 'application/cdmi-object'), ('application/cdmi-queue', 'application/cdmi-queue'), ('application/cdni', 'application/cdni'), ('application/CEA', 'application/CEA'), ('application/cea-2018+xml', 'application/cea-2018+xml'), ('application/cellml+xml', 'application/cellml+xml'), ('application/cfw', 'application/cfw'), ('application/clue_info+xml', 'application/clue_info+xml'), ('application/cms', 'application/cms'), ('application/cnrp+xml', 'application/cnrp+xml'), ('application/coap-group+json', 'application/coap-group+json'), ('application/coap-payload', 'application/coap-payload'), ('application/commonground', 'application/commonground'), ('application/conference-info+xml', 'application/conference-info+xml'), ('application/cpl+xml', 'application/cpl+xml'), ('application/cose', 'application/cose'), ('application/cose-key', 'application/cose-key'), ('application/cose-key-set', 'application/cose-key-set'), ('application/csrattrs', 'application/csrattrs'), ('application/csta+xml', 'application/csta+xml'), ('application/CSTAdata+xml', 'application/CSTAdata+xml'), ('application/csvm+json', 'application/csvm+json'), ('application/cybercash', 'application/cybercash'), ('application/dash+xml', 'application/dash+xml'), ('application/dashdelta', 'application/dashdelta'), ('application/davmount+xml', 'application/davmount+xml'), ('application/dca-rft', 'application/dca-rft'), ('application/DCD', 'application/DCD'), ('application/dec-dx', 'application/dec-dx'), ('application/dialog-info+xml', 'application/dialog-info+xml'), ('application/dicom', 'application/dicom'), ('application/dicom+json', 'application/dicom+json'), ('application/dicom+xml', 'application/dicom+xml'), ('application/DII', 'application/DII'), ('application/DIT', 'application/DIT'), ('application/dns', 'application/dns'), ('application/dskpp+xml', 'application/dskpp+xml'), ('application/dssc+der', 'application/dssc+der'), ('application/dssc+xml', 'application/dssc+xml'), ('application/dvcs', 'application/dvcs'), ('application/ecmascript', 'application/ecmascript'), ('application/EDI-consent', 'application/EDI-consent'), ('application/EDIFACT', 'application/EDIFACT'), ('application/EDI-X12', 'application/EDI-X12'), ('application/efi', 'application/efi'), ('application/EmergencyCallData.Comment+xml', 'application/EmergencyCallData.Comment+xml'), ('application/EmergencyCallData.Control+xml', 'application/EmergencyCallData.Control+xml'), ('application/EmergencyCallData.DeviceInfo+xml', 'application/EmergencyCallData.DeviceInfo+xml'), ('application/EmergencyCallData.eCall.MSD', 'application/EmergencyCallData.eCall.MSD'), ('application/EmergencyCallData.ProviderInfo+xml', 'application/EmergencyCallData.ProviderInfo+xml'), ('application/EmergencyCallData.ServiceInfo+xml', 'application/EmergencyCallData.ServiceInfo+xml'), ('application/EmergencyCallData.SubscriberInfo+xml', 'application/EmergencyCallData.SubscriberInfo+xml'), ('application/EmergencyCallData.VEDS+xml', 'application/EmergencyCallData.VEDS+xml'), ('application/emma+xml', 'application/emma+xml'), ('application/emotionml+xml', 'application/emotionml+xml'), ('application/encaprtp', 'application/encaprtp'), ('application/epp+xml', 'application/epp+xml'), ('application/epub+zip', 'application/epub+zip'), ('application/eshop', 'application/eshop'), ('application/example', 'application/example'), ('application/exi', 'application/exi'), ('application/fastinfoset', 'application/fastinfoset'), ('application/fastsoap', 'application/fastsoap'), ('application/fdt+xml', 'application/fdt+xml'), ('application/fits', 'application/fits'), ('application/font-sfnt', 'application/font-sfnt'), ('application/font-tdpfr', 'application/font-tdpfr'), ('application/font-woff', 'application/font-woff'), ('application/framework-attributes+xml', 'application/framework-attributes+xml'), ('application/geo+json', 'application/geo+json'), ('application/geo+json-seq', 'application/geo+json-seq'), ('application/gml+xml', 'application/gml+xml'), ('application/gzip', 'application/gzip'), ('application/H224', 'application/H224'), ('application/held+xml', 'application/held+xml'), ('application/http', 'application/http'), ('application/hyperstudio', 'application/hyperstudio'), ('application/ibe-key-request+xml', 'application/ibe-key-request+xml'), ('application/ibe-pkg-reply+xml', 'application/ibe-pkg-reply+xml'), ('application/ibe-pp-data', 'application/ibe-pp-data'), ('application/iges', 'application/iges'), ('application/im-iscomposing+xml', 'application/im-iscomposing+xml'), ('application/index', 'application/index'), ('application/index.cmd', 'application/index.cmd'), ('application/index.obj', 'application/index.obj'), ('application/index.response', 'application/index.response'), ('application/index.vnd', 'application/index.vnd'), ('application/inkml+xml', 'application/inkml+xml'), ('application/iotp', 'application/iotp'), ('application/ipfix', 'application/ipfix'), ('application/ipp', 'application/ipp'), ('application/isup', 'application/isup'), ('application/its+xml', 'application/its+xml'), ('application/javascript', 'application/javascript'), ('application/jose', 'application/jose'), ('application/jose+json', 'application/jose+json'), ('application/jrd+json', 'application/jrd+json'), ('application/json', 'application/json'), ('application/json-patch+json', 'application/json-patch+json'), ('application/json-seq', 'application/json-seq'), ('application/jwk+json', 'application/jwk+json'), ('application/jwk-set+json', 'application/jwk-set+json'), ('application/jwt', 'application/jwt'), ('application/kpml-request+xml', 'application/kpml-request+xml'), ('application/kpml-response+xml', 'application/kpml-response+xml'), ('application/ld+json', 'application/ld+json'), ('application/lgr+xml', 'application/lgr+xml'), ('application/link-format', 'application/link-format'), ('application/load-control+xml', 'application/load-control+xml'), ('application/lost+xml', 'application/lost+xml'), ('application/lostsync+xml', 'application/lostsync+xml'), ('application/LXF', 'application/LXF'), ('application/mac-binhex40', 'application/mac-binhex40'), ('application/macwriteii', 'application/macwriteii'), ('application/mads+xml', 'application/mads+xml'), ('application/marc', 'application/marc'), ('application/marcxml+xml', 'application/marcxml+xml'), ('application/mathematica', 'application/mathematica'), ('application/mathml-content+xml', 'application/mathml-content+xml'), ('application/mathml-presentation+xml', 'application/mathml-presentation+xml'), ('application/mathml+xml', 'application/mathml+xml'), ('application/mbms-associated-procedure-description+xml', 'application/mbms-associated-procedure-description+xml'), ('application/mbms-deregister+xml', 'application/mbms-deregister+xml'), ('application/mbms-envelope+xml', 'application/mbms-envelope+xml'), ('application/mbms-msk-response+xml', 'application/mbms-msk-response+xml'), ('application/mbms-msk+xml', 'application/mbms-msk+xml'), ('application/mbms-protection-description+xml', 'application/mbms-protection-description+xml'), ('application/mbms-reception-report+xml', 'application/mbms-reception-report+xml'), ('application/mbms-register-response+xml', 'application/mbms-register-response+xml'), ('application/mbms-register+xml', 'application/mbms-register+xml'), ('application/mbms-schedule+xml', 'application/mbms-schedule+xml'), ('application/mbms-user-service-description+xml', 'application/mbms-user-service-description+xml'), ('application/mbox', 'application/mbox'), ('application/media_control+xml', 'application/media_control+xml'), ('application/media-policy-dataset+xml', 'application/media-policy-dataset+xml'), ('application/mediaservercontrol+xml', 'application/mediaservercontrol+xml'), ('application/merge-patch+json', 'application/merge-patch+json'), ('application/metalink4+xml', 'application/metalink4+xml'), ('application/mets+xml', 'application/mets+xml'), ('application/MF4', 'application/MF4'), ('application/mikey', 'application/mikey'), ('application/mods+xml', 'application/mods+xml'), ('application/moss-keys', 'application/moss-keys'), ('application/moss-signature', 'application/moss-signature'), ('application/mosskey-data', 'application/mosskey-data'), ('application/mosskey-request', 'application/mosskey-request'), ('application/mp21', 'application/mp21'), ('application/mp4', 'application/mp4'), ('application/mpeg4-generic', 'application/mpeg4-generic'), ('application/mpeg4-iod', 'application/mpeg4-iod'), ('application/mpeg4-iod-xmt', 'application/mpeg4-iod-xmt'), ('application/mrb-consumer+xml', 'application/mrb-consumer+xml'), ('application/mrb-publish+xml', 'application/mrb-publish+xml'), ('application/msc-ivr+xml', 'application/msc-ivr+xml'), ('application/msc-mixer+xml', 'application/msc-mixer+xml'), ('application/msword', 'application/msword'), ('application/mud+json', 'application/mud+json'), ('application/mxf', 'application/mxf'), ('application/n-quads', 'application/n-quads'), ('application/n-triples', 'application/n-triples'), ('application/nasdata', 'application/nasdata'), ('application/news-checkgroups', 'application/news-checkgroups'), ('application/news-groupinfo', 'application/news-groupinfo'), ('application/news-transmission', 'application/news-transmission'), ('application/nlsml+xml', 'application/nlsml+xml'), ('application/nss', 'application/nss'), ('application/ocsp-request', 'application/ocsp-request'), ('application/ocsp-response', 'application/ocsp-response'), ('application/octet-stream', 'application/octet-stream'), ('application/oda', 'application/oda'), ('application/ODX', 'application/ODX'), ('application/oebps-package+xml', 'application/oebps-package+xml'), ('application/ogg', 'application/ogg'), ('application/oxps', 'application/oxps'), ('application/p2p-overlay+xml', 'application/p2p-overlay+xml'), ('application/parityfec', 'application/parityfec'), ('application/patch-ops-error+xml', 'application/patch-ops-error+xml'), ('application/pdf', 'application/pdf'), ('application/PDX', 'application/PDX'), ('application/pgp-encrypted', 'application/pgp-encrypted'), ('application/pgp-keys', 'application/pgp-keys'), ('application/pgp-signature', 'application/pgp-signature'), ('application/pidf-diff+xml', 'application/pidf-diff+xml'), ('application/pidf+xml', 'application/pidf+xml'), ('application/pkcs10', 'application/pkcs10'), ('application/pkcs7-mime', 'application/pkcs7-mime'), ('application/pkcs7-signature', 'application/pkcs7-signature'), ('application/pkcs8', 'application/pkcs8'), ('application/pkcs12', 'application/pkcs12'), ('application/pkix-attr-cert', 'application/pkix-attr-cert'), ('application/pkix-cert', 'application/pkix-cert'), ('application/pkix-crl', 'application/pkix-crl'), ('application/pkix-pkipath', 'application/pkix-pkipath'), ('application/pkixcmp', 'application/pkixcmp'), ('application/pls+xml', 'application/pls+xml'), ('application/poc-settings+xml', 'application/poc-settings+xml'), ('application/postscript', 'application/postscript'), ('application/ppsp-tracker+json', 'application/ppsp-tracker+json'), ('application/problem+json', 'application/problem+json'), ('application/problem+xml', 'application/problem+xml'), ('application/provenance+xml', 'application/provenance+xml'), ('application/prs.alvestrand.titrax-sheet', 'application/prs.alvestrand.titrax-sheet'), ('application/prs.cww', 'application/prs.cww'), ('application/prs.hpub+zip', 'application/prs.hpub+zip'), ('application/prs.nprend', 'application/prs.nprend'), ('application/prs.plucker', 'application/prs.plucker'), ('application/prs.rdf-xml-crypt', 'application/prs.rdf-xml-crypt'), ('application/prs.xsf+xml', 'application/prs.xsf+xml'), ('application/pskc+xml', 'application/pskc+xml'), ('application/rdf+xml', 'application/rdf+xml'), ('application/qsig', 'application/qsig'), ('application/raptorfec', 'application/raptorfec'), ('application/rdap+json', 'application/rdap+json'), ('application/reginfo+xml', 'application/reginfo+xml'), ('application/relax-ng-compact-syntax', 'application/relax-ng-compact-syntax'), ('application/remote-printing', 'application/remote-printing'), ('application/reputon+json', 'application/reputon+json'), ('application/resource-lists-diff+xml', 'application/resource-lists-diff+xml'), ('application/resource-lists+xml', 'application/resource-lists+xml'), ('application/rfc+xml', 'application/rfc+xml'), ('application/riscos', 'application/riscos'), ('application/rlmi+xml', 'application/rlmi+xml'), ('application/rls-services+xml', 'application/rls-services+xml'), ('application/rpki-ghostbusters', 'application/rpki-ghostbusters'), ('application/rpki-manifest', 'application/rpki-manifest'), ('application/rpki-publication', 'application/rpki-publication'), ('application/rpki-roa', 'application/rpki-roa'), ('application/rpki-updown', 'application/rpki-updown'), ('application/rtf', 'application/rtf'), ('application/rtploopback', 'application/rtploopback'), ('application/rtx', 'application/rtx'), ('application/samlassertion+xml', 'application/samlassertion+xml'), ('application/samlmetadata+xml', 'application/samlmetadata+xml'), ('application/sbml+xml', 'application/sbml+xml'), ('application/scaip+xml', 'application/scaip+xml'), ('application/scim+json', 'application/scim+json'), ('application/scvp-cv-request', 'application/scvp-cv-request'), ('application/scvp-cv-response', 'application/scvp-cv-response'), ('application/scvp-vp-request', 'application/scvp-vp-request'), ('application/scvp-vp-response', 'application/scvp-vp-response'), ('application/sdp', 'application/sdp'), ('application/sep-exi', 'application/sep-exi'), ('application/sep+xml', 'application/sep+xml'), ('application/session-info', 'application/session-info'), ('application/set-payment', 'application/set-payment'), ('application/set-payment-initiation', 'application/set-payment-initiation'), ('application/set-registration', 'application/set-registration'), ('application/set-registration-initiation', 'application/set-registration-initiation'), ('application/sgml', 'application/sgml'), ('application/sgml-open-catalog', 'application/sgml-open-catalog'), ('application/shf+xml', 'application/shf+xml'), ('application/sieve', 'application/sieve'), ('application/simple-filter+xml', 'application/simple-filter+xml'), ('application/simple-message-summary', 'application/simple-message-summary'), ('application/simpleSymbolContainer', 'application/simpleSymbolContainer'), ('application/slate', 'application/slate'), ('application/smil', 'application/smil'), ('application/smil+xml', 'application/smil+xml'), ('application/smpte336m', 'application/smpte336m'), ('application/soap+fastinfoset', 'application/soap+fastinfoset'), ('application/soap+xml', 'application/soap+xml'), ('application/sparql-query', 'application/sparql-query'), ('application/sparql-results+xml', 'application/sparql-results+xml'), ('application/spirits-event+xml', 'application/spirits-event+xml'), ('application/sql', 'application/sql'), ('application/srgs', 'application/srgs'), ('application/srgs+xml', 'application/srgs+xml'), ('application/sru+xml', 'application/sru+xml'), ('application/ssml+xml', 'application/ssml+xml'), ('application/tamp-apex-update', 'application/tamp-apex-update'), ('application/tamp-apex-update-confirm', 'application/tamp-apex-update-confirm'), ('application/tamp-community-update', 'application/tamp-community-update'), ('application/tamp-community-update-confirm', 'application/tamp-community-update-confirm'), ('application/tamp-error', 'application/tamp-error'), ('application/tamp-sequence-adjust', 'application/tamp-sequence-adjust'), ('application/tamp-sequence-adjust-confirm', 'application/tamp-sequence-adjust-confirm'), ('application/tamp-status-query', 'application/tamp-status-query'), ('application/tamp-status-response', 'application/tamp-status-response'), ('application/tamp-update', 'application/tamp-update'), ('application/tamp-update-confirm', 'application/tamp-update-confirm'), ('application/tei+xml', 'application/tei+xml'), ('application/thraud+xml', 'application/thraud+xml'), ('application/timestamp-query', 'application/timestamp-query'), ('application/timestamp-reply', 'application/timestamp-reply'), ('application/timestamped-data', 'application/timestamped-data'), ('application/trig', 'application/trig'), ('application/ttml+xml', 'application/ttml+xml'), ('application/tve-trigger', 'application/tve-trigger'), ('application/ulpfec', 'application/ulpfec'), ('application/urc-grpsheet+xml', 'application/urc-grpsheet+xml'), ('application/urc-ressheet+xml', 'application/urc-ressheet+xml'), ('application/urc-targetdesc+xml', 'application/urc-targetdesc+xml'), ('application/urc-uisocketdesc+xml', 'application/urc-uisocketdesc+xml'), ('application/vcard+json', 'application/vcard+json'), ('application/vcard+xml', 'application/vcard+xml'), ('application/vemmi', 'application/vemmi'), ('application/vnd.1000minds.decision-model+xml', 'application/vnd.1000minds.decision-model+xml'), ('application/vnd.3gpp.access-transfer-events+xml', 'application/vnd.3gpp.access-transfer-events+xml'), ('application/vnd.3gpp.bsf+xml', 'application/vnd.3gpp.bsf+xml'), ('application/vnd.3gpp.mid-call+xml', 'application/vnd.3gpp.mid-call+xml'), ('application/vnd.3gpp.pic-bw-large', 'application/vnd.3gpp.pic-bw-large'), ('application/vnd.3gpp.pic-bw-small', 'application/vnd.3gpp.pic-bw-small'), ('application/vnd.3gpp.pic-bw-var', 'application/vnd.3gpp.pic-bw-var'), ('application/vnd.3gpp-prose-pc3ch+xml', 'application/vnd.3gpp-prose-pc3ch+xml'), ('application/vnd.3gpp-prose+xml', 'application/vnd.3gpp-prose+xml'), ('application/vnd.3gpp.sms', 'application/vnd.3gpp.sms'), ('application/vnd.3gpp.sms+xml', 'application/vnd.3gpp.sms+xml'), ('application/vnd.3gpp.srvcc-ext+xml', 'application/vnd.3gpp.srvcc-ext+xml'), ('application/vnd.3gpp.SRVCC-info+xml', 'application/vnd.3gpp.SRVCC-info+xml'), ('application/vnd.3gpp.state-and-event-info+xml', 'application/vnd.3gpp.state-and-event-info+xml'), ('application/vnd.3gpp.ussd+xml', 'application/vnd.3gpp.ussd+xml'), ('application/vnd.3gpp2.bcmcsinfo+xml', 'application/vnd.3gpp2.bcmcsinfo+xml'), ('application/vnd.3gpp2.sms', 'application/vnd.3gpp2.sms'), ('application/vnd.3gpp2.tcap', 'application/vnd.3gpp2.tcap'), ('application/vnd.3lightssoftware.imagescal', 'application/vnd.3lightssoftware.imagescal'), ('application/vnd.3M.Post-it-Notes', 'application/vnd.3M.Post-it-Notes'), ('application/vnd.accpac.simply.aso', 'application/vnd.accpac.simply.aso'), ('application/vnd.accpac.simply.imp', 'application/vnd.accpac.simply.imp'), ('application/vnd.acucobol', 'application/vnd.acucobol'), ('application/vnd.acucorp', 'application/vnd.acucorp'), ('application/vnd.adobe.flash.movie', 'application/vnd.adobe.flash.movie'), ('application/vnd.adobe.formscentral.fcdt', 'application/vnd.adobe.formscentral.fcdt'), ('application/vnd.adobe.fxp', 'application/vnd.adobe.fxp'), ('application/vnd.adobe.partial-upload', 'application/vnd.adobe.partial-upload'), ('application/vnd.adobe.xdp+xml', 'application/vnd.adobe.xdp+xml'), ('application/vnd.adobe.xfdf', 'application/vnd.adobe.xfdf'), ('application/vnd.aether.imp', 'application/vnd.aether.imp'), ('application/vnd.ah-barcode', 'application/vnd.ah-barcode'), ('application/vnd.ahead.space', 'application/vnd.ahead.space'), ('application/vnd.airzip.filesecure.azf', 'application/vnd.airzip.filesecure.azf'), ('application/vnd.airzip.filesecure.azs', 'application/vnd.airzip.filesecure.azs'), ('application/vnd.amazon.mobi8-ebook', 'application/vnd.amazon.mobi8-ebook'), ('application/vnd.americandynamics.acc', 'application/vnd.americandynamics.acc'), ('application/vnd.amiga.ami', 'application/vnd.amiga.ami'), ('application/vnd.amundsen.maze+xml', 'application/vnd.amundsen.maze+xml'), ('application/vnd.anki', 'application/vnd.anki'), ('application/vnd.anser-web-certificate-issue-initiation', 'application/vnd.anser-web-certificate-issue-initiation'), ('application/vnd.antix.game-component', 'application/vnd.antix.game-component'), ('application/vnd.apache.thrift.binary', 'application/vnd.apache.thrift.binary'), ('application/vnd.apache.thrift.compact', 'application/vnd.apache.thrift.compact'), ('application/vnd.apache.thrift.json', 'application/vnd.apache.thrift.json'), ('application/vnd.api+json', 'application/vnd.api+json'), ('application/vnd.apothekende.reservation+json', 'application/vnd.apothekende.reservation+json'), ('application/vnd.apple.mpegurl', 'application/vnd.apple.mpegurl'), ('application/vnd.apple.installer+xml', 'application/vnd.apple.installer+xml'), ('application/vnd.arastra.swi', 'application/vnd.arastra.swi'), ('application/vnd.aristanetworks.swi', 'application/vnd.aristanetworks.swi'), ('application/vnd.artsquare', 'application/vnd.artsquare'), ('application/vnd.astraea-software.iota', 'application/vnd.astraea-software.iota'), ('application/vnd.audiograph', 'application/vnd.audiograph'), ('application/vnd.autopackage', 'application/vnd.autopackage'), ('application/vnd.avistar+xml', 'application/vnd.avistar+xml'), ('application/vnd.balsamiq.bmml+xml', 'application/vnd.balsamiq.bmml+xml'), ('application/vnd.balsamiq.bmpr', 'application/vnd.balsamiq.bmpr'), ('application/vnd.bekitzur-stech+json', 'application/vnd.bekitzur-stech+json'), ('application/vnd.bint.med-content', 'application/vnd.bint.med-content'), ('application/vnd.biopax.rdf+xml', 'application/vnd.biopax.rdf+xml'), ('application/vnd.blueice.multipass', 'application/vnd.blueice.multipass'), ('application/vnd.bluetooth.ep.oob', 'application/vnd.bluetooth.ep.oob'), ('application/vnd.bluetooth.le.oob', 'application/vnd.bluetooth.le.oob'), ('application/vnd.bmi', 'application/vnd.bmi'), ('application/vnd.businessobjects', 'application/vnd.businessobjects'), ('application/vnd.cab-jscript', 'application/vnd.cab-jscript'), ('application/vnd.canon-cpdl', 'application/vnd.canon-cpdl'), ('application/vnd.canon-lips', 'application/vnd.canon-lips'), ('application/vnd.capasystems-pg+json', 'application/vnd.capasystems-pg+json'), ('application/vnd.cendio.thinlinc.clientconf', 'application/vnd.cendio.thinlinc.clientconf'), ('application/vnd.century-systems.tcp_stream', 'application/vnd.century-systems.tcp_stream'), ('application/vnd.chemdraw+xml', 'application/vnd.chemdraw+xml'), ('application/vnd.chess-pgn', 'application/vnd.chess-pgn'), ('application/vnd.chipnuts.karaoke-mmd', 'application/vnd.chipnuts.karaoke-mmd'), ('application/vnd.cinderella', 'application/vnd.cinderella'), ('application/vnd.cirpack.isdn-ext', 'application/vnd.cirpack.isdn-ext'), ('application/vnd.citationstyles.style+xml', 'application/vnd.citationstyles.style+xml'), ('application/vnd.claymore', 'application/vnd.claymore'), ('application/vnd.cloanto.rp9', 'application/vnd.cloanto.rp9'), ('application/vnd.clonk.c4group', 'application/vnd.clonk.c4group'), ('application/vnd.cluetrust.cartomobile-config', 'application/vnd.cluetrust.cartomobile-config'), ('application/vnd.cluetrust.cartomobile-config-pkg', 'application/vnd.cluetrust.cartomobile-config-pkg'), ('application/vnd.coffeescript', 'application/vnd.coffeescript'), ('application/vnd.collection.doc+json', 'application/vnd.collection.doc+json'), ('application/vnd.collection+json', 'application/vnd.collection+json'), ('application/vnd.collection.next+json', 'application/vnd.collection.next+json'), ('application/vnd.comicbook+zip', 'application/vnd.comicbook+zip'), ('application/vnd.commerce-battelle', 'application/vnd.commerce-battelle'), ('application/vnd.commonspace', 'application/vnd.commonspace'), ('application/vnd.coreos.ignition+json', 'application/vnd.coreos.ignition+json'), ('application/vnd.cosmocaller', 'application/vnd.cosmocaller'), ('application/vnd.contact.cmsg', 'application/vnd.contact.cmsg'), ('application/vnd.crick.clicker', 'application/vnd.crick.clicker'), ('application/vnd.crick.clicker.keyboard', 'application/vnd.crick.clicker.keyboard'), ('application/vnd.crick.clicker.palette', 'application/vnd.crick.clicker.palette'), ('application/vnd.crick.clicker.template', 'application/vnd.crick.clicker.template'), ('application/vnd.crick.clicker.wordbank', 'application/vnd.crick.clicker.wordbank'), ('application/vnd.criticaltools.wbs+xml', 'application/vnd.criticaltools.wbs+xml'), ('application/vnd.ctc-posml', 'application/vnd.ctc-posml'), ('application/vnd.ctct.ws+xml', 'application/vnd.ctct.ws+xml'), ('application/vnd.cups-pdf', 'application/vnd.cups-pdf'), ('application/vnd.cups-postscript', 'application/vnd.cups-postscript'), ('application/vnd.cups-ppd', 'application/vnd.cups-ppd'), ('application/vnd.cups-raster', 'application/vnd.cups-raster'), ('application/vnd.cups-raw', 'application/vnd.cups-raw'), ('application/vnd.curl', 'application/vnd.curl'), ('application/vnd.cyan.dean.root+xml', 'application/vnd.cyan.dean.root+xml'), ('application/vnd.cybank', 'application/vnd.cybank'), ('application/vnd.d2l.coursepackage1p0+zip', 'application/vnd.d2l.coursepackage1p0+zip'), ('application/vnd.dart', 'application/vnd.dart'), ('application/vnd.data-vision.rdz', 'application/vnd.data-vision.rdz'), ('application/vnd.datapackage+json', 'application/vnd.datapackage+json'), ('application/vnd.dataresource+json', 'application/vnd.dataresource+json'), ('application/vnd.debian.binary-package', 'application/vnd.debian.binary-package'), ('application/vnd.dece.data', 'application/vnd.dece.data'), ('application/vnd.dece.ttml+xml', 'application/vnd.dece.ttml+xml'), ('application/vnd.dece.unspecified', 'application/vnd.dece.unspecified'), ('application/vnd.dece.zip', 'application/vnd.dece.zip'), ('application/vnd.denovo.fcselayout-link', 'application/vnd.denovo.fcselayout-link'), ('application/vnd.desmume.movie', 'application/vnd.desmume.movie'), ('application/vnd.dir-bi.plate-dl-nosuffix', 'application/vnd.dir-bi.plate-dl-nosuffix'), ('application/vnd.dm.delegation+xml', 'application/vnd.dm.delegation+xml'), ('application/vnd.dna', 'application/vnd.dna'), ('application/vnd.document+json', 'application/vnd.document+json'), ('application/vnd.dolby.mobile.1', 'application/vnd.dolby.mobile.1'), ('application/vnd.dolby.mobile.2', 'application/vnd.dolby.mobile.2'), ('application/vnd.doremir.scorecloud-binary-document', 'application/vnd.doremir.scorecloud-binary-document'), ('application/vnd.dpgraph', 'application/vnd.dpgraph'), ('application/vnd.dreamfactory', 'application/vnd.dreamfactory'), ('application/vnd.drive+json', 'application/vnd.drive+json'), ('application/vnd.dtg.local', 'application/vnd.dtg.local'), ('application/vnd.dtg.local.flash', 'application/vnd.dtg.local.flash'), ('application/vnd.dtg.local.html', 'application/vnd.dtg.local.html'), ('application/vnd.dvb.ait', 'application/vnd.dvb.ait'), ('application/vnd.dvb.dvbj', 'application/vnd.dvb.dvbj'), ('application/vnd.dvb.esgcontainer', 'application/vnd.dvb.esgcontainer'), ('application/vnd.dvb.ipdcdftnotifaccess', 'application/vnd.dvb.ipdcdftnotifaccess'), ('application/vnd.dvb.ipdcesgaccess', 'application/vnd.dvb.ipdcesgaccess'), ('application/vnd.dvb.ipdcesgaccess2', 'application/vnd.dvb.ipdcesgaccess2'), ('application/vnd.dvb.ipdcesgpdd', 'application/vnd.dvb.ipdcesgpdd'), ('application/vnd.dvb.ipdcroaming', 'application/vnd.dvb.ipdcroaming'), ('application/vnd.dvb.iptv.alfec-base', 'application/vnd.dvb.iptv.alfec-base'), ('application/vnd.dvb.iptv.alfec-enhancement', 'application/vnd.dvb.iptv.alfec-enhancement'), ('application/vnd.dvb.notif-aggregate-root+xml', 'application/vnd.dvb.notif-aggregate-root+xml'), ('application/vnd.dvb.notif-container+xml', 'application/vnd.dvb.notif-container+xml'), ('application/vnd.dvb.notif-generic+xml', 'application/vnd.dvb.notif-generic+xml'), ('application/vnd.dvb.notif-ia-msglist+xml', 'application/vnd.dvb.notif-ia-msglist+xml'), ('application/vnd.dvb.notif-ia-registration-request+xml', 'application/vnd.dvb.notif-ia-registration-request+xml'), ('application/vnd.dvb.notif-ia-registration-response+xml', 'application/vnd.dvb.notif-ia-registration-response+xml'), ('application/vnd.dvb.notif-init+xml', 'application/vnd.dvb.notif-init+xml'), ('application/vnd.dvb.pfr', 'application/vnd.dvb.pfr'), ('application/vnd.dvb.service', 'application/vnd.dvb.service'), ('application/vnd.dxr', 'application/vnd.dxr'), ('application/vnd.dynageo', 'application/vnd.dynageo'), ('application/vnd.dzr', 'application/vnd.dzr'), ('application/vnd.easykaraoke.cdgdownload', 'application/vnd.easykaraoke.cdgdownload'), ('application/vnd.ecdis-update', 'application/vnd.ecdis-update'), ('application/vnd.ecowin.chart', 'application/vnd.ecowin.chart'), ('application/vnd.ecowin.filerequest', 'application/vnd.ecowin.filerequest'), ('application/vnd.ecowin.fileupdate', 'application/vnd.ecowin.fileupdate'), ('application/vnd.ecowin.series', 'application/vnd.ecowin.series'), ('application/vnd.ecowin.seriesrequest', 'application/vnd.ecowin.seriesrequest'), ('application/vnd.ecowin.seriesupdate', 'application/vnd.ecowin.seriesupdate'), ('application/vnd.efi.img', 'application/vnd.efi.img'), ('application/vnd.efi.iso', 'application/vnd.efi.iso'), ('application/vnd.emclient.accessrequest+xml', 'application/vnd.emclient.accessrequest+xml'), ('application/vnd.enliven', 'application/vnd.enliven'), ('application/vnd.enphase.envoy', 'application/vnd.enphase.envoy'), ('application/vnd.eprints.data+xml', 'application/vnd.eprints.data+xml'), ('application/vnd.epson.esf', 'application/vnd.epson.esf'), ('application/vnd.epson.msf', 'application/vnd.epson.msf'), ('application/vnd.epson.quickanime', 'application/vnd.epson.quickanime'), ('application/vnd.epson.salt', 'application/vnd.epson.salt'), ('application/vnd.epson.ssf', 'application/vnd.epson.ssf'), ('application/vnd.ericsson.quickcall', 'application/vnd.ericsson.quickcall'), ('application/vnd.espass-espass+zip', 'application/vnd.espass-espass+zip'), ('application/vnd.eszigno3+xml', 'application/vnd.eszigno3+xml'), ('application/vnd.etsi.aoc+xml', 'application/vnd.etsi.aoc+xml'), ('application/vnd.etsi.asic-s+zip', 'application/vnd.etsi.asic-s+zip'), ('application/vnd.etsi.asic-e+zip', 'application/vnd.etsi.asic-e+zip'), ('application/vnd.etsi.cug+xml', 'application/vnd.etsi.cug+xml'), ('application/vnd.etsi.iptvcommand+xml', 'application/vnd.etsi.iptvcommand+xml'), ('application/vnd.etsi.iptvdiscovery+xml', 'application/vnd.etsi.iptvdiscovery+xml'), ('application/vnd.etsi.iptvprofile+xml', 'application/vnd.etsi.iptvprofile+xml'), ('application/vnd.etsi.iptvsad-bc+xml', 'application/vnd.etsi.iptvsad-bc+xml'), ('application/vnd.etsi.iptvsad-cod+xml', 'application/vnd.etsi.iptvsad-cod+xml'), ('application/vnd.etsi.iptvsad-npvr+xml', 'application/vnd.etsi.iptvsad-npvr+xml'), ('application/vnd.etsi.iptvservice+xml', 'application/vnd.etsi.iptvservice+xml'), ('application/vnd.etsi.iptvsync+xml', 'application/vnd.etsi.iptvsync+xml'), ('application/vnd.etsi.iptvueprofile+xml', 'application/vnd.etsi.iptvueprofile+xml'), ('application/vnd.etsi.mcid+xml', 'application/vnd.etsi.mcid+xml'), ('application/vnd.etsi.mheg5', 'application/vnd.etsi.mheg5'), ('application/vnd.etsi.overload-control-policy-dataset+xml', 'application/vnd.etsi.overload-control-policy-dataset+xml'), ('application/vnd.etsi.pstn+xml', 'application/vnd.etsi.pstn+xml'), ('application/vnd.etsi.sci+xml', 'application/vnd.etsi.sci+xml'), ('application/vnd.etsi.simservs+xml', 'application/vnd.etsi.simservs+xml'), ('application/vnd.etsi.timestamp-token', 'application/vnd.etsi.timestamp-token'), ('application/vnd.etsi.tsl+xml', 'application/vnd.etsi.tsl+xml'), ('application/vnd.etsi.tsl.der', 'application/vnd.etsi.tsl.der'), ('application/vnd.evolv.ecig.theme', 'application/vnd.evolv.ecig.theme'), ('application/vnd.eudora.data', 'application/vnd.eudora.data'), ('application/vnd.ezpix-album', 'application/vnd.ezpix-album'), ('application/vnd.ezpix-package', 'application/vnd.ezpix-package'), ('application/vnd.f-secure.mobile', 'application/vnd.f-secure.mobile'), ('application/vnd.fastcopy-disk-image', 'application/vnd.fastcopy-disk-image'), ('application/vnd.fdf', 'application/vnd.fdf'), ('application/vnd.fdsn.mseed', 'application/vnd.fdsn.mseed'), ('application/vnd.fdsn.seed', 'application/vnd.fdsn.seed'), ('application/vnd.ffsns', 'application/vnd.ffsns'), ('application/vnd.filmit.zfc', 'application/vnd.filmit.zfc'), ('application/vnd.fints', 'application/vnd.fints'), ('application/vnd.firemonkeys.cloudcell', 'application/vnd.firemonkeys.cloudcell'), ('application/vnd.FloGraphIt', 'application/vnd.FloGraphIt'), ('application/vnd.fluxtime.clip', 'application/vnd.fluxtime.clip'), ('application/vnd.font-fontforge-sfd', 'application/vnd.font-fontforge-sfd'), ('application/vnd.framemaker', 'application/vnd.framemaker'), ('application/vnd.frogans.fnc', 'application/vnd.frogans.fnc'), ('application/vnd.frogans.ltf', 'application/vnd.frogans.ltf'), ('application/vnd.fsc.weblaunch', 'application/vnd.fsc.weblaunch'), ('application/vnd.fujitsu.oasys', 'application/vnd.fujitsu.oasys'), ('application/vnd.fujitsu.oasys2', 'application/vnd.fujitsu.oasys2'), ('application/vnd.fujitsu.oasys3', 'application/vnd.fujitsu.oasys3'), ('application/vnd.fujitsu.oasysgp', 'application/vnd.fujitsu.oasysgp'), ('application/vnd.fujitsu.oasysprs', 'application/vnd.fujitsu.oasysprs'), ('application/vnd.fujixerox.ART4', 'application/vnd.fujixerox.ART4'), ('application/vnd.fujixerox.ART-EX', 'application/vnd.fujixerox.ART-EX'), ('application/vnd.fujixerox.ddd', 'application/vnd.fujixerox.ddd'), ('application/vnd.fujixerox.docuworks', 'application/vnd.fujixerox.docuworks'), ('application/vnd.fujixerox.docuworks.binder', 'application/vnd.fujixerox.docuworks.binder'), ('application/vnd.fujixerox.docuworks.container', 'application/vnd.fujixerox.docuworks.container'), ('application/vnd.fujixerox.HBPL', 'application/vnd.fujixerox.HBPL'), ('application/vnd.fut-misnet', 'application/vnd.fut-misnet'), ('application/vnd.fuzzysheet', 'application/vnd.fuzzysheet'), ('application/vnd.genomatix.tuxedo', 'application/vnd.genomatix.tuxedo'), ('application/vnd.geo+json', 'application/vnd.geo+json'), ('application/vnd.geocube+xml', 'application/vnd.geocube+xml'), ('application/vnd.geogebra.file', 'application/vnd.geogebra.file'), ('application/vnd.geogebra.tool', 'application/vnd.geogebra.tool'), ('application/vnd.geometry-explorer', 'application/vnd.geometry-explorer'), ('application/vnd.geonext', 'application/vnd.geonext'), ('application/vnd.geoplan', 'application/vnd.geoplan'), ('application/vnd.geospace', 'application/vnd.geospace'), ('application/vnd.gerber', 'application/vnd.gerber'), ('application/vnd.globalplatform.card-content-mgt', 'application/vnd.globalplatform.card-content-mgt'), ('application/vnd.globalplatform.card-content-mgt-response', 'application/vnd.globalplatform.card-content-mgt-response'), ('application/vnd.gmx', 'application/vnd.gmx'), ('application/vnd.google-earth.kml+xml', 'application/vnd.google-earth.kml+xml'), ('application/vnd.google-earth.kmz', 'application/vnd.google-earth.kmz'), ('application/vnd.gov.sk.e-form+xml', 'application/vnd.gov.sk.e-form+xml'), ('application/vnd.gov.sk.e-form+zip', 'application/vnd.gov.sk.e-form+zip'), ('application/vnd.gov.sk.xmldatacontainer+xml', 'application/vnd.gov.sk.xmldatacontainer+xml'), ('application/vnd.grafeq', 'application/vnd.grafeq'), ('application/vnd.gridmp', 'application/vnd.gridmp'), ('application/vnd.groove-account', 'application/vnd.groove-account'), ('application/vnd.groove-help', 'application/vnd.groove-help'), ('application/vnd.groove-identity-message', 'application/vnd.groove-identity-message'), ('application/vnd.groove-injector', 'application/vnd.groove-injector'), ('application/vnd.groove-tool-message', 'application/vnd.groove-tool-message'), ('application/vnd.groove-tool-template', 'application/vnd.groove-tool-template'), ('application/vnd.groove-vcard', 'application/vnd.groove-vcard'), ('application/vnd.hal+json', 'application/vnd.hal+json'), ('application/vnd.hal+xml', 'application/vnd.hal+xml'), ('application/vnd.HandHeld-Entertainment+xml', 'application/vnd.HandHeld-Entertainment+xml'), ('application/vnd.hbci', 'application/vnd.hbci'), ('application/vnd.hc+json', 'application/vnd.hc+json'), ('application/vnd.hcl-bireports', 'application/vnd.hcl-bireports'), ('application/vnd.hdt', 'application/vnd.hdt'), ('application/vnd.heroku+json', 'application/vnd.heroku+json'), ('application/vnd.hhe.lesson-player', 'application/vnd.hhe.lesson-player'), ('application/vnd.hp-HPGL', 'application/vnd.hp-HPGL'), ('application/vnd.hp-hpid', 'application/vnd.hp-hpid'), ('application/vnd.hp-hps', 'application/vnd.hp-hps'), ('application/vnd.hp-jlyt', 'application/vnd.hp-jlyt'), ('application/vnd.hp-PCL', 'application/vnd.hp-PCL'), ('application/vnd.hp-PCLXL', 'application/vnd.hp-PCLXL'), ('application/vnd.httphone', 'application/vnd.httphone'), ('application/vnd.hydrostatix.sof-data', 'application/vnd.hydrostatix.sof-data'), ('application/vnd.hyper-item+json', 'application/vnd.hyper-item+json'), ('application/vnd.hyperdrive+json', 'application/vnd.hyperdrive+json'), ('application/vnd.hzn-3d-crossword', 'application/vnd.hzn-3d-crossword'), ('application/vnd.ibm.afplinedata', 'application/vnd.ibm.afplinedata'), ('application/vnd.ibm.electronic-media', 'application/vnd.ibm.electronic-media'), ('application/vnd.ibm.MiniPay', 'application/vnd.ibm.MiniPay'), ('application/vnd.ibm.modcap', 'application/vnd.ibm.modcap'), ('application/vnd.ibm.rights-management', 'application/vnd.ibm.rights-management'), ('application/vnd.ibm.secure-container', 'application/vnd.ibm.secure-container'), ('application/vnd.iccprofile', 'application/vnd.iccprofile'), ('application/vnd.ieee.1905', 'application/vnd.ieee.1905'), ('application/vnd.igloader', 'application/vnd.igloader'), ('application/vnd.imagemeter.folder+zip', 'application/vnd.imagemeter.folder+zip'), ('application/vnd.imagemeter.image+zip', 'application/vnd.imagemeter.image+zip'), ('application/vnd.immervision-ivp', 'application/vnd.immervision-ivp'), ('application/vnd.immervision-ivu', 'application/vnd.immervision-ivu'), ('application/vnd.ims.imsccv1p1', 'application/vnd.ims.imsccv1p1'), ('application/vnd.ims.imsccv1p2', 'application/vnd.ims.imsccv1p2'), ('application/vnd.ims.imsccv1p3', 'application/vnd.ims.imsccv1p3'), ('application/vnd.ims.lis.v2.result+json', 'application/vnd.ims.lis.v2.result+json'), ('application/vnd.ims.lti.v2.toolconsumerprofile+json', 'application/vnd.ims.lti.v2.toolconsumerprofile+json'), ('application/vnd.ims.lti.v2.toolproxy.id+json', 'application/vnd.ims.lti.v2.toolproxy.id+json'), ('application/vnd.ims.lti.v2.toolproxy+json', 'application/vnd.ims.lti.v2.toolproxy+json'), ('application/vnd.ims.lti.v2.toolsettings+json', 'application/vnd.ims.lti.v2.toolsettings+json'), ('application/vnd.ims.lti.v2.toolsettings.simple+json', 'application/vnd.ims.lti.v2.toolsettings.simple+json'), ('application/vnd.informedcontrol.rms+xml', 'application/vnd.informedcontrol.rms+xml'), ('application/vnd.infotech.project', 'application/vnd.infotech.project'), ('application/vnd.infotech.project+xml', 'application/vnd.infotech.project+xml'), ('application/vnd.informix-visionary', 'application/vnd.informix-visionary'), ('application/vnd.innopath.wamp.notification', 'application/vnd.innopath.wamp.notification'), ('application/vnd.insors.igm', 'application/vnd.insors.igm'), ('application/vnd.intercon.formnet', 'application/vnd.intercon.formnet'), ('application/vnd.intergeo', 'application/vnd.intergeo'), ('application/vnd.intertrust.digibox', 'application/vnd.intertrust.digibox'), ('application/vnd.intertrust.nncp', 'application/vnd.intertrust.nncp'), ('application/vnd.intu.qbo', 'application/vnd.intu.qbo'), ('application/vnd.intu.qfx', 'application/vnd.intu.qfx'), ('application/vnd.iptc.g2.catalogitem+xml', 'application/vnd.iptc.g2.catalogitem+xml'), ('application/vnd.iptc.g2.conceptitem+xml', 'application/vnd.iptc.g2.conceptitem+xml'), ('application/vnd.iptc.g2.knowledgeitem+xml', 'application/vnd.iptc.g2.knowledgeitem+xml'), ('application/vnd.iptc.g2.newsitem+xml', 'application/vnd.iptc.g2.newsitem+xml'), ('application/vnd.iptc.g2.newsmessage+xml', 'application/vnd.iptc.g2.newsmessage+xml'), ('application/vnd.iptc.g2.packageitem+xml', 'application/vnd.iptc.g2.packageitem+xml'), ('application/vnd.iptc.g2.planningitem+xml', 'application/vnd.iptc.g2.planningitem+xml'), ('application/vnd.ipunplugged.rcprofile', 'application/vnd.ipunplugged.rcprofile'), ('application/vnd.irepository.package+xml', 'application/vnd.irepository.package+xml'), ('application/vnd.is-xpr', 'application/vnd.is-xpr'), ('application/vnd.isac.fcs', 'application/vnd.isac.fcs'), ('application/vnd.jam', 'application/vnd.jam'), ('application/vnd.japannet-directory-service', 'application/vnd.japannet-directory-service'), ('application/vnd.japannet-jpnstore-wakeup', 'application/vnd.japannet-jpnstore-wakeup'), ('application/vnd.japannet-payment-wakeup', 'application/vnd.japannet-payment-wakeup'), ('application/vnd.japannet-registration', 'application/vnd.japannet-registration'), ('application/vnd.japannet-registration-wakeup', 'application/vnd.japannet-registration-wakeup'), ('application/vnd.japannet-setstore-wakeup', 'application/vnd.japannet-setstore-wakeup'), ('application/vnd.japannet-verification', 'application/vnd.japannet-verification'), ('application/vnd.japannet-verification-wakeup', 'application/vnd.japannet-verification-wakeup'), ('application/vnd.jcp.javame.midlet-rms', 'application/vnd.jcp.javame.midlet-rms'), ('application/vnd.jisp', 'application/vnd.jisp'), ('application/vnd.joost.joda-archive', 'application/vnd.joost.joda-archive'), ('application/vnd.jsk.isdn-ngn', 'application/vnd.jsk.isdn-ngn'), ('application/vnd.kahootz', 'application/vnd.kahootz'), ('application/vnd.kde.karbon', 'application/vnd.kde.karbon'), ('application/vnd.kde.kchart', 'application/vnd.kde.kchart'), ('application/vnd.kde.kformula', 'application/vnd.kde.kformula'), ('application/vnd.kde.kivio', 'application/vnd.kde.kivio'), ('application/vnd.kde.kontour', 'application/vnd.kde.kontour'), ('application/vnd.kde.kpresenter', 'application/vnd.kde.kpresenter'), ('application/vnd.kde.kspread', 'application/vnd.kde.kspread'), ('application/vnd.kde.kword', 'application/vnd.kde.kword'), ('application/vnd.kenameaapp', 'application/vnd.kenameaapp'), ('application/vnd.kidspiration', 'application/vnd.kidspiration'), ('application/vnd.Kinar', 'application/vnd.Kinar'), ('application/vnd.koan', 'application/vnd.koan'), ('application/vnd.kodak-descriptor', 'application/vnd.kodak-descriptor'), ('application/vnd.las.las+json', 'application/vnd.las.las+json'), ('application/vnd.las.las+xml', 'application/vnd.las.las+xml'), ('application/vnd.liberty-request+xml', 'application/vnd.liberty-request+xml'), ('application/vnd.llamagraphics.life-balance.desktop', 'application/vnd.llamagraphics.life-balance.desktop'), ('application/vnd.llamagraphics.life-balance.exchange+xml', 'application/vnd.llamagraphics.life-balance.exchange+xml'), ('application/vnd.lotus-1-2-3', 'application/vnd.lotus-1-2-3'), ('application/vnd.lotus-approach', 'application/vnd.lotus-approach'), ('application/vnd.lotus-freelance', 'application/vnd.lotus-freelance'), ('application/vnd.lotus-notes', 'application/vnd.lotus-notes'), ('application/vnd.lotus-organizer', 'application/vnd.lotus-organizer'), ('application/vnd.lotus-screencam', 'application/vnd.lotus-screencam'), ('application/vnd.lotus-wordpro', 'application/vnd.lotus-wordpro'), ('application/vnd.macports.portpkg', 'application/vnd.macports.portpkg'), ('application/vnd.macports.portpkg', 'application/vnd.macports.portpkg'), ('application/vnd.mapbox-vector-tile', 'application/vnd.mapbox-vector-tile'), ('application/vnd.marlin.drm.actiontoken+xml', 'application/vnd.marlin.drm.actiontoken+xml'), ('application/vnd.marlin.drm.conftoken+xml', 'application/vnd.marlin.drm.conftoken+xml'), ('application/vnd.marlin.drm.license+xml', 'application/vnd.marlin.drm.license+xml'), ('application/vnd.marlin.drm.mdcf', 'application/vnd.marlin.drm.mdcf'), ('application/vnd.mason+json', 'application/vnd.mason+json'), ('application/vnd.maxmind.maxmind-db', 'application/vnd.maxmind.maxmind-db'), ('application/vnd.mcd', 'application/vnd.mcd'), ('application/vnd.medcalcdata', 'application/vnd.medcalcdata'), ('application/vnd.mediastation.cdkey', 'application/vnd.mediastation.cdkey'), ('application/vnd.meridian-slingshot', 'application/vnd.meridian-slingshot'), ('application/vnd.MFER', 'application/vnd.MFER'), ('application/vnd.mfmp', 'application/vnd.mfmp'), ('application/vnd.micro+json', 'application/vnd.micro+json'), ('application/vnd.micrografx.flo', 'application/vnd.micrografx.flo'), ('application/vnd.micrografx.igx', 'application/vnd.micrografx.igx'), ('application/vnd.microsoft.portable-executable', 'application/vnd.microsoft.portable-executable'), ('application/vnd.microsoft.windows.thumbnail-cache', 'application/vnd.microsoft.windows.thumbnail-cache'), ('application/vnd.miele+json', 'application/vnd.miele+json'), ('application/vnd.mif', 'application/vnd.mif'), ('application/vnd.minisoft-hp3000-save', 'application/vnd.minisoft-hp3000-save'), ('application/vnd.mitsubishi.misty-guard.trustweb', 'application/vnd.mitsubishi.misty-guard.trustweb'), ('application/vnd.Mobius.DAF', 'application/vnd.Mobius.DAF'), ('application/vnd.Mobius.DIS', 'application/vnd.Mobius.DIS'), ('application/vnd.Mobius.MBK', 'application/vnd.Mobius.MBK'), ('application/vnd.Mobius.MQY', 'application/vnd.Mobius.MQY'), ('application/vnd.Mobius.MSL', 'application/vnd.Mobius.MSL'), ('application/vnd.Mobius.PLC', 'application/vnd.Mobius.PLC'), ('application/vnd.Mobius.TXF', 'application/vnd.Mobius.TXF'), ('application/vnd.mophun.application', 'application/vnd.mophun.application'), ('application/vnd.mophun.certificate', 'application/vnd.mophun.certificate'), ('application/vnd.motorola.flexsuite', 'application/vnd.motorola.flexsuite'), ('application/vnd.motorola.flexsuite.adsi', 'application/vnd.motorola.flexsuite.adsi'), ('application/vnd.motorola.flexsuite.fis', 'application/vnd.motorola.flexsuite.fis'), ('application/vnd.motorola.flexsuite.gotap', 'application/vnd.motorola.flexsuite.gotap'), ('application/vnd.motorola.flexsuite.kmr', 'application/vnd.motorola.flexsuite.kmr'), ('application/vnd.motorola.flexsuite.ttc', 'application/vnd.motorola.flexsuite.ttc'), ('application/vnd.motorola.flexsuite.wem', 'application/vnd.motorola.flexsuite.wem'), ('application/vnd.motorola.iprm', 'application/vnd.motorola.iprm'), ('application/vnd.mozilla.xul+xml', 'application/vnd.mozilla.xul+xml'), ('application/vnd.ms-artgalry', 'application/vnd.ms-artgalry'), ('application/vnd.ms-asf', 'application/vnd.ms-asf'), ('application/vnd.ms-cab-compressed', 'application/vnd.ms-cab-compressed'), ('application/vnd.ms-3mfdocument', 'application/vnd.ms-3mfdocument'), ('application/vnd.ms-excel', 'application/vnd.ms-excel'), ('application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12'), ('application/vnd.ms-excel.sheet.binary.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'), ('application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.sheet.macroEnabled.12'), ('application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12'), ('application/vnd.ms-fontobject', 'application/vnd.ms-fontobject'), ('application/vnd.ms-htmlhelp', 'application/vnd.ms-htmlhelp'), ('application/vnd.ms-ims', 'application/vnd.ms-ims'), ('application/vnd.ms-lrm', 'application/vnd.ms-lrm'), ('application/vnd.ms-office.activeX+xml', 'application/vnd.ms-office.activeX+xml'), ('application/vnd.ms-officetheme', 'application/vnd.ms-officetheme'), ('application/vnd.ms-playready.initiator+xml', 'application/vnd.ms-playready.initiator+xml'), ('application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint'), ('application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.addin.macroEnabled.12'), ('application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'), ('application/vnd.ms-powerpoint.slide.macroEnabled.12', 'application/vnd.ms-powerpoint.slide.macroEnabled.12'), ('application/vnd.ms-powerpoint.slideshow.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'), ('application/vnd.ms-powerpoint.template.macroEnabled.12', 'application/vnd.ms-powerpoint.template.macroEnabled.12'), ('application/vnd.ms-PrintDeviceCapabilities+xml', 'application/vnd.ms-PrintDeviceCapabilities+xml'), ('application/vnd.ms-PrintSchemaTicket+xml', 'application/vnd.ms-PrintSchemaTicket+xml'), ('application/vnd.ms-project', 'application/vnd.ms-project'), ('application/vnd.ms-tnef', 'application/vnd.ms-tnef'), ('application/vnd.ms-windows.devicepairing', 'application/vnd.ms-windows.devicepairing'), ('application/vnd.ms-windows.nwprinting.oob', 'application/vnd.ms-windows.nwprinting.oob'), ('application/vnd.ms-windows.printerpairing', 'application/vnd.ms-windows.printerpairing'), ('application/vnd.ms-windows.wsd.oob', 'application/vnd.ms-windows.wsd.oob'), ('application/vnd.ms-wmdrm.lic-chlg-req', 'application/vnd.ms-wmdrm.lic-chlg-req'), ('application/vnd.ms-wmdrm.lic-resp', 'application/vnd.ms-wmdrm.lic-resp'), ('application/vnd.ms-wmdrm.meter-chlg-req', 'application/vnd.ms-wmdrm.meter-chlg-req'), ('application/vnd.ms-wmdrm.meter-resp', 'application/vnd.ms-wmdrm.meter-resp'), ('application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.document.macroEnabled.12'), ('application/vnd.ms-word.template.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'), ('application/vnd.ms-works', 'application/vnd.ms-works'), ('application/vnd.ms-wpl', 'application/vnd.ms-wpl'), ('application/vnd.ms-xpsdocument', 'application/vnd.ms-xpsdocument'), ('application/vnd.msa-disk-image', 'application/vnd.msa-disk-image'), ('application/vnd.mseq', 'application/vnd.mseq'), ('application/vnd.msign', 'application/vnd.msign'), ('application/vnd.multiad.creator', 'application/vnd.multiad.creator'), ('application/vnd.multiad.creator.cif', 'application/vnd.multiad.creator.cif'), ('application/vnd.musician', 'application/vnd.musician'), ('application/vnd.music-niff', 'application/vnd.music-niff'), ('application/vnd.muvee.style', 'application/vnd.muvee.style'), ('application/vnd.mynfc', 'application/vnd.mynfc'), ('application/vnd.ncd.control', 'application/vnd.ncd.control'), ('application/vnd.ncd.reference', 'application/vnd.ncd.reference'), ('application/vnd.nearst.inv+json', 'application/vnd.nearst.inv+json'), ('application/vnd.nervana', 'application/vnd.nervana'), ('application/vnd.netfpx', 'application/vnd.netfpx'), ('application/vnd.neurolanguage.nlu', 'application/vnd.neurolanguage.nlu'), ('application/vnd.nintendo.snes.rom', 'application/vnd.nintendo.snes.rom'), ('application/vnd.nintendo.nitro.rom', 'application/vnd.nintendo.nitro.rom'), ('application/vnd.nitf', 'application/vnd.nitf'), ('application/vnd.noblenet-directory', 'application/vnd.noblenet-directory'), ('application/vnd.noblenet-sealer', 'application/vnd.noblenet-sealer'), ('application/vnd.noblenet-web', 'application/vnd.noblenet-web'), ('application/vnd.nokia.catalogs', 'application/vnd.nokia.catalogs'), ('application/vnd.nokia.conml+wbxml', 'application/vnd.nokia.conml+wbxml'), ('application/vnd.nokia.conml+xml', 'application/vnd.nokia.conml+xml'), ('application/vnd.nokia.iptv.config+xml', 'application/vnd.nokia.iptv.config+xml'), ('application/vnd.nokia.iSDS-radio-presets', 'application/vnd.nokia.iSDS-radio-presets'), ('application/vnd.nokia.landmark+wbxml', 'application/vnd.nokia.landmark+wbxml'), ('application/vnd.nokia.landmark+xml', 'application/vnd.nokia.landmark+xml'), ('application/vnd.nokia.landmarkcollection+xml', 'application/vnd.nokia.landmarkcollection+xml'), ('application/vnd.nokia.ncd', 'application/vnd.nokia.ncd'), ('application/vnd.nokia.n-gage.ac+xml', 'application/vnd.nokia.n-gage.ac+xml'), ('application/vnd.nokia.n-gage.data', 'application/vnd.nokia.n-gage.data'), ('application/vnd.nokia.n-gage.symbian.install', 'application/vnd.nokia.n-gage.symbian.install'), ('application/vnd.nokia.pcd+wbxml', 'application/vnd.nokia.pcd+wbxml'), ('application/vnd.nokia.pcd+xml', 'application/vnd.nokia.pcd+xml'), ('application/vnd.nokia.radio-preset', 'application/vnd.nokia.radio-preset'), ('application/vnd.nokia.radio-presets', 'application/vnd.nokia.radio-presets'), ('application/vnd.novadigm.EDM', 'application/vnd.novadigm.EDM'), ('application/vnd.novadigm.EDX', 'application/vnd.novadigm.EDX'), ('application/vnd.novadigm.EXT', 'application/vnd.novadigm.EXT'), ('application/vnd.ntt-local.content-share', 'application/vnd.ntt-local.content-share'), ('application/vnd.ntt-local.file-transfer', 'application/vnd.ntt-local.file-transfer'), ('application/vnd.ntt-local.ogw_remote-access', 'application/vnd.ntt-local.ogw_remote-access'), ('application/vnd.ntt-local.sip-ta_remote', 'application/vnd.ntt-local.sip-ta_remote'), ('application/vnd.ntt-local.sip-ta_tcp_stream', 'application/vnd.ntt-local.sip-ta_tcp_stream'), ('application/vnd.oasis.opendocument.chart', 'application/vnd.oasis.opendocument.chart'), ('application/vnd.oasis.opendocument.chart-template', 'application/vnd.oasis.opendocument.chart-template'), ('application/vnd.oasis.opendocument.database', 'application/vnd.oasis.opendocument.database'), ('application/vnd.oasis.opendocument.formula', 'application/vnd.oasis.opendocument.formula'), ('application/vnd.oasis.opendocument.formula-template', 'application/vnd.oasis.opendocument.formula-template'), ('application/vnd.oasis.opendocument.graphics', 'application/vnd.oasis.opendocument.graphics'), ('application/vnd.oasis.opendocument.graphics-template', 'application/vnd.oasis.opendocument.graphics-template'), ('application/vnd.oasis.opendocument.image', 'application/vnd.oasis.opendocument.image'), ('application/vnd.oasis.opendocument.image-template', 'application/vnd.oasis.opendocument.image-template'), ('application/vnd.oasis.opendocument.presentation', 'application/vnd.oasis.opendocument.presentation'), ('application/vnd.oasis.opendocument.presentation-template', 'application/vnd.oasis.opendocument.presentation-template'), ('application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.spreadsheet'), ('application/vnd.oasis.opendocument.spreadsheet-template', 'application/vnd.oasis.opendocument.spreadsheet-template'), ('application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.text'), ('application/vnd.oasis.opendocument.text-master', 'application/vnd.oasis.opendocument.text-master'), ('application/vnd.oasis.opendocument.text-template', 'application/vnd.oasis.opendocument.text-template'), ('application/vnd.oasis.opendocument.text-web', 'application/vnd.oasis.opendocument.text-web'), ('application/vnd.obn', 'application/vnd.obn'), ('application/vnd.ocf+cbor', 'application/vnd.ocf+cbor'), ('application/vnd.oftn.l10n+json', 'application/vnd.oftn.l10n+json'), ('application/vnd.oipf.contentaccessdownload+xml', 'application/vnd.oipf.contentaccessdownload+xml'), ('application/vnd.oipf.contentaccessstreaming+xml', 'application/vnd.oipf.contentaccessstreaming+xml'), ('application/vnd.oipf.cspg-hexbinary', 'application/vnd.oipf.cspg-hexbinary'), ('application/vnd.oipf.dae.svg+xml', 'application/vnd.oipf.dae.svg+xml'), ('application/vnd.oipf.dae.xhtml+xml', 'application/vnd.oipf.dae.xhtml+xml'), ('application/vnd.oipf.mippvcontrolmessage+xml', 'application/vnd.oipf.mippvcontrolmessage+xml'), ('application/vnd.oipf.pae.gem', 'application/vnd.oipf.pae.gem'), ('application/vnd.oipf.spdiscovery+xml', 'application/vnd.oipf.spdiscovery+xml'), ('application/vnd.oipf.spdlist+xml', 'application/vnd.oipf.spdlist+xml'), ('application/vnd.oipf.ueprofile+xml', 'application/vnd.oipf.ueprofile+xml'), ('application/vnd.oipf.userprofile+xml', 'application/vnd.oipf.userprofile+xml'), ('application/vnd.olpc-sugar', 'application/vnd.olpc-sugar'), ('application/vnd.oma.bcast.associated-procedure-parameter+xml', 'application/vnd.oma.bcast.associated-procedure-parameter+xml'), ('application/vnd.oma.bcast.drm-trigger+xml', 'application/vnd.oma.bcast.drm-trigger+xml'), ('application/vnd.oma.bcast.imd+xml', 'application/vnd.oma.bcast.imd+xml'), ('application/vnd.oma.bcast.ltkm', 'application/vnd.oma.bcast.ltkm'), ('application/vnd.oma.bcast.notification+xml', 'application/vnd.oma.bcast.notification+xml'), ('application/vnd.oma.bcast.provisioningtrigger', 'application/vnd.oma.bcast.provisioningtrigger'), ('application/vnd.oma.bcast.sgboot', 'application/vnd.oma.bcast.sgboot'), ('application/vnd.oma.bcast.sgdd+xml', 'application/vnd.oma.bcast.sgdd+xml'), ('application/vnd.oma.bcast.sgdu', 'application/vnd.oma.bcast.sgdu'), ('application/vnd.oma.bcast.simple-symbol-container', 'application/vnd.oma.bcast.simple-symbol-container'), ('application/vnd.oma.bcast.smartcard-trigger+xml', 'application/vnd.oma.bcast.smartcard-trigger+xml'), ('application/vnd.oma.bcast.sprov+xml', 'application/vnd.oma.bcast.sprov+xml'), ('application/vnd.oma.bcast.stkm', 'application/vnd.oma.bcast.stkm'), ('application/vnd.oma.cab-address-book+xml', 'application/vnd.oma.cab-address-book+xml'), ('application/vnd.oma.cab-feature-handler+xml', 'application/vnd.oma.cab-feature-handler+xml'), ('application/vnd.oma.cab-pcc+xml', 'application/vnd.oma.cab-pcc+xml'), ('application/vnd.oma.cab-subs-invite+xml', 'application/vnd.oma.cab-subs-invite+xml'), ('application/vnd.oma.cab-user-prefs+xml', 'application/vnd.oma.cab-user-prefs+xml'), ('application/vnd.oma.dcd', 'application/vnd.oma.dcd'), ('application/vnd.oma.dcdc', 'application/vnd.oma.dcdc'), ('application/vnd.oma.dd2+xml', 'application/vnd.oma.dd2+xml'), ('application/vnd.oma.drm.risd+xml', 'application/vnd.oma.drm.risd+xml'), ('application/vnd.oma.group-usage-list+xml', 'application/vnd.oma.group-usage-list+xml'), ('application/vnd.oma.lwm2m+json', 'application/vnd.oma.lwm2m+json'), ('application/vnd.oma.lwm2m+tlv', 'application/vnd.oma.lwm2m+tlv'), ('application/vnd.oma.pal+xml', 'application/vnd.oma.pal+xml'), ('application/vnd.oma.poc.detailed-progress-report+xml', 'application/vnd.oma.poc.detailed-progress-report+xml'), ('application/vnd.oma.poc.final-report+xml', 'application/vnd.oma.poc.final-report+xml'), ('application/vnd.oma.poc.groups+xml', 'application/vnd.oma.poc.groups+xml'), ('application/vnd.oma.poc.invocation-descriptor+xml', 'application/vnd.oma.poc.invocation-descriptor+xml'), ('application/vnd.oma.poc.optimized-progress-report+xml', 'application/vnd.oma.poc.optimized-progress-report+xml'), ('application/vnd.oma.push', 'application/vnd.oma.push'), ('application/vnd.oma.scidm.messages+xml', 'application/vnd.oma.scidm.messages+xml'), ('application/vnd.oma.xcap-directory+xml', 'application/vnd.oma.xcap-directory+xml'), ('application/vnd.omads-email+xml', 'application/vnd.omads-email+xml'), ('application/vnd.omads-file+xml', 'application/vnd.omads-file+xml'), ('application/vnd.omads-folder+xml', 'application/vnd.omads-folder+xml'), ('application/vnd.omaloc-supl-init', 'application/vnd.omaloc-supl-init'), ('application/vnd.oma-scws-config', 'application/vnd.oma-scws-config'), ('application/vnd.oma-scws-http-request', 'application/vnd.oma-scws-http-request'), ('application/vnd.oma-scws-http-response', 'application/vnd.oma-scws-http-response'), ('application/vnd.onepager', 'application/vnd.onepager'), ('application/vnd.onepagertamp', 'application/vnd.onepagertamp'), ('application/vnd.onepagertamx', 'application/vnd.onepagertamx'), ('application/vnd.onepagertat', 'application/vnd.onepagertat'), ('application/vnd.onepagertatp', 'application/vnd.onepagertatp'), ('application/vnd.onepagertatx', 'application/vnd.onepagertatx'), ('application/vnd.openblox.game-binary', 'application/vnd.openblox.game-binary'), ('application/vnd.openblox.game+xml', 'application/vnd.openblox.game+xml'), ('application/vnd.openeye.oeb', 'application/vnd.openeye.oeb'), ('application/vnd.openstreetmap.data+xml', 'application/vnd.openstreetmap.data+xml'), ('application/vnd.openxmlformats-officedocument.custom-properties+xml', 'application/vnd.openxmlformats-officedocument.custom-properties+xml'), ('application/vnd.openxmlformats-officedocument.customXmlProperties+xml', 'application/vnd.openxmlformats-officedocument.customXmlProperties+xml'), ('application/vnd.openxmlformats-officedocument.drawing+xml', 'application/vnd.openxmlformats-officedocument.drawing+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.chart+xml', 'application/vnd.openxmlformats-officedocument.drawingml.chart+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml', 'application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml'), ('application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml', 'application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml'), ('application/vnd.openxmlformats-officedocument.extended-properties+xml', 'application/vnd.openxmlformats-officedocument.extended-properties+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml', 'application/vnd.openxmlformats-officedocument.presentationml.commentAuthors+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.comments+xml', 'application/vnd.openxmlformats-officedocument.presentationml.comments+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.handoutMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml', 'application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'), ('application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.presProps+xml', 'application/vnd.openxmlformats-officedocument.presentationml.presProps+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slide', 'application/vnd.openxmlformats-officedocument.presentationml.slide'), ('application/vnd.openxmlformats-officedocument.presentationml.slide+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slide+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'), ('application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml', 'application/vnd.openxmlformats-officedocument.presentationml.slideUpdateInfo+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml', 'application/vnd.openxmlformats-officedocument.presentationml.tableStyles+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.tags+xml', 'application/vnd.openxmlformats-officedocument.presentationml.tags+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.template'), ('application/vnd.openxmlformats-officedocument.presentationml.template.main+xml', 'application/vnd.openxmlformats-officedocument.presentationml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml', 'application/vnd.openxmlformats-officedocument.presentationml.viewProps+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'), ('application/vnd.openxmlformats-officedocument.theme+xml', 'application/vnd.openxmlformats-officedocument.theme+xml'), ('application/vnd.openxmlformats-officedocument.themeOverride+xml', 'application/vnd.openxmlformats-officedocument.themeOverride+xml'), ('application/vnd.openxmlformats-officedocument.vmlDrawing', 'application/vnd.openxmlformats-officedocument.vmlDrawing'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml', 'application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml'), ('application/vnd.openxmlformats-package.core-properties+xml', 'application/vnd.openxmlformats-package.core-properties+xml'), ('application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml', 'application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml'), ('application/vnd.openxmlformats-package.relationships+xml', 'application/vnd.openxmlformats-package.relationships+xml'), ('application/vnd.oracle.resource+json', 'application/vnd.oracle.resource+json'), ('application/vnd.orange.indata', 'application/vnd.orange.indata'), ('application/vnd.osa.netdeploy', 'application/vnd.osa.netdeploy'), ('application/vnd.osgeo.mapguide.package', 'application/vnd.osgeo.mapguide.package'), ('application/vnd.osgi.bundle', 'application/vnd.osgi.bundle'), ('application/vnd.osgi.dp', 'application/vnd.osgi.dp'), ('application/vnd.osgi.subsystem', 'application/vnd.osgi.subsystem'), ('application/vnd.otps.ct-kip+xml', 'application/vnd.otps.ct-kip+xml'), ('application/vnd.oxli.countgraph', 'application/vnd.oxli.countgraph'), ('application/vnd.pagerduty+json', 'application/vnd.pagerduty+json'), ('application/vnd.palm', 'application/vnd.palm'), ('application/vnd.panoply', 'application/vnd.panoply'), ('application/vnd.paos.xml', 'application/vnd.paos.xml'), ('application/vnd.pawaafile', 'application/vnd.pawaafile'), ('application/vnd.pcos', 'application/vnd.pcos'), ('application/vnd.pg.format', 'application/vnd.pg.format'), ('application/vnd.pg.osasli', 'application/vnd.pg.osasli'), ('application/vnd.piaccess.application-licence', 'application/vnd.piaccess.application-licence'), ('application/vnd.picsel', 'application/vnd.picsel'), ('application/vnd.pmi.widget', 'application/vnd.pmi.widget'), ('application/vnd.poc.group-advertisement+xml', 'application/vnd.poc.group-advertisement+xml'), ('application/vnd.pocketlearn', 'application/vnd.pocketlearn'), ('application/vnd.powerbuilder6', 'application/vnd.powerbuilder6'), ('application/vnd.powerbuilder6-s', 'application/vnd.powerbuilder6-s'), ('application/vnd.powerbuilder7', 'application/vnd.powerbuilder7'), ('application/vnd.powerbuilder75', 'application/vnd.powerbuilder75'), ('application/vnd.powerbuilder75-s', 'application/vnd.powerbuilder75-s'), ('application/vnd.powerbuilder7-s', 'application/vnd.powerbuilder7-s'), ('application/vnd.preminet', 'application/vnd.preminet'), ('application/vnd.previewsystems.box', 'application/vnd.previewsystems.box'), ('application/vnd.proteus.magazine', 'application/vnd.proteus.magazine'), ('application/vnd.publishare-delta-tree', 'application/vnd.publishare-delta-tree'), ('application/vnd.pvi.ptid1', 'application/vnd.pvi.ptid1'), ('application/vnd.pwg-multiplexed', 'application/vnd.pwg-multiplexed'), ('application/vnd.pwg-xhtml-print+xml', 'application/vnd.pwg-xhtml-print+xml'), ('application/vnd.qualcomm.brew-app-res', 'application/vnd.qualcomm.brew-app-res'), ('application/vnd.quarantainenet', 'application/vnd.quarantainenet'), ('application/vnd.Quark.QuarkXPress', 'application/vnd.Quark.QuarkXPress'), ('application/vnd.quobject-quoxdocument', 'application/vnd.quobject-quoxdocument'), ('application/vnd.radisys.moml+xml', 'application/vnd.radisys.moml+xml'), ('application/vnd.radisys.msml-audit-conf+xml', 'application/vnd.radisys.msml-audit-conf+xml'), ('application/vnd.radisys.msml-audit-conn+xml', 'application/vnd.radisys.msml-audit-conn+xml'), ('application/vnd.radisys.msml-audit-dialog+xml', 'application/vnd.radisys.msml-audit-dialog+xml'), ('application/vnd.radisys.msml-audit-stream+xml', 'application/vnd.radisys.msml-audit-stream+xml'), ('application/vnd.radisys.msml-audit+xml', 'application/vnd.radisys.msml-audit+xml'), ('application/vnd.radisys.msml-conf+xml', 'application/vnd.radisys.msml-conf+xml'), ('application/vnd.radisys.msml-dialog-base+xml', 'application/vnd.radisys.msml-dialog-base+xml'), ('application/vnd.radisys.msml-dialog-fax-detect+xml', 'application/vnd.radisys.msml-dialog-fax-detect+xml'), ('application/vnd.radisys.msml-dialog-fax-sendrecv+xml', 'application/vnd.radisys.msml-dialog-fax-sendrecv+xml'), ('application/vnd.radisys.msml-dialog-group+xml', 'application/vnd.radisys.msml-dialog-group+xml'), ('application/vnd.radisys.msml-dialog-speech+xml', 'application/vnd.radisys.msml-dialog-speech+xml'), ('application/vnd.radisys.msml-dialog-transform+xml', 'application/vnd.radisys.msml-dialog-transform+xml'), ('application/vnd.radisys.msml-dialog+xml', 'application/vnd.radisys.msml-dialog+xml'), ('application/vnd.radisys.msml+xml', 'application/vnd.radisys.msml+xml'), ('application/vnd.rainstor.data', 'application/vnd.rainstor.data'), ('application/vnd.rapid', 'application/vnd.rapid'), ('application/vnd.rar', 'application/vnd.rar'), ('application/vnd.realvnc.bed', 'application/vnd.realvnc.bed'), ('application/vnd.recordare.musicxml', 'application/vnd.recordare.musicxml'), ('application/vnd.recordare.musicxml+xml', 'application/vnd.recordare.musicxml+xml'), ('application/vnd.RenLearn.rlprint', 'application/vnd.RenLearn.rlprint'), ('application/vnd.rig.cryptonote', 'application/vnd.rig.cryptonote'), ('application/vnd.route66.link66+xml', 'application/vnd.route66.link66+xml'), ('application/vnd.rs-274x', 'application/vnd.rs-274x'), ('application/vnd.ruckus.download', 'application/vnd.ruckus.download'), ('application/vnd.s3sms', 'application/vnd.s3sms'), ('application/vnd.sailingtracker.track', 'application/vnd.sailingtracker.track'), ('application/vnd.sbm.cid', 'application/vnd.sbm.cid'), ('application/vnd.sbm.mid2', 'application/vnd.sbm.mid2'), ('application/vnd.scribus', 'application/vnd.scribus'), ('application/vnd.sealed.3df', 'application/vnd.sealed.3df'), ('application/vnd.sealed.csf', 'application/vnd.sealed.csf'), ('application/vnd.sealed.doc', 'application/vnd.sealed.doc'), ('application/vnd.sealed.eml', 'application/vnd.sealed.eml'), ('application/vnd.sealed.mht', 'application/vnd.sealed.mht'), ('application/vnd.sealed.net', 'application/vnd.sealed.net'), ('application/vnd.sealed.ppt', 'application/vnd.sealed.ppt'), ('application/vnd.sealed.tiff', 'application/vnd.sealed.tiff'), ('application/vnd.sealed.xls', 'application/vnd.sealed.xls'), ('application/vnd.sealedmedia.softseal.html', 'application/vnd.sealedmedia.softseal.html'), ('application/vnd.sealedmedia.softseal.pdf', 'application/vnd.sealedmedia.softseal.pdf'), ('application/vnd.seemail', 'application/vnd.seemail'), ('application/vnd.sema', 'application/vnd.sema'), ('application/vnd.semd', 'application/vnd.semd'), ('application/vnd.semf', 'application/vnd.semf'), ('application/vnd.shana.informed.formdata', 'application/vnd.shana.informed.formdata'), ('application/vnd.shana.informed.formtemplate', 'application/vnd.shana.informed.formtemplate'), ('application/vnd.shana.informed.interchange', 'application/vnd.shana.informed.interchange'), ('application/vnd.shana.informed.package', 'application/vnd.shana.informed.package'), ('application/vnd.sigrok.session', 'application/vnd.sigrok.session'), ('application/vnd.SimTech-MindMapper', 'application/vnd.SimTech-MindMapper'), ('application/vnd.siren+json', 'application/vnd.siren+json'), ('application/vnd.smaf', 'application/vnd.smaf'), ('application/vnd.smart.notebook', 'application/vnd.smart.notebook'), ('application/vnd.smart.teacher', 'application/vnd.smart.teacher'), ('application/vnd.software602.filler.form+xml', 'application/vnd.software602.filler.form+xml'), ('application/vnd.software602.filler.form-xml-zip', 'application/vnd.software602.filler.form-xml-zip'), ('application/vnd.solent.sdkm+xml', 'application/vnd.solent.sdkm+xml'), ('application/vnd.spotfire.dxp', 'application/vnd.spotfire.dxp'), ('application/vnd.spotfire.sfs', 'application/vnd.spotfire.sfs'), ('application/vnd.sss-cod', 'application/vnd.sss-cod'), ('application/vnd.sss-dtf', 'application/vnd.sss-dtf'), ('application/vnd.sss-ntf', 'application/vnd.sss-ntf'), ('application/vnd.stepmania.package', 'application/vnd.stepmania.package'), ('application/vnd.stepmania.stepchart', 'application/vnd.stepmania.stepchart'), ('application/vnd.street-stream', 'application/vnd.street-stream'), ('application/vnd.sun.wadl+xml', 'application/vnd.sun.wadl+xml'), ('application/vnd.sus-calendar', 'application/vnd.sus-calendar'), ('application/vnd.svd', 'application/vnd.svd'), ('application/vnd.swiftview-ics', 'application/vnd.swiftview-ics'), ('application/vnd.syncml.dm.notification', 'application/vnd.syncml.dm.notification'), ('application/vnd.syncml.dmddf+xml', 'application/vnd.syncml.dmddf+xml'), ('application/vnd.syncml.dmtnds+wbxml', 'application/vnd.syncml.dmtnds+wbxml'), ('application/vnd.syncml.dmtnds+xml', 'application/vnd.syncml.dmtnds+xml'), ('application/vnd.syncml.dmddf+wbxml', 'application/vnd.syncml.dmddf+wbxml'), ('application/vnd.syncml.dm+wbxml', 'application/vnd.syncml.dm+wbxml'), ('application/vnd.syncml.dm+xml', 'application/vnd.syncml.dm+xml'), ('application/vnd.syncml.ds.notification', 'application/vnd.syncml.ds.notification'), ('application/vnd.syncml+xml', 'application/vnd.syncml+xml'), ('application/vnd.tableschema+json', 'application/vnd.tableschema+json'), ('application/vnd.tao.intent-module-archive', 'application/vnd.tao.intent-module-archive'), ('application/vnd.tcpdump.pcap', 'application/vnd.tcpdump.pcap'), ('application/vnd.tml', 'application/vnd.tml'), ('application/vnd.tmd.mediaflex.api+xml', 'application/vnd.tmd.mediaflex.api+xml'), ('application/vnd.tmobile-livetv', 'application/vnd.tmobile-livetv'), ('application/vnd.tri.onesource', 'application/vnd.tri.onesource'), ('application/vnd.trid.tpt', 'application/vnd.trid.tpt'), ('application/vnd.triscape.mxs', 'application/vnd.triscape.mxs'), ('application/vnd.trueapp', 'application/vnd.trueapp'), ('application/vnd.truedoc', 'application/vnd.truedoc'), ('application/vnd.ubisoft.webplayer', 'application/vnd.ubisoft.webplayer'), ('application/vnd.ufdl', 'application/vnd.ufdl'), ('application/vnd.uiq.theme', 'application/vnd.uiq.theme'), ('application/vnd.umajin', 'application/vnd.umajin'), ('application/vnd.unity', 'application/vnd.unity'), ('application/vnd.uoml+xml', 'application/vnd.uoml+xml'), ('application/vnd.uplanet.alert', 'application/vnd.uplanet.alert'), ('application/vnd.uplanet.alert-wbxml', 'application/vnd.uplanet.alert-wbxml'), ('application/vnd.uplanet.bearer-choice', 'application/vnd.uplanet.bearer-choice'), ('application/vnd.uplanet.bearer-choice-wbxml', 'application/vnd.uplanet.bearer-choice-wbxml'), ('application/vnd.uplanet.cacheop', 'application/vnd.uplanet.cacheop'), ('application/vnd.uplanet.cacheop-wbxml', 'application/vnd.uplanet.cacheop-wbxml'), ('application/vnd.uplanet.channel', 'application/vnd.uplanet.channel'), ('application/vnd.uplanet.channel-wbxml', 'application/vnd.uplanet.channel-wbxml'), ('application/vnd.uplanet.list', 'application/vnd.uplanet.list'), ('application/vnd.uplanet.listcmd', 'application/vnd.uplanet.listcmd'), ('application/vnd.uplanet.listcmd-wbxml', 'application/vnd.uplanet.listcmd-wbxml'), ('application/vnd.uplanet.list-wbxml', 'application/vnd.uplanet.list-wbxml'), ('application/vnd.uri-map', 'application/vnd.uri-map'), ('application/vnd.uplanet.signal', 'application/vnd.uplanet.signal'), ('application/vnd.valve.source.material', 'application/vnd.valve.source.material'), ('application/vnd.vcx', 'application/vnd.vcx'), ('application/vnd.vd-study', 'application/vnd.vd-study'), ('application/vnd.vectorworks', 'application/vnd.vectorworks'), ('application/vnd.vel+json', 'application/vnd.vel+json'), ('application/vnd.verimatrix.vcas', 'application/vnd.verimatrix.vcas'), ('application/vnd.vidsoft.vidconference', 'application/vnd.vidsoft.vidconference'), ('application/vnd.visio', 'application/vnd.visio'), ('application/vnd.visionary', 'application/vnd.visionary'), ('application/vnd.vividence.scriptfile', 'application/vnd.vividence.scriptfile'), ('application/vnd.vsf', 'application/vnd.vsf'), ('application/vnd.wap.sic', 'application/vnd.wap.sic'), ('application/vnd.wap.slc', 'application/vnd.wap.slc'), ('application/vnd.wap.wbxml', 'application/vnd.wap.wbxml'), ('application/vnd.wap.wmlc', 'application/vnd.wap.wmlc'), ('application/vnd.wap.wmlscriptc', 'application/vnd.wap.wmlscriptc'), ('application/vnd.webturbo', 'application/vnd.webturbo'), ('application/vnd.wfa.p2p', 'application/vnd.wfa.p2p'), ('application/vnd.wfa.wsc', 'application/vnd.wfa.wsc'), ('application/vnd.windows.devicepairing', 'application/vnd.windows.devicepairing'), ('application/vnd.wmc', 'application/vnd.wmc'), ('application/vnd.wmf.bootstrap', 'application/vnd.wmf.bootstrap'), ('application/vnd.wolfram.mathematica', 'application/vnd.wolfram.mathematica'), ('application/vnd.wolfram.mathematica.package', 'application/vnd.wolfram.mathematica.package'), ('application/vnd.wolfram.player', 'application/vnd.wolfram.player'), ('application/vnd.wordperfect', 'application/vnd.wordperfect'), ('application/vnd.wqd', 'application/vnd.wqd'), ('application/vnd.wrq-hp3000-labelled', 'application/vnd.wrq-hp3000-labelled'), ('application/vnd.wt.stf', 'application/vnd.wt.stf'), ('application/vnd.wv.csp+xml', 'application/vnd.wv.csp+xml'), ('application/vnd.wv.csp+wbxml', 'application/vnd.wv.csp+wbxml'), ('application/vnd.wv.ssp+xml', 'application/vnd.wv.ssp+xml'), ('application/vnd.xacml+json', 'application/vnd.xacml+json'), ('application/vnd.xara', 'application/vnd.xara'), ('application/vnd.xfdl', 'application/vnd.xfdl'), ('application/vnd.xfdl.webform', 'application/vnd.xfdl.webform'), ('application/vnd.xmi+xml', 'application/vnd.xmi+xml'), ('application/vnd.xmpie.cpkg', 'application/vnd.xmpie.cpkg'), ('application/vnd.xmpie.dpkg', 'application/vnd.xmpie.dpkg'), ('application/vnd.xmpie.plan', 'application/vnd.xmpie.plan'), ('application/vnd.xmpie.ppkg', 'application/vnd.xmpie.ppkg'), ('application/vnd.xmpie.xlim', 'application/vnd.xmpie.xlim'), ('application/vnd.yamaha.hv-dic', 'application/vnd.yamaha.hv-dic'), ('application/vnd.yamaha.hv-script', 'application/vnd.yamaha.hv-script'), ('application/vnd.yamaha.hv-voice', 'application/vnd.yamaha.hv-voice'), ('application/vnd.yamaha.openscoreformat.osfpvg+xml', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'), ('application/vnd.yamaha.openscoreformat', 'application/vnd.yamaha.openscoreformat'), ('application/vnd.yamaha.remote-setup', 'application/vnd.yamaha.remote-setup'), ('application/vnd.yamaha.smaf-audio', 'application/vnd.yamaha.smaf-audio'), ('application/vnd.yamaha.smaf-phrase', 'application/vnd.yamaha.smaf-phrase'), ('application/vnd.yamaha.through-ngn', 'application/vnd.yamaha.through-ngn'), ('application/vnd.yamaha.tunnel-udpencap', 'application/vnd.yamaha.tunnel-udpencap'), ('application/vnd.yaoweme', 'application/vnd.yaoweme'), ('application/vnd.yellowriver-custom-menu', 'application/vnd.yellowriver-custom-menu'), ('application/vnd.zul', 'application/vnd.zul'), ('application/vnd.zzazz.deck+xml', 'application/vnd.zzazz.deck+xml'), ('application/voicexml+xml', 'application/voicexml+xml'), ('application/vq-rtcpxr', 'application/vq-rtcpxr'), ('application/watcherinfo+xml', 'application/watcherinfo+xml'), ('application/whoispp-query', 'application/whoispp-query'), ('application/whoispp-response', 'application/whoispp-response'), ('application/widget', 'application/widget'), ('application/wita', 'application/wita'), ('application/wordperfect5.1', 'application/wordperfect5.1'), ('application/wsdl+xml', 'application/wsdl+xml'), ('application/wspolicy+xml', 'application/wspolicy+xml'), ('application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), ('application/x400-bp', 'application/x400-bp'), ('application/xacml+xml', 'application/xacml+xml'), ('application/xcap-att+xml', 'application/xcap-att+xml'), ('application/xcap-caps+xml', 'application/xcap-caps+xml'), ('application/xcap-diff+xml', 'application/xcap-diff+xml'), ('application/xcap-el+xml', 'application/xcap-el+xml'), ('application/xcap-error+xml', 'application/xcap-error+xml'), ('application/xcap-ns+xml', 'application/xcap-ns+xml'), ('application/xcon-conference-info-diff+xml', 'application/xcon-conference-info-diff+xml'), ('application/xcon-conference-info+xml', 'application/xcon-conference-info+xml'), ('application/xenc+xml', 'application/xenc+xml'), ('application/xhtml-voice+xml', 'application/xhtml-voice+xml'), ('application/xhtml+xml', 'application/xhtml+xml'), ('application/xml', 'application/xml'), ('application/xml-dtd', 'application/xml-dtd'), ('application/xml-external-parsed-entity', 'application/xml-external-parsed-entity'), ('application/xml-patch+xml', 'application/xml-patch+xml'), ('application/xmpp+xml', 'application/xmpp+xml'), ('application/xop+xml', 'application/xop+xml'), ('application/xslt+xml', 'application/xslt+xml'), ('application/xv+xml', 'application/xv+xml'), ('application/yang', 'application/yang'), ('application/yang-data+json', 'application/yang-data+json'), ('application/yang-data+xml', 'application/yang-data+xml'), ('application/yang-patch+json', 'application/yang-patch+json'), ('application/yang-patch+xml', 'application/yang-patch+xml'), ('application/yin+xml', 'application/yin+xml'), ('application/zip', 'application/zip'), ('application/zlib', 'application/zlib'), ('audio/1d-interleaved-parityfec', 'audio/1d-interleaved-parityfec'), ('audio/32kadpcm', 'audio/32kadpcm'), ('audio/3gpp', 'audio/3gpp'), ('audio/3gpp2', 'audio/3gpp2'), ('audio/ac3', 'audio/ac3'), ('audio/AMR', 'audio/AMR'), ('audio/AMR-WB', 'audio/AMR-WB'), ('audio/amr-wb+', 'audio/amr-wb+'), ('audio/aptx', 'audio/aptx'), ('audio/asc', 'audio/asc'), ('audio/ATRAC-ADVANCED-LOSSLESS', 'audio/ATRAC-ADVANCED-LOSSLESS'), ('audio/ATRAC-X', 'audio/ATRAC-X'), ('audio/ATRAC3', 'audio/ATRAC3'), ('audio/basic', 'audio/basic'), ('audio/BV16', 'audio/BV16'), ('audio/BV32', 'audio/BV32'), ('audio/clearmode', 'audio/clearmode'), ('audio/CN', 'audio/CN'), ('audio/DAT12', 'audio/DAT12'), ('audio/dls', 'audio/dls'), ('audio/dsr-es201108', 'audio/dsr-es201108'), ('audio/dsr-es202050', 'audio/dsr-es202050'), ('audio/dsr-es202211', 'audio/dsr-es202211'), ('audio/dsr-es202212', 'audio/dsr-es202212'), ('audio/DV', 'audio/DV'), ('audio/DVI4', 'audio/DVI4'), ('audio/eac3', 'audio/eac3'), ('audio/encaprtp', 'audio/encaprtp'), ('audio/EVRC', 'audio/EVRC'), ('audio/EVRC-QCP', 'audio/EVRC-QCP'), ('audio/EVRC0', 'audio/EVRC0'), ('audio/EVRC1', 'audio/EVRC1'), ('audio/EVRCB', 'audio/EVRCB'), ('audio/EVRCB0', 'audio/EVRCB0'), ('audio/EVRCB1', 'audio/EVRCB1'), ('audio/EVRCNW', 'audio/EVRCNW'), ('audio/EVRCNW0', 'audio/EVRCNW0'), ('audio/EVRCNW1', 'audio/EVRCNW1'), ('audio/EVRCWB', 'audio/EVRCWB'), ('audio/EVRCWB0', 'audio/EVRCWB0'), ('audio/EVRCWB1', 'audio/EVRCWB1'), ('audio/EVS', 'audio/EVS'), ('audio/example', 'audio/example'), ('audio/fwdred', 'audio/fwdred'), ('audio/G711-0', 'audio/G711-0'), ('audio/G719', 'audio/G719'), ('audio/G7221', 'audio/G7221'), ('audio/G722', 'audio/G722'), ('audio/G723', 'audio/G723'), ('audio/G726-16', 'audio/G726-16'), ('audio/G726-24', 'audio/G726-24'), ('audio/G726-32', 'audio/G726-32'), ('audio/G726-40', 'audio/G726-40'), ('audio/G728', 'audio/G728'), ('audio/G729', 'audio/G729'), ('audio/G7291', 'audio/G7291'), ('audio/G729D', 'audio/G729D'), ('audio/G729E', 'audio/G729E'), ('audio/GSM', 'audio/GSM'), ('audio/GSM-EFR', 'audio/GSM-EFR'), ('audio/GSM-HR-08', 'audio/GSM-HR-08'), ('audio/iLBC', 'audio/iLBC'), ('audio/ip-mr_v2.5', 'audio/ip-mr_v2.5'), ('audio/L8', 'audio/L8'), ('audio/L16', 'audio/L16'), ('audio/L20', 'audio/L20'), ('audio/L24', 'audio/L24'), ('audio/LPC', 'audio/LPC'), ('audio/MELP', 'audio/MELP'), ('audio/MELP600', 'audio/MELP600'), ('audio/MELP1200', 'audio/MELP1200'), ('audio/MELP2400', 'audio/MELP2400'), ('audio/mobile-xmf', 'audio/mobile-xmf'), ('audio/MPA', 'audio/MPA'), ('audio/mp4', 'audio/mp4'), ('audio/MP4A-LATM', 'audio/MP4A-LATM'), ('audio/mpa-robust', 'audio/mpa-robust'), ('audio/mpeg', 'audio/mpeg'), ('audio/mpeg4-generic', 'audio/mpeg4-generic'), ('audio/ogg', 'audio/ogg'), ('audio/opus', 'audio/opus'), ('audio/parityfec', 'audio/parityfec'), ('audio/PCMA', 'audio/PCMA'), ('audio/PCMA-WB', 'audio/PCMA-WB'), ('audio/PCMU', 'audio/PCMU'), ('audio/PCMU-WB', 'audio/PCMU-WB'), ('audio/prs.sid', 'audio/prs.sid'), ('audio/QCELP', 'audio/QCELP'), ('audio/raptorfec', 'audio/raptorfec'), ('audio/RED', 'audio/RED'), ('audio/rtp-enc-aescm128', 'audio/rtp-enc-aescm128'), ('audio/rtploopback', 'audio/rtploopback'), ('audio/rtp-midi', 'audio/rtp-midi'), ('audio/rtx', 'audio/rtx'), ('audio/SMV', 'audio/SMV'), ('audio/SMV0', 'audio/SMV0'), ('audio/SMV-QCP', 'audio/SMV-QCP'), ('audio/sp-midi', 'audio/sp-midi'), ('audio/speex', 'audio/speex'), ('audio/t140c', 'audio/t140c'), ('audio/t38', 'audio/t38'), ('audio/telephone-event', 'audio/telephone-event'), ('audio/tone', 'audio/tone'), ('audio/UEMCLIP', 'audio/UEMCLIP'), ('audio/ulpfec', 'audio/ulpfec'), ('audio/VDVI', 'audio/VDVI'), ('audio/VMR-WB', 'audio/VMR-WB'), ('audio/vnd.3gpp.iufp', 'audio/vnd.3gpp.iufp'), ('audio/vnd.4SB', 'audio/vnd.4SB'), ('audio/vnd.audiokoz', 'audio/vnd.audiokoz'), ('audio/vnd.CELP', 'audio/vnd.CELP'), ('audio/vnd.cisco.nse', 'audio/vnd.cisco.nse'), ('audio/vnd.cmles.radio-events', 'audio/vnd.cmles.radio-events'), ('audio/vnd.cns.anp1', 'audio/vnd.cns.anp1'), ('audio/vnd.cns.inf1', 'audio/vnd.cns.inf1'), ('audio/vnd.dece.audio', 'audio/vnd.dece.audio'), ('audio/vnd.digital-winds', 'audio/vnd.digital-winds'), ('audio/vnd.dlna.adts', 'audio/vnd.dlna.adts'), ('audio/vnd.dolby.heaac.1', 'audio/vnd.dolby.heaac.1'), ('audio/vnd.dolby.heaac.2', 'audio/vnd.dolby.heaac.2'), ('audio/vnd.dolby.mlp', 'audio/vnd.dolby.mlp'), ('audio/vnd.dolby.mps', 'audio/vnd.dolby.mps'), ('audio/vnd.dolby.pl2', 'audio/vnd.dolby.pl2'), ('audio/vnd.dolby.pl2x', 'audio/vnd.dolby.pl2x'), ('audio/vnd.dolby.pl2z', 'audio/vnd.dolby.pl2z'), ('audio/vnd.dolby.pulse.1', 'audio/vnd.dolby.pulse.1'), ('audio/vnd.dra', 'audio/vnd.dra'), ('audio/vnd.dts', 'audio/vnd.dts'), ('audio/vnd.dts.hd', 'audio/vnd.dts.hd'), ('audio/vnd.dvb.file', 'audio/vnd.dvb.file'), ('audio/vnd.everad.plj', 'audio/vnd.everad.plj'), ('audio/vnd.hns.audio', 'audio/vnd.hns.audio'), ('audio/vnd.lucent.voice', 'audio/vnd.lucent.voice'), ('audio/vnd.ms-playready.media.pya', 'audio/vnd.ms-playready.media.pya'), ('audio/vnd.nokia.mobile-xmf', 'audio/vnd.nokia.mobile-xmf'), ('audio/vnd.nortel.vbk', 'audio/vnd.nortel.vbk'), ('audio/vnd.nuera.ecelp4800', 'audio/vnd.nuera.ecelp4800'), ('audio/vnd.nuera.ecelp7470', 'audio/vnd.nuera.ecelp7470'), ('audio/vnd.nuera.ecelp9600', 'audio/vnd.nuera.ecelp9600'), ('audio/vnd.octel.sbc', 'audio/vnd.octel.sbc'), ('audio/vnd.qcelp', 'audio/vnd.qcelp'), ('audio/vnd.rhetorex.32kadpcm', 'audio/vnd.rhetorex.32kadpcm'), ('audio/vnd.rip', 'audio/vnd.rip'), ('audio/vnd.sealedmedia.softseal.mpeg', 'audio/vnd.sealedmedia.softseal.mpeg'), ('audio/vnd.vmx.cvsd', 'audio/vnd.vmx.cvsd'), ('audio/vorbis', 'audio/vorbis'), ('audio/vorbis-config', 'audio/vorbis-config'), ('font/collection', 'font/collection'), ('font/otf', 'font/otf'), ('font/sfnt', 'font/sfnt'), ('font/ttf', 'font/ttf'), ('font/woff', 'font/woff'), ('font/woff2', 'font/woff2'), ('image/bmp', 'image/bmp'), ('image/cgm', 'image/cgm'), ('image/dicom-rle', 'image/dicom-rle'), ('image/emf', 'image/emf'), ('image/example', 'image/example'), ('image/fits', 'image/fits'), ('image/g3fax', 'image/g3fax'), ('image/gif', 'image/gif'), ('image/ief', 'image/ief'), ('image/jls', 'image/jls'), ('image/jp2', 'image/jp2'), ('image/jpeg', 'image/jpeg'), ('image/jpm', 'image/jpm'), ('image/jpx', 'image/jpx'), ('image/ktx', 'image/ktx'), ('image/naplps', 'image/naplps'), ('image/png', 'image/png'), ('image/prs.btif', 'image/prs.btif'), ('image/prs.pti', 'image/prs.pti'), ('image/pwg-raster', 'image/pwg-raster'), ('image/svg+xml', 'image/svg+xml'), ('image/t38', 'image/t38'), ('image/tiff', 'image/tiff'), ('image/tiff-fx', 'image/tiff-fx'), ('image/vnd.adobe.photoshop', 'image/vnd.adobe.photoshop'), ('image/vnd.airzip.accelerator.azv', 'image/vnd.airzip.accelerator.azv'), ('image/vnd.cns.inf2', 'image/vnd.cns.inf2'), ('image/vnd.dece.graphic', 'image/vnd.dece.graphic'), ('image/vnd.djvu', 'image/vnd.djvu'), ('image/vnd.dwg', 'image/vnd.dwg'), ('image/vnd.dxf', 'image/vnd.dxf'), ('image/vnd.dvb.subtitle', 'image/vnd.dvb.subtitle'), ('image/vnd.fastbidsheet', 'image/vnd.fastbidsheet'), ('image/vnd.fpx', 'image/vnd.fpx'), ('image/vnd.fst', 'image/vnd.fst'), ('image/vnd.fujixerox.edmics-mmr', 'image/vnd.fujixerox.edmics-mmr'), ('image/vnd.fujixerox.edmics-rlc', 'image/vnd.fujixerox.edmics-rlc'), ('image/vnd.globalgraphics.pgb', 'image/vnd.globalgraphics.pgb'), ('image/vnd.microsoft.icon', 'image/vnd.microsoft.icon'), ('image/vnd.mix', 'image/vnd.mix'), ('image/vnd.ms-modi', 'image/vnd.ms-modi'), ('image/vnd.mozilla.apng', 'image/vnd.mozilla.apng'), ('image/vnd.net-fpx', 'image/vnd.net-fpx'), ('image/vnd.radiance', 'image/vnd.radiance'), ('image/vnd.sealed.png', 'image/vnd.sealed.png'), ('image/vnd.sealedmedia.softseal.gif', 'image/vnd.sealedmedia.softseal.gif'), ('image/vnd.sealedmedia.softseal.jpg', 'image/vnd.sealedmedia.softseal.jpg'), ('image/vnd.svf', 'image/vnd.svf'), ('image/vnd.tencent.tap', 'image/vnd.tencent.tap'), ('image/vnd.valve.source.texture', 'image/vnd.valve.source.texture'), ('image/vnd.wap.wbmp', 'image/vnd.wap.wbmp'), ('image/vnd.xiff', 'image/vnd.xiff'), ('image/vnd.zbrush.pcx', 'image/vnd.zbrush.pcx'), ('image/wmf', 'image/wmf'), ('image/x-emf', 'image/x-emf'), ('image/x-wmf', 'image/x-wmf'), ('message/CPIM', 'message/CPIM'), ('message/delivery-status', 'message/delivery-status'), ('message/disposition-notification', 'message/disposition-notification'), ('message/example', 'message/example'), ('message/external-body', 'message/external-body'), ('message/feedback-report', 'message/feedback-report'), ('message/global', 'message/global'), ('message/global-delivery-status', 'message/global-delivery-status'), ('message/global-disposition-notification', 'message/global-disposition-notification'), ('message/global-headers', 'message/global-headers'), ('message/http', 'message/http'), ('message/imdn+xml', 'message/imdn+xml'), ('message/news', 'message/news'), ('message/partial', 'message/partial'), ('message/rfc822', 'message/rfc822'), ('message/s-http', 'message/s-http'), ('message/sip', 'message/sip'), ('message/sipfrag', 'message/sipfrag'), ('message/tracking-status', 'message/tracking-status'), ('message/vnd.si.simp', 'message/vnd.si.simp'), ('message/vnd.wfa.wsc', 'message/vnd.wfa.wsc'), ('model/3mf', 'model/3mf'), ('model/example', 'model/example'), ('model/gltf+json', 'model/gltf+json'), ('model/iges', 'model/iges'), ('model/mesh', 'model/mesh'), ('model/vnd.collada+xml', 'model/vnd.collada+xml'), ('model/vnd.dwf', 'model/vnd.dwf'), ('model/vnd.flatland.3dml', 'model/vnd.flatland.3dml'), ('model/vnd.gdl', 'model/vnd.gdl'), ('model/vnd.gs-gdl', 'model/vnd.gs-gdl'), ('model/vnd.gtw', 'model/vnd.gtw'), ('model/vnd.moml+xml', 'model/vnd.moml+xml'), ('model/vnd.mts', 'model/vnd.mts'), ('model/vnd.opengex', 'model/vnd.opengex'), ('model/vnd.parasolid.transmit.binary', 'model/vnd.parasolid.transmit.binary'), ('model/vnd.parasolid.transmit.text', 'model/vnd.parasolid.transmit.text'), ('model/vnd.rosette.annotated-data-model', 'model/vnd.rosette.annotated-data-model'), ('model/vnd.valve.source.compiled-map', 'model/vnd.valve.source.compiled-map'), ('model/vnd.vtu', 'model/vnd.vtu'), ('model/vrml', 'model/vrml'), ('model/x3d-vrml', 'model/x3d-vrml'), ('model/x3d+fastinfoset', 'model/x3d+fastinfoset'), ('model/x3d+xml', 'model/x3d+xml'), ('multipart/alternative', 'multipart/alternative'), ('multipart/appledouble', 'multipart/appledouble'), ('multipart/byteranges', 'multipart/byteranges'), ('multipart/digest', 'multipart/digest'), ('multipart/encrypted', 'multipart/encrypted'), ('multipart/example', 'multipart/example'), ('multipart/form-data', 'multipart/form-data'), ('multipart/header-set', 'multipart/header-set'), ('multipart/mixed', 'multipart/mixed'), ('multipart/parallel', 'multipart/parallel'), ('multipart/related', 'multipart/related'), ('multipart/report', 'multipart/report'), ('multipart/signed', 'multipart/signed'), ('multipart/vnd.bint.med-plus', 'multipart/vnd.bint.med-plus'), ('multipart/voice-message', 'multipart/voice-message'), ('multipart/x-mixed-replace', 'multipart/x-mixed-replace'), ('text/1d-interleaved-parityfec', 'text/1d-interleaved-parityfec'), ('text/cache-manifest', 'text/cache-manifest'), ('text/calendar', 'text/calendar'), ('text/css', 'text/css'), ('text/csv', 'text/csv'), ('text/csv-schema', 'text/csv-schema'), ('text/directory', 'text/directory'), ('text/dns', 'text/dns'), ('text/ecmascript', 'text/ecmascript'), ('text/encaprtp', 'text/encaprtp'), ('text/enriched', 'text/enriched'), ('text/example', 'text/example'), ('text/fwdred', 'text/fwdred'), ('text/grammar-ref-list', 'text/grammar-ref-list'), ('text/html', 'text/html'), ('text/javascript', 'text/javascript'), ('text/jcr-cnd', 'text/jcr-cnd'), ('text/markdown', 'text/markdown'), ('text/mizar', 'text/mizar'), ('text/n3', 'text/n3'), ('text/parameters', 'text/parameters'), ('text/parityfec', 'text/parityfec'), ('text/plain', 'text/plain'), ('text/provenance-notation', 'text/provenance-notation'), ('text/prs.fallenstein.rst', 'text/prs.fallenstein.rst'), ('text/prs.lines.tag', 'text/prs.lines.tag'), ('text/prs.prop.logic', 'text/prs.prop.logic'), ('text/raptorfec', 'text/raptorfec'), ('text/RED', 'text/RED'), ('text/rfc822-headers', 'text/rfc822-headers'), ('text/richtext', 'text/richtext'), ('text/rtf', 'text/rtf'), ('text/rtp-enc-aescm128', 'text/rtp-enc-aescm128'), ('text/rtploopback', 'text/rtploopback'), ('text/rtx', 'text/rtx'), ('text/sgml', 'text/sgml'), ('text/strings', 'text/strings'), ('text/t140', 'text/t140'), ('text/tab-separated-values', 'text/tab-separated-values'), ('text/troff', 'text/troff'), ('text/turtle', 'text/turtle'), ('text/ulpfec', 'text/ulpfec'), ('text/uri-list', 'text/uri-list'), ('text/vcard', 'text/vcard'), ('text/vnd.a', 'text/vnd.a'), ('text/vnd.abc', 'text/vnd.abc'), ('text/vnd.ascii-art', 'text/vnd.ascii-art'), ('text/vnd.curl', 'text/vnd.curl'), ('text/vnd.debian.copyright', 'text/vnd.debian.copyright'), ('text/vnd.DMClientScript', 'text/vnd.DMClientScript'), ('text/vnd.dvb.subtitle', 'text/vnd.dvb.subtitle'), ('text/vnd.esmertec.theme-descriptor', 'text/vnd.esmertec.theme-descriptor'), ('text/vnd.fly', 'text/vnd.fly'), ('text/vnd.fmi.flexstor', 'text/vnd.fmi.flexstor'), ('text/vnd.graphviz', 'text/vnd.graphviz'), ('text/vnd.in3d.3dml', 'text/vnd.in3d.3dml'), ('text/vnd.in3d.spot', 'text/vnd.in3d.spot'), ('text/vnd.IPTC.NewsML', 'text/vnd.IPTC.NewsML'), ('text/vnd.IPTC.NITF', 'text/vnd.IPTC.NITF'), ('text/vnd.latex-z', 'text/vnd.latex-z'), ('text/vnd.motorola.reflex', 'text/vnd.motorola.reflex'), ('text/vnd.ms-mediapackage', 'text/vnd.ms-mediapackage'), ('text/vnd.net2phone.commcenter.command', 'text/vnd.net2phone.commcenter.command'), ('text/vnd.radisys.msml-basic-layout', 'text/vnd.radisys.msml-basic-layout'), ('text/vnd.si.uricatalogue', 'text/vnd.si.uricatalogue'), ('text/vnd.sun.j2me.app-descriptor', 'text/vnd.sun.j2me.app-descriptor'), ('text/vnd.trolltech.linguist', 'text/vnd.trolltech.linguist'), ('text/vnd.wap.si', 'text/vnd.wap.si'), ('text/vnd.wap.sl', 'text/vnd.wap.sl'), ('text/vnd.wap.wml', 'text/vnd.wap.wml'), ('text/vnd.wap.wmlscript', 'text/vnd.wap.wmlscript'), ('text/xml', 'text/xml'), ('text/xml-external-parsed-entity', 'text/xml-external-parsed-entity'), ('video/1d-interleaved-parityfec', 'video/1d-interleaved-parityfec'), ('video/3gpp', 'video/3gpp'), ('video/3gpp2', 'video/3gpp2'), ('video/3gpp-tt', 'video/3gpp-tt'), ('video/BMPEG', 'video/BMPEG'), ('video/BT656', 'video/BT656'), ('video/CelB', 'video/CelB'), ('video/DV', 'video/DV'), ('video/encaprtp', 'video/encaprtp'), ('video/example', 'video/example'), ('video/H261', 'video/H261'), ('video/H263', 'video/H263'), ('video/H263-1998', 'video/H263-1998'), ('video/H263-2000', 'video/H263-2000'), ('video/H264', 'video/H264'), ('video/H264-RCDO', 'video/H264-RCDO'), ('video/H264-SVC', 'video/H264-SVC'), ('video/H265', 'video/H265'), ('video/iso.segment', 'video/iso.segment'), ('video/JPEG', 'video/JPEG'), ('video/jpeg2000', 'video/jpeg2000'), ('video/mj2', 'video/mj2'), ('video/MP1S', 'video/MP1S'), ('video/MP2P', 'video/MP2P'), ('video/MP2T', 'video/MP2T'), ('video/mp4', 'video/mp4'), ('video/MP4V-ES', 'video/MP4V-ES'), ('video/MPV', 'video/MPV'), ('video/mpeg', 'video/mpeg'), ('video/mpeg4-generic', 'video/mpeg4-generic'), ('video/nv', 'video/nv'), ('video/ogg', 'video/ogg'), ('video/parityfec', 'video/parityfec'), ('video/pointer', 'video/pointer'), ('video/quicktime', 'video/quicktime'), ('video/raptorfec', 'video/raptorfec'), ('video/raw', 'video/raw'), ('video/rtp-enc-aescm128', 'video/rtp-enc-aescm128'), ('video/rtploopback', 'video/rtploopback'), ('video/rtx', 'video/rtx'), ('video/SMPTE292M', 'video/SMPTE292M'), ('video/ulpfec', 'video/ulpfec'), ('video/vc1', 'video/vc1'), ('video/vnd.CCTV', 'video/vnd.CCTV'), ('video/vnd.dece.hd', 'video/vnd.dece.hd'), ('video/vnd.dece.mobile', 'video/vnd.dece.mobile'), ('video/vnd.dece.mp4', 'video/vnd.dece.mp4'), ('video/vnd.dece.pd', 'video/vnd.dece.pd'), ('video/vnd.dece.sd', 'video/vnd.dece.sd'), ('video/vnd.dece.video', 'video/vnd.dece.video'), ('video/vnd.directv.mpeg', 'video/vnd.directv.mpeg'), ('video/vnd.directv.mpeg-tts', 'video/vnd.directv.mpeg-tts'), ('video/vnd.dlna.mpeg-tts', 'video/vnd.dlna.mpeg-tts'), ('video/vnd.dvb.file', 'video/vnd.dvb.file'), ('video/vnd.fvt', 'video/vnd.fvt'), ('video/vnd.hns.video', 'video/vnd.hns.video'), ('video/vnd.iptvforum.1dparityfec-1010', 'video/vnd.iptvforum.1dparityfec-1010'), ('video/vnd.iptvforum.1dparityfec-2005', 'video/vnd.iptvforum.1dparityfec-2005'), ('video/vnd.iptvforum.2dparityfec-1010', 'video/vnd.iptvforum.2dparityfec-1010'), ('video/vnd.iptvforum.2dparityfec-2005', 'video/vnd.iptvforum.2dparityfec-2005'), ('video/vnd.iptvforum.ttsavc', 'video/vnd.iptvforum.ttsavc'), ('video/vnd.iptvforum.ttsmpeg2', 'video/vnd.iptvforum.ttsmpeg2'), ('video/vnd.motorola.video', 'video/vnd.motorola.video'), ('video/vnd.motorola.videop', 'video/vnd.motorola.videop'), ('video/vnd.mpegurl', 'video/vnd.mpegurl'), ('video/vnd.ms-playready.media.pyv', 'video/vnd.ms-playready.media.pyv'), ('video/vnd.nokia.interleaved-multimedia', 'video/vnd.nokia.interleaved-multimedia'), ('video/vnd.nokia.videovoip', 'video/vnd.nokia.videovoip'), ('video/vnd.objectvideo', 'video/vnd.objectvideo'), ('video/vnd.radgamettools.bink', 'video/vnd.radgamettools.bink'), ('video/vnd.radgamettools.smacker', 'video/vnd.radgamettools.smacker'), ('video/vnd.sealed.mpeg1', 'video/vnd.sealed.mpeg1'), ('video/vnd.sealed.mpeg4', 'video/vnd.sealed.mpeg4'), ('video/vnd.sealed.swf', 'video/vnd.sealed.swf'), ('video/vnd.sealedmedia.softseal.mov', 'video/vnd.sealedmedia.softseal.mov'), ('video/vnd.uvvu.mp4', 'video/vnd.uvvu.mp4'), ('video/vnd.vivo', 'video/vnd.vivo'), ('video/VP8', 'video/VP8')])),
                ('title', akvo.rsr.fields.ValidXMLCharField(default='Untitled document', help_text='Enter the title of your document.', max_length=100, verbose_name='document title', blank=True)),
                ('title_language', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language of the document title.', max_length=2, verbose_name='title language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')])),
                ('language', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the language that the document is written in.', max_length=2, verbose_name='document language', choices=[('aa', 'aa - Afar'), ('ab', 'ab - Abkhazian'), ('ae', 'ae - Avestan'), ('af', 'af - Afrikaans'), ('ak', 'ak - Akan'), ('am', 'am - Amharic'), ('an', 'an - Aragonese'), ('ar', 'ar - Arabic'), ('as', 'as - Assamese'), ('av', 'av - Avaric'), ('ay', 'ay - Aymara'), ('az', 'az - Azerbaijani'), ('ba', 'ba - Bashkir'), ('be', 'be - Belarusian'), ('bg', 'bg - Bulgarian'), ('bh', 'bh - Bihari languages'), ('bi', 'bi - Bislama'), ('bm', 'bm - Bambara'), ('bn', 'bn - Bengali'), ('bo', 'bo - Tibetan'), ('br', 'br - Breton'), ('bs', 'bs - Bosnian'), ('ca', 'ca - Catalan; Valencian'), ('ce', 'ce - Chechen'), ('ch', 'ch - Chamorro'), ('co', 'co - Corsican'), ('cr', 'cr - Cree'), ('cs', 'cs - Czech'), ('cv', 'cv - Chuvash'), ('cy', 'cy - Welsh'), ('da', 'da - Danish'), ('de', 'de - German'), ('dv', 'dv - Divehi; Dhivehi; Maldivian'), ('dz', 'dz - Dzongkha'), ('ee', 'ee - Ewe'), ('el', 'el - Greek'), ('en', 'en - English'), ('eo', 'eo - Esperanto'), ('es', 'es - Spanish; Castilian'), ('et', 'et - Estonian'), ('eu', 'eu - Basque'), ('fa', 'fa - Persian'), ('ff', 'ff - Fulah'), ('fi', 'fi - Finnish'), ('fj', 'fj - Fijian'), ('fo', 'fo - Faroese'), ('fr', 'fr - French'), ('fy', 'fy - Western Frisian'), ('ga', 'ga - Irish'), ('gd', 'gd - Gaelic; Scottish Gaelic'), ('gl', 'gl - Galician'), ('gn', 'gn - Guarani'), ('gu', 'gu - Gujarati'), ('gv', 'gv - Manx'), ('ha', 'ha - Hausa'), ('he', 'he - Hebrew'), ('hi', 'hi - Hindi'), ('ho', 'ho - Hiri Motu'), ('hr', 'hr - Croatian'), ('ht', 'ht - Haitian; Haitian Creole'), ('hu', 'hu - Hungarian'), ('hy', 'hy - Armenian'), ('hz', 'hz - Herero'), ('id', 'id - Indonesian'), ('ig', 'ig - Igbo'), ('ii', 'ii - Sichuan Yi; Nuosu'), ('ik', 'ik - Inupiaq'), ('io', 'io - Ido'), ('is', 'is - Icelandic'), ('it', 'it - Italian'), ('iu', 'iu - Inuktitut'), ('ja', 'ja - Japanese'), ('jv', 'jv - Javanese'), ('ka', 'ka - Georgian'), ('kg', 'kg - Kongo'), ('ki', 'ki - Kikuyu; Gikuyu'), ('kj', 'kj - Kuanyama; Kwanyama'), ('kk', 'kk - Kazakh'), ('kl', 'kl - Kalaallisut; Greenlandic'), ('km', 'km - Central Khmer'), ('kn', 'kn - Kannada'), ('ko', 'ko - Korean'), ('kr', 'kr - Kanuri'), ('ks', 'ks - Kashmiri'), ('ku', 'ku - Kurdish'), ('kv', 'kv - Komi'), ('kw', 'kw - Cornish'), ('ky', 'ky - Kirghiz; Kyrgyz'), ('la', 'la - Latin'), ('lb', 'lb - Luxembourgish; Letzeburgesch'), ('lg', 'lg - Ganda'), ('li', 'li - Limburgan; Limburger; Limburgish'), ('ln', 'ln - Lingala'), ('lo', 'lo - Lao'), ('lt', 'lt - Lithuanian'), ('lu', 'lu - Luba-Katanga'), ('lv', 'lv - Latvian'), ('mg', 'mg - Malagasy'), ('mh', 'mh - Marshallese'), ('mi', 'mi - Maori'), ('mk', 'mk - Macedonian'), ('ml', 'ml - Malayalam'), ('mn', 'mn - Mongolian'), ('mr', 'mr - Marathi'), ('ms', 'ms - Malay'), ('mt', 'mt - Maltese'), ('my', 'my - Burmese'), ('na', 'na - Nauru'), ('nb', 'nb - Bokm\u0102\u013dl, Norwegian; Norwegian Bokm\u0102\u013dl'), ('nd', 'nd - Ndebele, North; North Ndebele'), ('ne', 'ne - Nepali'), ('ng', 'ng - Ndonga'), ('nl', 'nl - Dutch; Flemish'), ('nn', 'nn - Norwegian Nynorsk; Nynorsk, Norwegian'), ('no', 'no - Norwegian'), ('nr', 'nr - Ndebele, South; South Ndebele'), ('nv', 'nv - Navajo; Navaho'), ('ny', 'ny - Chichewa; Chewa; Nyanja'), ('oc', 'oc - Occitan (post 1500)'), ('oj', 'oj - Ojibwa'), ('om', 'om - Oromo'), ('or', 'or - Oriya'), ('os', 'os - Ossetian; Ossetic'), ('pa', 'pa - Panjabi; Punjabi'), ('pi', 'pi - Pali'), ('pl', 'pl - Polish'), ('ps', 'ps - Pushto; Pashto'), ('pt', 'pt - Portuguese'), ('qu', 'qu - Quechua'), ('rm', 'rm - Romansh'), ('rn', 'rn - Rundi'), ('ro', 'ro - Romanian; Moldavian; Moldovan'), ('ru', 'ru - Russian'), ('rw', 'rw - Kinyarwanda'), ('sa', 'sa - Sanskrit'), ('sc', 'sc - Sardinian'), ('sd', 'sd - Sindhi'), ('se', 'se - Northern Sami'), ('sg', 'sg - Sango'), ('si', 'si - Sinhala; Sinhalese'), ('sk', 'sk - Slovak'), ('sl', 'sl - Slovenian'), ('sm', 'sm - Samoan'), ('sn', 'sn - Shona'), ('so', 'so - Somali'), ('sq', 'sq - Albanian'), ('sr', 'sr - Serbian'), ('ss', 'ss - Swati'), ('st', 'st - Sotho, Southern'), ('su', 'su - Sundanese'), ('sv', 'sv - Swedish'), ('sw', 'sw - Swahili'), ('ta', 'ta - Tamil'), ('te', 'te - Telugu'), ('tg', 'tg - Tajik'), ('th', 'th - Thai'), ('ti', 'ti - Tigrinya'), ('tk', 'tk - Turkmen'), ('tl', 'tl - Tagalog'), ('tn', 'tn - Tswana'), ('to', 'to - Tonga (Tonga Islands)'), ('tr', 'tr - Turkish'), ('ts', 'ts - Tsonga'), ('tt', 'tt - Tatar'), ('tw', 'tw - Twi'), ('ty', 'ty - Tahitian'), ('ug', 'ug - Uighur; Uyghur'), ('uk', 'uk - Ukrainian'), ('ur', 'ur - Urdu'), ('uz', 'uz - Uzbek'), ('ve', 've - Venda'), ('vi', 'vi - Vietnamese'), ('vo', 'vo - Volap\u0102\u017ak'), ('wa', 'wa - Walloon'), ('wo', 'wo - Wolof'), ('xh', 'xh - Xhosa'), ('yi', 'yi - Yiddish'), ('yo', 'yo - Yoruba'), ('za', 'za - Zhuang; Chuang'), ('zh', 'zh - Chinese'), ('zu', 'zu - Zulu')])),
                ('document_date', models.DateField(help_text='Enter the date (DD/MM/YYYY) to be used for the production or publishing date of the relevant document to identify the specific document version.', null=True, verbose_name='document date', blank=True)),
                ('project', models.ForeignKey(related_name='documents', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'project document',
                'verbose_name_plural': 'project documents',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectDocumentCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('category', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The description of the type of content contained within the document.', max_length=3, verbose_name='document category', choices=[('A01', 'A01 - Pre- and post-project impact appraisal'), ('A02', 'A02 - Objectives / Purpose of activity'), ('A03', 'A03 - Intended ultimate beneficiaries'), ('A04', 'A04 - Conditions'), ('A05', 'A05 - Budget'), ('A06', 'A06 - Summary information about contract'), ('A07', 'A07 - Review of project performance and evaluation'), ('A08', 'A08 - Results, outcomes and outputs'), ('A09', 'A09 - Memorandum of understanding (If agreed by all parties)'), ('A10', 'A10 - Tender'), ('A11', 'A11 - Contract'), ('A12', 'A12 - Activity web page'), ('B01', 'B01 - Annual report'), ('B02', 'B02 - Institutional Strategy paper'), ('B03', 'B03 - Country strategy paper'), ('B04', 'B04 - Aid Allocation Policy'), ('B05', 'B05 - Procurement Policy and Procedure'), ('B06', 'B06 - Institutional Audit Report'), ('B07', 'B07 - Country Audit Report'), ('B08', 'B08 - Exclusions Policy'), ('B09', 'B09 - Institutional Evaluation Report'), ('B10', 'B10 - Country Evaluation Report'), ('B11', 'B11 - Sector strategy'), ('B12', 'B12 - Thematic strategy'), ('B13', 'B13 - Country-level Memorandum of Understanding'), ('B14', 'B14 - Evaluations policy'), ('B15', 'B15 - General Terms and Conditions'), ('B16', 'B16 - Organisation web page'), ('B17', 'B17 - Country/Region web page'), ('B18', 'B18 - Sector web page')])),
                ('document', models.ForeignKey(related_name='categories', verbose_name='document', to='rsr.ProjectDocument')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'project document category',
                'verbose_name_plural': 'project document categories',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectEditorValidation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('validation', models.CharField(max_length=255, verbose_name='validation')),
                ('action', models.PositiveSmallIntegerField(db_index=True, verbose_name='action', choices=[(1, 'Mandatory'), (2, 'Hidden')])),
            ],
            options={
                'verbose_name': 'project editor validation',
                'verbose_name_plural': 'project editor validations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectEditorValidationSet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(max_length=5000, verbose_name='description')),
            ],
            options={
                'ordering': ('id',),
                'verbose_name': 'project editor validation set',
                'verbose_name_plural': 'project editor validation sets',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('latitude', akvo.rsr.fields.LatitudeField(default=None, blank=True, help_text='Use a period to denote decimals.', null=True, verbose_name='latitude', db_index=True)),
                ('longitude', akvo.rsr.fields.LongitudeField(default=None, blank=True, help_text='Use a period to denote decimals.', null=True, verbose_name='longitude', db_index=True)),
                ('city', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='city', blank=True)),
                ('state', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='state', blank=True)),
                ('address_1', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 1', blank=True)),
                ('address_2', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 2', blank=True)),
                ('postcode', akvo.rsr.fields.ValidXMLCharField(max_length=10, verbose_name='postal code', blank=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text='An internal reference that describes the location in the reporting organisation\'s own system. For reference see: <a href="http://iatistandard.org/202/activity-standard/iati-activities/iati-activity/location/#attributes" target="_blank">http://iatistandard.org/202/activity-standard/iati-activities/iati-activity/location/#attributes</a>.', max_length=50, verbose_name='reference', blank=True)),
                ('location_code', akvo.rsr.fields.ValidXMLCharField(help_text='Enter a code to identify the region. Codes are based on DAC region codes. Where an activity is considered global, the code 998 can be used. For reference: <a href="http://www.oecd.org/dac/stats/dacandcrscodelists.htm" target="_blank">http://www.oecd.org/dac/stats/dacandcrscodelists.htm</a>.', max_length=25, verbose_name='code', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='vocabulary', choices=[('A1', 'A1 - Global Admininistrative Unit Layers'), ('A2', 'A2 - UN Second Administrative Level Boundary Project'), ('A3', 'A3 - Global Administrative Areas'), ('A4', 'A4 - ISO Country (3166-1 alpha-2)'), ('G1', 'G1 - Geonames'), ('G2', 'G2 - OpenStreetMap')])),
                ('name', akvo.rsr.fields.ValidXMLCharField(help_text='The human-readable name for the location.', max_length=100, verbose_name='name', blank=True)),
                ('description', akvo.rsr.fields.ValidXMLCharField(help_text='This provides free text space for providing an additional description, if needed, of the actual target of the activity. A description that qualifies the location, not the activity.', max_length=2000, verbose_name='location description', blank=True)),
                ('activity_description', akvo.rsr.fields.ValidXMLCharField(help_text='A description that qualifies the activity taking place at the location. This should not duplicate information provided in the main activity description, and should typically be used to distinguish between activities at multiple locations within a single iati-activity record.', max_length=2000, verbose_name='activity description', blank=True)),
                ('exactness', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Defines whether the location represents the most distinct point reasonably possible for this type of activity or is an approximation due to lack of more detailed information.', max_length=1, verbose_name='location precision', choices=[('1', '1 - Exact'), ('2', '2 - Approximate')])),
                ('location_reach', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Does this location describe where the activity takes place or where the intended beneficiaries reside?', max_length=1, verbose_name='reach', choices=[('1', '1 - Activity'), ('2', '2 - Intended Beneficiaries')])),
                ('location_class', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Does the location refer to a physical structure such as a building, a populated place (e.g. city or village), an administrative division, or another topological feature (e.g. river, nature reserve)? For reference: <a href="http://iatistandard.org/202/codelists/GeographicLocationClass/" target="_blank">http://iatistandard.org/202/codelists/GeographicLocationClass/</a>.', max_length=1, verbose_name='class', choices=[('1', '1 - Administrative Region'), ('2', '2 - Populated Place'), ('3', '3 - Structure'), ('4', '4 - Other Topographical Feature')])),
                ('feature_designation', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='A more refined coded classification of the type of feature referred to by this location. For reference: <a href="http://iatistandard.org/202/codelists/LocationType/" target="_blank">http://iatistandard.org/202/codelists/LocationType/</a>.', max_length=5, verbose_name='feature designation', choices=[('AIRQ', 'AIRQ - abandoned airfield'), ('CMPQ', 'CMPQ - abandoned camp'), ('CNLQ', 'CNLQ - abandoned canal'), ('MFGQ', 'MFGQ - abandoned factory'), ('FRMQ', 'FRMQ - abandoned farm'), ('MNQ', 'MNQ - abandoned mine'), ('MSSNQ', 'MSSNQ - abandoned mission'), ('OILQ', 'OILQ - abandoned oil well'), ('PPQ', 'PPQ - abandoned police post'), ('PPLQ', 'PPLQ - abandoned populated place'), ('PRNQ', 'PRNQ - abandoned prison'), ('RRQ', 'RRQ - abandoned railroad'), ('RSTNQ', 'RSTNQ - abandoned railroad station'), ('RSTPQ', 'RSTPQ - abandoned railroad stop'), ('STMQ', 'STMQ - abandoned watercourse'), ('WLLQ', 'WLLQ - abandoned well'), ('ADMD', 'ADMD - administrative division'), ('ADMF', 'ADMF - administrative facility'), ('AGRC', 'AGRC - agricultural colony'), ('AGRF', 'AGRF - agricultural facility'), ('RESA', 'RESA - agricultural reserve'), ('SCHA', 'SCHA - agricultural school'), ('AIRB', 'AIRB - airbase'), ('AIRF', 'AIRF - airfield'), ('AIRP', 'AIRP - airport'), ('AMTH', 'AMTH - amphitheater'), ('STMA', 'STMA - anabranch'), ('ANCH', 'ANCH - anchorage'), ('RDA', 'RDA - ancient road'), ('ANS', 'ANS - ancient site'), ('WALLA', 'WALLA - ancient wall'), ('BLDA', 'BLDA - apartment building'), ('AQC', 'AQC - aquaculture facility'), ('CNLA', 'CNLA - aqueduct'), ('ARCH', 'ARCH - arch'), ('LAND', 'LAND - Arctic land'), ('AREA', 'AREA - area'), ('ISLF', 'ISLF - artificial island'), ('RNGA', 'RNGA - artillery range'), ('ASPH', 'ASPH - asphalt lake'), ('ASTR', 'ASTR - astronomical station'), ('ASYL', 'ASYL - asylum'), ('ATHF', 'ATHF - athletic field'), ('ATOL', 'ATOL - atoll(s)'), ('CTRA', 'CTRA - atomic center'), ('BDLD', 'BDLD - badlands'), ('BSTN', 'BSTN - baling station'), ('ESTB', 'ESTB - banana plantation'), ('BAN', 'BAN - bank'), ('BNK', 'BNK - bank(s)'), ('BAR', 'BAR - bar'), ('BRKS', 'BRKS - barracks'), ('BTL', 'BTL - battlefield'), ('BAY', 'BAY - bay'), ('BAYS', 'BAYS - bays'), ('BCH', 'BCH - beach'), ('RDGB', 'RDGB - beach ridge'), ('BCHS', 'BCHS - beaches'), ('BCN', 'BCN - beacon'), ('BNCH', 'BNCH - bench'), ('BGHT', 'BGHT - bight(s)'), ('BLHL', 'BLHL - blowhole(s)'), ('BLOW', 'BLOW - blowout(s)'), ('BTYD', 'BTYD - boatyard'), ('BOG', 'BOG - bog(s)'), ('PSTB', 'PSTB - border post'), ('BLDR', 'BLDR - boulder field'), ('BP', 'BP - boundary marker'), ('BRKW', 'BRKW - breakwater'), ('MFGB', 'MFGB - brewery'), ('BDG', 'BDG - bridge'), ('ZNB', 'ZNB - buffer zone'), ('BLDG', 'BLDG - building(s)'), ('BUR', 'BUR - burial cave(s)'), ('BUSH', 'BUSH - bush(es)'), ('CTRB', 'CTRB - business center'), ('BUTE', 'BUTE - butte(s)'), ('CARN', 'CARN - cairn'), ('CLDA', 'CLDA - caldera'), ('CMP', 'CMP - camp(s)'), ('CNL', 'CNL - canal'), ('CNLB', 'CNLB - canal bend'), ('TNLC', 'TNLC - canal tunnel'), ('STMC', 'STMC - canalized stream'), ('MFGC', 'MFGC - cannery'), ('CNYN', 'CNYN - canyon'), ('CAPE', 'CAPE - cape'), ('PPLC', 'PPLC - capital of a political entity'), ('RTE', 'RTE - caravan route'), ('CSNO', 'CSNO - casino'), ('CSTL', 'CSTL - castle'), ('TNKD', 'TNKD - cattle dipping tank'), ('CSWY', 'CSWY - causeway'), ('CAVE', 'CAVE - cave(s)'), ('CMTY', 'CMTY - cemetery'), ('CHN', 'CHN - channel'), ('MNCR', 'MNCR - chrome mine(s)'), ('CH', 'CH - church'), ('CRQ', 'CRQ - cirque'), ('CRQS', 'CRQS - cirques'), ('CLG', 'CLG - clearing'), ('CFT', 'CFT - cleft(s)'), ('CLF', 'CLF - cliff(s)'), ('HSPC', 'HSPC - clinic'), ('MNC', 'MNC - coal mine(s)'), ('COLF', 'COLF - coalfield'), ('CST', 'CST - coast'), ('STNC', 'STNC - coast guard station'), ('GRVC', 'GRVC - coconut grove'), ('SCHC', 'SCHC - college'), ('CMN', 'CMN - common'), ('COMC', 'COMC - communication center'), ('CTRCM', 'CTRCM - community center'), ('CNS', 'CNS - concession area'), ('CONE', 'CONE - cone(s)'), ('CNFL', 'CNFL - confluence'), ('CRSU', 'CRSU - continental rise'), ('CVNT', 'CVNT - convent'), ('MNCU', 'MNCU - copper mine(s)'), ('MFGCU', 'MFGCU - copper works'), ('RFC', 'RFC - coral reef(s)'), ('CRRL', 'CRRL - corral(s)'), ('CRDR', 'CRDR - corridor'), ('ESTC', 'ESTC - cotton plantation'), ('HSEC', 'HSEC - country house'), ('CTHSE', 'CTHSE - courthouse'), ('COVE', 'COVE - cove(s)'), ('LKC', 'LKC - crater lake'), ('LKSC', 'LKSC - crater lakes'), ('CRTR', 'CRTR - crater(s)'), ('CUET', 'CUET - cuesta(s)'), ('CULT', 'CULT - cultivated area'), ('CRNT', 'CRNT - current'), ('CSTM', 'CSTM - customs house'), ('PSTC', 'PSTC - customs post'), ('CUTF', 'CUTF - cutoff'), ('DARY', 'DARY - dairy'), ('DAM', 'DAM - dam'), ('DEPU', 'DEPU - deep'), ('DLTA', 'DLTA - delta'), ('PCLD', 'PCLD - dependent political entity'), ('DPR', 'DPR - depression(s)'), ('DSRT', 'DSRT - desert'), ('PPLW', 'PPLW - destroyed populated place'), ('MNDT', 'MNDT - diatomite mine(s)'), ('DIKE', 'DIKE - dike'), ('DIP', 'DIP - diplomatic facility'), ('HSPD', 'HSPD - dispensary'), ('STMD', 'STMD - distributary(-ies)'), ('DTCH', 'DTCH - ditch'), ('DTCHM', 'DTCHM - ditch mouth(s)'), ('DVD', 'DVD - divide'), ('DCK', 'DCK - dock(s)'), ('DCKB', 'DCKB - docking basin'), ('DCKY', 'DCKY - dockyard'), ('BSND', 'BSND - drainage basin'), ('CNLD', 'CNLD - drainage canal'), ('DTCHD', 'DTCHD - drainage ditch'), ('DCKD', 'DCKD - dry dock'), ('SBED', 'SBED - dry stream bed'), ('DUNE', 'DUNE - dune(s)'), ('RGNE', 'RGNE - economic region'), ('SCRP', 'SCRP - escarpment'), ('EST', 'EST - estate(s)'), ('ESTY', 'ESTY - estuary'), ('STNE', 'STNE - experiment station'), ('FCL', 'FCL - facility'), ('CTRF', 'CTRF - facility center'), ('MFG', 'MFG - factory'), ('FAN', 'FAN - fan(s)'), ('FRM', 'FRM - farm'), ('PPLF', 'PPLF - farm village'), ('FRMS', 'FRMS - farms'), ('FRMT', 'FRMT - farmstead'), ('FY', 'FY - ferry'), ('FYT', 'FYT - ferry terminal'), ('FLD', 'FLD - field(s)'), ('FIRE', 'FIRE - fire station'), ('ADM1', 'ADM1 - first-order administrative division'), ('FISH', 'FISH - fishing area'), ('PNDSF', 'PNDSF - fishponds'), ('FSR', 'FSR - fissure'), ('FJD', 'FJD - fjord'), ('FJDS', 'FJDS - fjords'), ('FORD', 'FORD - ford'), ('RESF', 'RESF - forest reserve'), ('STNF', 'STNF - forest station'), ('FRST', 'FRST - forest(s)'), ('INLTQ', 'INLTQ - former inlet'), ('MLSGQ', 'MLSGQ - former sugar mill'), ('FT', 'FT - fort'), ('FRSTF', 'FRSTF - fossilized forest'), ('FNDY', 'FNDY - foundry'), ('ADM4', 'ADM4 - fourth-order administrative division'), ('ZNF', 'ZNF - free trade zone'), ('PCLF', 'PCLF - freely associated state'), ('DPOF', 'DPOF - fuel depot'), ('GAP', 'GAP - gap'), ('GDN', 'GDN - garden(s)'), ('GOSP', 'GOSP - gas-oil separator plant'), ('GASF', 'GASF - gasfield'), ('GATE', 'GATE - gate'), ('GYSR', 'GYSR - geyser'), ('GHAT', 'GHAT - gh\xc4\x81t'), ('GLCR', 'GLCR - glacier(s)'), ('MNAU', 'MNAU - gold mine(s)'), ('RECG', 'RECG - golf course'), ('GRGE', 'GRGE - gorge(s)'), ('GRSLD', 'GRSLD - grassland'), ('GRVE', 'GRVE - grave'), ('GVL', 'GVL - gravel area'), ('GRAZ', 'GRAZ - grazing area'), ('GHSE', 'GHSE - guest house'), ('GULF', 'GULF - gulf'), ('HLT', 'HLT - halting place'), ('HMCK', 'HMCK - hammock(s)'), ('AIRG', 'AIRG - hangar'), ('VALG', 'VALG - hanging valley'), ('HBR', 'HBR - harbor(s)'), ('HDLD', 'HDLD - headland'), ('STMH', 'STMH - headwaters'), ('HTH', 'HTH - heath'), ('AIRH', 'AIRH - heliport'), ('HERM', 'HERM - hermitage'), ('HLL', 'HLL - hill'), ('HLLS', 'HLLS - hills'), ('ADMDH', 'ADMDH - historical administrative division'), ('ADM1H', 'ADM1H - historical first-order administrative division'), ('ADM4H', 'ADM4H - historical fourth-order administrative division'), ('PCLH', 'PCLH - historical political entity'), ('PPLH', 'PPLH - historical populated place'), ('RRH', 'RRH - historical railroad'), ('RSTNH', 'RSTNH - historical railroad station'), ('RGNH', 'RGNH - historical region'), ('ADM2H', 'ADM2H - historical second-order administrative division'), ('HSTS', 'HSTS - historical site'), ('ADM3H', 'ADM3H - historical third-order administrative division'), ('UFHU', 'UFHU - historical undersea feature'), ('HMSD', 'HMSD - homestead'), ('HSP', 'HSP - hospital'), ('SPNT', 'SPNT - hot spring(s)'), ('HTL', 'HTL - hotel'), ('HSE', 'HSE - house(s)'), ('DEVH', 'DEVH - housing development'), ('RESH', 'RESH - hunting reserve'), ('HUT', 'HUT - hut'), ('HUTS', 'HUTS - huts'), ('PSH', 'PSH - hydroelectric power station'), ('CAPG', 'CAPG - icecap'), ('DPRG', 'DPRG - icecap depression'), ('DOMG', 'DOMG - icecap dome'), ('RDGG', 'RDGG - icecap ridge'), ('PCLI', 'PCLI - independent political entity'), ('INDS', 'INDS - industrial area'), ('INLT', 'INLT - inlet'), ('STNI', 'STNI - inspection station'), ('TRGD', 'TRGD - interdune trough(s)'), ('INTF', 'INTF - interfluve'), ('LKI', 'LKI - intermittent lake'), ('LKSI', 'LKSI - intermittent lakes'), ('LKOI', 'LKOI - intermittent oxbow lake'), ('PNDI', 'PNDI - intermittent pond'), ('PNDSI', 'PNDSI - intermittent ponds'), ('POOLI', 'POOLI - intermittent pool'), ('RSVI', 'RSVI - intermittent reservoir'), ('LKNI', 'LKNI - intermittent salt lake'), ('LKSNI', 'LKSNI - intermittent salt lakes'), ('PNDNI', 'PNDNI - intermittent salt pond(s)'), ('STMI', 'STMI - intermittent stream'), ('WTLDI', 'WTLDI - intermittent wetland'), ('RDIN', 'RDIN - intersection'), ('MNFE', 'MNFE - iron mine(s)'), ('FLDI', 'FLDI - irrigated field(s)'), ('CNLI', 'CNLI - irrigation canal'), ('DTCHI', 'DTCHI - irrigation ditch'), ('SYSI', 'SYSI - irrigation system'), ('ISL', 'ISL - island'), ('ISLS', 'ISLS - islands'), ('STLMT', 'STLMT - Israeli settlement'), ('ISTH', 'ISTH - isthmus'), ('JTY', 'JTY - jetty'), ('KRST', 'KRST - karst area'), ('CMPLA', 'CMPLA - labor camp'), ('LGN', 'LGN - lagoon'), ('LGNS', 'LGNS - lagoons'), ('LK', 'LK - lake'), ('LBED', 'LBED - lake bed(s)'), ('CHNL', 'CHNL - lake channel(s)'), ('RGNL', 'RGNL - lake region'), ('LKS', 'LKS - lakes'), ('ISLT', 'ISLT - land-tied island'), ('LNDF', 'LNDF - landfill'), ('LDNG', 'LDNG - landing'), ('LAVA', 'LAVA - lava area'), ('MNPB', 'MNPB - lead mine(s)'), ('LTER', 'LTER - leased area'), ('LEPC', 'LEPC - leper colony'), ('HSPL', 'HSPL - leprosarium'), ('LEV', 'LEV - levee'), ('LTHSE', 'LTHSE - lighthouse'), ('MFGLM', 'MFGLM - limekiln'), ('GOVL', 'GOVL - local government office'), ('LCTY', 'LCTY - locality'), ('LOCK', 'LOCK - lock(s)'), ('CMPL', 'CMPL - logging camp'), ('STMSB', 'STMSB - lost river'), ('MVA', 'MVA - maneuver area'), ('ISLM', 'ISLM - mangrove island'), ('MGV', 'MGV - mangrove swamp'), ('MAR', 'MAR - marina'), ('CHNM', 'CHNM - marine channel'), ('SCHN', 'SCHN - maritime school'), ('MKT', 'MKT - market'), ('MRSH', 'MRSH - marsh(es)'), ('MDW', 'MDW - meadow'), ('NKM', 'NKM - meander neck'), ('CTRM', 'CTRM - medical center'), ('MESA', 'MESA - mesa(s)'), ('STNM', 'STNM - meteorological station'), ('MILB', 'MILB - military base'), ('INSM', 'INSM - military installation'), ('SCHM', 'SCHM - military school'), ('ML', 'ML - mill(s)'), ('MN', 'MN - mine(s)'), ('MNA', 'MNA - mining area'), ('CMPMN', 'CMPMN - mining camp'), ('MSSN', 'MSSN - mission'), ('MOLE', 'MOLE - mole'), ('MSTY', 'MSTY - monastery'), ('MNMT', 'MNMT - monument'), ('MOOR', 'MOOR - moor(s)'), ('MRN', 'MRN - moraine'), ('MSQE', 'MSQE - mosque'), ('MND', 'MND - mound(s)'), ('MT', 'MT - mountain'), ('MTS', 'MTS - mountains'), ('FLTM', 'FLTM - mud flat(s)'), ('MFGM', 'MFGM - munitions plant'), ('MUS', 'MUS - museum'), ('NRWS', 'NRWS - narrows'), ('TNLN', 'TNLN - natural tunnel'), ('RESN', 'RESN - nature reserve'), ('NVB', 'NVB - naval base'), ('CNLN', 'CNLN - navigation canal(s)'), ('CHNN', 'CHNN - navigation channel'), ('MNNI', 'MNNI - nickel mine(s)'), ('NOV', 'NOV - novitiate'), ('PSN', 'PSN - nuclear power station'), ('NTK', 'NTK - nunatak'), ('NTKS', 'NTKS - nunataks'), ('NSY', 'NSY - nursery(-ies)'), ('OAS', 'OAS - oasis(-es)'), ('OBPT', 'OBPT - observation point'), ('OBS', 'OBS - observatory'), ('OCN', 'OCN - ocean'), ('BLDO', 'BLDO - office building'), ('CMPO', 'CMPO - oil camp'), ('ESTO', 'ESTO - oil palm plantation'), ('OILP', 'OILP - oil pipeline'), ('OILJ', 'OILJ - oil pipeline junction'), ('TRMO', 'TRMO - oil pipeline terminal'), ('PMPO', 'PMPO - oil pumping station'), ('OILR', 'OILR - oil refinery'), ('OILW', 'OILW - oil well'), ('OILF', 'OILF - oilfield'), ('GRVO', 'GRVO - olive grove'), ('MLO', 'MLO - olive oil mill'), ('OCH', 'OCH - orchard(s)'), ('MLM', 'MLM - ore treatment plant'), ('OVF', 'OVF - overfalls'), ('LKO', 'LKO - oxbow lake'), ('PGDA', 'PGDA - pagoda'), ('PAL', 'PAL - palace'), ('GRVP', 'GRVP - palm grove'), ('RESP', 'RESP - palm tree reserve'), ('PAN', 'PAN - pan'), ('PANS', 'PANS - pans'), ('PRSH', 'PRSH - parish'), ('PRK', 'PRK - park'), ('PRKGT', 'PRKGT - park gate'), ('PRKHQ', 'PRKHQ - park headquarters'), ('GARG', 'GARG - parking garage'), ('PKLT', 'PKLT - parking lot'), ('PASS', 'PASS - pass'), ('PSTP', 'PSTP - patrol post'), ('PK', 'PK - peak'), ('PKS', 'PKS - peaks'), ('PEAT', 'PEAT - peat cutting area'), ('PEN', 'PEN - peninsula'), ('BSNP', 'BSNP - petroleum basin'), ('MFGPH', 'MFGPH - phosphate works'), ('PIER', 'PIER - pier'), ('GRVPN', 'GRVPN - pine grove'), ('MNPL', 'MNPL - placer mine(s)'), ('PLN', 'PLN - plain(s)'), ('PLAT', 'PLAT - plateau'), ('PT', 'PT - point'), ('PTS', 'PTS - points'), ('PLDR', 'PLDR - polder'), ('PP', 'PP - police post'), ('PCL', 'PCL - political entity'), ('PND', 'PND - pond'), ('PNDS', 'PNDS - ponds'), ('POOL', 'POOL - pool(s)'), ('PPLL', 'PPLL - populated locality'), ('PPL', 'PPL - populated place'), ('PPLS', 'PPLS - populated places'), ('PRT', 'PRT - port'), ('PTGE', 'PTGE - portage'), ('PO', 'PO - post office'), ('PS', 'PS - power station'), ('PRN', 'PRN - prison'), ('PRMN', 'PRMN - promenade'), ('PROM', 'PROM - promontory(-ies)'), ('PYR', 'PYR - pyramid'), ('PYRS', 'PYRS - pyramids'), ('MNQR', 'MNQR - quarry(-ies)'), ('QUAY', 'QUAY - quay'), ('QCKS', 'QCKS - quicksand'), ('RECR', 'RECR - racetrack'), ('OBSR', 'OBSR - radio observatory'), ('STNR', 'STNR - radio station'), ('RR', 'RR - railroad'), ('RJCT', 'RJCT - railroad junction'), ('RSD', 'RSD - railroad siding'), ('RSGNL', 'RSGNL - railroad signal'), ('RSTN', 'RSTN - railroad station'), ('RSTP', 'RSTP - railroad stop'), ('TNLRR', 'TNLRR - railroad tunnel'), ('RYD', 'RYD - railroad yard'), ('RNCH', 'RNCH - ranch(es)'), ('RPDS', 'RPDS - rapids'), ('RVN', 'RVN - ravine(s)'), ('RCH', 'RCH - reach'), ('RF', 'RF - reef(s)'), ('PRNJ', 'PRNJ - reformatory'), ('CMPRF', 'CMPRF - refugee camp'), ('RGN', 'RGN - region'), ('CTRR', 'CTRR - religious center'), ('PPLR', 'PPLR - religious populated place'), ('RLG', 'RLG - religious site'), ('ITTR', 'ITTR - research institute'), ('RESV', 'RESV - reservation'), ('RES', 'RES - reserve'), ('RSV', 'RSV - reservoir(s)'), ('RSRT', 'RSRT - resort'), ('RHSE', 'RHSE - resthouse'), ('RLGR', 'RLGR - retreat'), ('RDGE', 'RDGE - ridge(s)'), ('RD', 'RD - road'), ('RDB', 'RDB - road bend'), ('RDCUT', 'RDCUT - road cut'), ('RDJCT', 'RDJCT - road junction'), ('TNLRD', 'TNLRD - road tunnel'), ('RDST', 'RDST - roadstead'), ('RK', 'RK - rock'), ('HMDA', 'HMDA - rock desert'), ('RKFL', 'RKFL - rockfall'), ('RKS', 'RKS - rocks'), ('RKRY', 'RKRY - rookery'), ('ESTR', 'ESTR - rubber plantation'), ('RUIN', 'RUIN - ruin(s)'), ('BDGQ', 'BDGQ - ruined bridge'), ('DAMQ', 'DAMQ - ruined dam'), ('SBKH', 'SBKH - sabkha(s)'), ('SDL', 'SDL - saddle'), ('SALT', 'SALT - salt area'), ('MFGN', 'MFGN - salt evaporation ponds'), ('LKN', 'LKN - salt lake'), ('LKSN', 'LKSN - salt lakes'), ('MRSHN', 'MRSHN - salt marsh'), ('MNN', 'MNN - salt mine(s)'), ('PNDN', 'PNDN - salt pond'), ('PNDSN', 'PNDSN - salt ponds'), ('SNTR', 'SNTR - sanatorium'), ('SAND', 'SAND - sand area'), ('ERG', 'ERG - sandy desert'), ('STNS', 'STNS - satellite station'), ('MLSW', 'MLSW - sawmill'), ('SCH', 'SCH - school'), ('ADMS', 'ADMS - school district'), ('STNB', 'STNB - scientific research base'), ('SCRB', 'SCRB - scrubland'), ('SEA', 'SEA - sea'), ('SCNU', 'SCNU - seachannel'), ('SCSU', 'SCSU - seachannels'), ('SMU', 'SMU - seamount'), ('SMSU', 'SMSU - seamounts'), ('AIRS', 'AIRS - seaplane landing area'), ('PPLA', 'PPLA - seat of a first-order administrative division'), ('PPLA4', 'PPLA4 - seat of a fourth-order administrative division'), ('PPLA2', 'PPLA2 - seat of a second-order administrative division'), ('PPLA3', 'PPLA3 - seat of a third-order administrative division'), ('ADM2', 'ADM2 - second-order administrative division'), ('BNKX', 'BNKX - section of bank'), ('CNLX', 'CNLX - section of canal'), ('ESTX', 'ESTX - section of estate'), ('HBRX', 'HBRX - section of harbor'), ('PCLIX', 'PCLIX - section of independent political entity'), ('STMIX', 'STMIX - section of intermittent stream'), ('ISLX', 'ISLX - section of island'), ('LGNX', 'LGNX - section of lagoon'), ('LKX', 'LKX - section of lake'), ('PENX', 'PENX - section of peninsula'), ('PLNX', 'PLNX - section of plain'), ('PLATX', 'PLATX - section of plateau'), ('PPLX', 'PPLX - section of populated place'), ('RFX', 'RFX - section of reef'), ('STMX', 'STMX - section of stream'), ('VALX', 'VALX - section of valley'), ('WADX', 'WADX - section of wadi'), ('FLLSX', 'FLLSX - section of waterfall(s)'), ('PCLS', 'PCLS - semi-independent political entity'), ('SWT', 'SWT - sewage treatment plant'), ('SHPF', 'SHPF - sheepfold'), ('SHOL', 'SHOL - shoal(s)'), ('SHOPC', 'SHOPC - shopping center or mall'), ('SHOR', 'SHOR - shore'), ('SHRN', 'SHRN - shrine'), ('SILL', 'SILL - sill'), ('SINK', 'SINK - sinkhole'), ('ESTSL', 'ESTSL - sisal plantation'), ('SLID', 'SLID - slide'), ('SLP', 'SLP - slope(s)'), ('SLCE', 'SLCE - sluice'), ('SNOW', 'SNOW - snowfield'), ('SD', 'SD - sound'), ('SPA', 'SPA - spa'), ('CTRS', 'CTRS - space center'), ('SPLY', 'SPLY - spillway'), ('SPIT', 'SPIT - spit'), ('SPNG', 'SPNG - spring(s)'), ('SPUR', 'SPUR - spur(s)'), ('SQR', 'SQR - square'), ('STBL', 'STBL - stable'), ('STDM', 'STDM - stadium'), ('STPS', 'STPS - steps'), ('STKR', 'STKR - stock route'), ('REG', 'REG - stony desert'), ('RET', 'RET - store'), ('SHSE', 'SHSE - storehouse'), ('STRT', 'STRT - strait'), ('STM', 'STM - stream'), ('BNKR', 'BNKR - stream bank'), ('STMB', 'STMB - stream bend'), ('STMGS', 'STMGS - stream gauging station'), ('STMM', 'STMM - stream mouth(s)'), ('STMS', 'STMS - streams'), ('ST', 'ST - street'), ('DAMSB', 'DAMSB - sub-surface dam'), ('SUBW', 'SUBW - subway'), ('SUBS', 'SUBS - subway station'), ('MLSG', 'MLSG - sugar mill'), ('ESTSG', 'ESTSG - sugar plantation'), ('MFGSG', 'MFGSG - sugar refinery'), ('SPNS', 'SPNS - sulphur spring(s)'), ('SWMP', 'SWMP - swamp'), ('SYG', 'SYG - synagogue'), ('TMTU', 'TMTU - tablemount (or guyot)'), ('TMSU', 'TMSU - tablemounts (or guyots)'), ('TAL', 'TAL - talus slope'), ('OILT', 'OILT - tank farm'), ('ESTT', 'ESTT - tea plantation'), ('SCHT', 'SCHT - technical school'), ('TMPL', 'TMPL - temple(s)'), ('AIRT', 'AIRT - terminal'), ('TRR', 'TRR - terrace'), ('TERR', 'TERR - territory'), ('ADM3', 'ADM3 - third-order administrative division'), ('CRKT', 'CRKT - tidal creek(s)'), ('FLTT', 'FLTT - tidal flat(s)'), ('MNSN', 'MNSN - tin mine(s)'), ('TOLL', 'TOLL - toll gate/barrier'), ('TMB', 'TMB - tomb(s)'), ('TOWR', 'TOWR - tower'), ('RDCR', 'RDCR - traffic circle'), ('TRL', 'TRL - trail'), ('TRANT', 'TRANT - transit terminal'), ('TREE', 'TREE - tree(s)'), ('TRIG', 'TRIG - triangulation station'), ('TRB', 'TRB - tribal area'), ('TUND', 'TUND - tundra'), ('TNL', 'TNL - tunnel'), ('TNLS', 'TNLS - tunnels'), ('CNLSB', 'CNLSB - underground irrigation canal(s)'), ('LKSB', 'LKSB - underground lake'), ('APNU', 'APNU - undersea apron'), ('ARCU', 'ARCU - undersea arch'), ('ARRU', 'ARRU - undersea arrugado'), ('BNKU', 'BNKU - undersea bank'), ('BKSU', 'BKSU - undersea banks'), ('BSNU', 'BSNU - undersea basin'), ('BNCU', 'BNCU - undersea bench'), ('BDLU', 'BDLU - undersea borderland'), ('CNYU', 'CNYU - undersea canyon'), ('CNSU', 'CNSU - undersea canyons'), ('CDAU', 'CDAU - undersea cordillera'), ('ESCU', 'ESCU - undersea escarpment (or scarp)'), ('FANU', 'FANU - undersea fan'), ('FLTU', 'FLTU - undersea flat'), ('FRKU', 'FRKU - undersea fork'), ('FRSU', 'FRSU - undersea forks'), ('FRZU', 'FRZU - undersea fracture zone'), ('FURU', 'FURU - undersea furrow'), ('GAPU', 'GAPU - undersea gap'), ('GLYU', 'GLYU - undersea gully'), ('HLLU', 'HLLU - undersea hill'), ('HLSU', 'HLSU - undersea hills'), ('HOLU', 'HOLU - undersea hole'), ('KNLU', 'KNLU - undersea knoll'), ('KNSU', 'KNSU - undersea knolls'), ('LDGU', 'LDGU - undersea ledge'), ('LEVU', 'LEVU - undersea levee'), ('MDVU', 'MDVU - undersea median valley'), ('MESU', 'MESU - undersea mesa'), ('MOTU', 'MOTU - undersea moat'), ('MNDU', 'MNDU - undersea mound'), ('MTU', 'MTU - undersea mountain'), ('MTSU', 'MTSU - undersea mountains'), ('PKU', 'PKU - undersea peak'), ('PKSU', 'PKSU - undersea peaks'), ('PNLU', 'PNLU - undersea pinnacle'), ('PLNU', 'PLNU - undersea plain'), ('PLTU', 'PLTU - undersea plateau'), ('PLFU', 'PLFU - undersea platform'), ('PRVU', 'PRVU - undersea province'), ('RMPU', 'RMPU - undersea ramp'), ('RNGU', 'RNGU - undersea range'), ('RAVU', 'RAVU - undersea ravine'), ('RFU', 'RFU - undersea reef'), ('RFSU', 'RFSU - undersea reefs'), ('RDGU', 'RDGU - undersea ridge'), ('RDSU', 'RDSU - undersea ridges'), ('RISU', 'RISU - undersea rise'), ('SDLU', 'SDLU - undersea saddle'), ('SHFU', 'SHFU - undersea shelf'), ('EDGU', 'EDGU - undersea shelf edge'), ('SHVU', 'SHVU - undersea shelf valley'), ('SHLU', 'SHLU - undersea shoal'), ('SHSU', 'SHSU - undersea shoals'), ('SILU', 'SILU - undersea sill'), ('SLPU', 'SLPU - undersea slope'), ('SPRU', 'SPRU - undersea spur'), ('TERU', 'TERU - undersea terrace'), ('TNGU', 'TNGU - undersea tongue'), ('TRNU', 'TRNU - undersea trench'), ('TRGU', 'TRGU - undersea trough'), ('VALU', 'VALU - undersea valley'), ('VLSU', 'VLSU - undersea valleys'), ('USGE', 'USGE - United States Government Establishment'), ('UPLD', 'UPLD - upland'), ('VAL', 'VAL - valley'), ('VALS', 'VALS - valleys'), ('VETF', 'VETF - veterinary facility'), ('VIN', 'VIN - vineyard'), ('VINS', 'VINS - vineyards'), ('VLC', 'VLC - volcano'), ('WAD', 'WAD - wadi'), ('WADB', 'WADB - wadi bend'), ('WADJ', 'WADJ - wadi junction'), ('WADM', 'WADM - wadi mouth'), ('WADS', 'WADS - wadies'), ('WALL', 'WALL - wall'), ('MLWTR', 'MLWTR - water mill'), ('PMPW', 'PMPW - water pumping station'), ('RSVT', 'RSVT - water tank'), ('WTRC', 'WTRC - watercourse'), ('FLLS', 'FLLS - waterfall(s)'), ('WTRH', 'WTRH - waterhole(s)'), ('WTRW', 'WTRW - waterworks'), ('WEIR', 'WEIR - weir(s)'), ('WLL', 'WLL - well'), ('WLLS', 'WLLS - wells'), ('WTLD', 'WTLD - wetland'), ('STNW', 'STNW - whaling station'), ('WHRF', 'WHRF - wharf(-ves)'), ('WHRL', 'WHRL - whirlpool'), ('RESW', 'RESW - wildlife reserve'), ('MLWND', 'MLWND - windmill'), ('WRCK', 'WRCK - wreck'), ('ZN', 'ZN - zone'), ('ZOO', 'ZOO - zoo')])),
                ('country', models.ForeignKey(blank=True, to='rsr.Country', help_text='The country or countries that benefit(s) from the activity.', null=True, verbose_name='country')),
                ('location_target', models.ForeignKey(related_name='locations', to='rsr.Project')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectUpdate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_at', models.DateTimeField(db_index=True, auto_now_add=True, null=True)),
                ('last_modified_at', models.DateTimeField(db_index=True, auto_now=True, null=True)),
                ('title', akvo.rsr.fields.ValidXMLCharField(help_text='80 characters', max_length=80, verbose_name='title', db_index=True)),
                ('text', akvo.rsr.fields.ValidXMLTextField(verbose_name='text', blank=True)),
                ('language', akvo.rsr.fields.ValidXMLCharField(default=b'en', help_text='The language of the update', max_length=2, choices=[(b'en', b'English'), (b'es', b'Spanish'), (b'fr', b'French')])),
                ('event_date', models.DateField(default=datetime.date.today, help_text='The date of the corresponding event', db_index=True, verbose_name='event date', blank=True)),
                ('photo', sorl.thumbnail.fields.ImageField(help_text='The image should have 4:3 height:width ratio for best displaying result', upload_to=akvo.rsr.models.project_update.image_path, verbose_name='photo', blank=True)),
                ('photo_caption', akvo.rsr.fields.ValidXMLCharField(help_text='75 characters', max_length=75, verbose_name='photo caption', blank=True)),
                ('photo_credit', akvo.rsr.fields.ValidXMLCharField(help_text='75 characters', max_length=75, verbose_name='photo credit', blank=True)),
                ('video', embed_video.fields.EmbedVideoField(help_text='Supported providers: YouTube and Vimeo', verbose_name='video URL', blank=True)),
                ('video_caption', akvo.rsr.fields.ValidXMLCharField(help_text='75 characters', max_length=75, verbose_name='video caption', blank=True)),
                ('video_credit', akvo.rsr.fields.ValidXMLCharField(help_text='75 characters', max_length=75, verbose_name='video credit', blank=True)),
                ('update_method', akvo.rsr.fields.ValidXMLCharField(default=b'W', choices=[(b'W', 'web'), (b'E', 'e-mail'), (b'S', 'SMS'), (b'M', 'mobile')], max_length=1, blank=True, verbose_name='update method', db_index=True)),
                ('user_agent', akvo.rsr.fields.ValidXMLCharField(default=b'', max_length=200, verbose_name='user agent', blank=True)),
                ('uuid', akvo.rsr.fields.ValidXMLCharField(default=b'', max_length=40, blank=True, help_text='Universally unique ID set by creating user agent', verbose_name='uuid', db_index=True)),
                ('notes', akvo.rsr.fields.ValidXMLTextField(default=b'', verbose_name='Notes and comments', blank=True)),
            ],
            options={
                'ordering': ['-event_date', '-id'],
                'get_latest_by': 'event_date',
                'verbose_name': 'project update',
                'verbose_name_plural': 'project updates',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProjectUpdateLocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('latitude', akvo.rsr.fields.LatitudeField(default=None, blank=True, help_text='Use a period to denote decimals.', null=True, verbose_name='latitude', db_index=True)),
                ('longitude', akvo.rsr.fields.LongitudeField(default=None, blank=True, help_text='Use a period to denote decimals.', null=True, verbose_name='longitude', db_index=True)),
                ('city', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='city', blank=True)),
                ('state', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='state', blank=True)),
                ('address_1', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 1', blank=True)),
                ('address_2', akvo.rsr.fields.ValidXMLCharField(max_length=255, verbose_name='address 2', blank=True)),
                ('postcode', akvo.rsr.fields.ValidXMLCharField(max_length=10, verbose_name='postal code', blank=True)),
                ('country', models.ForeignKey(verbose_name='country', blank=True, to='rsr.Country', null=True)),
                ('location_target', models.ForeignKey(related_name='locations', to='rsr.ProjectUpdate')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PublishingStatus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', akvo.rsr.fields.ValidXMLCharField(default=b'unpublished', max_length=30, db_index=True, choices=[(b'unpublished', 'Unpublished'), (b'published', 'Published')])),
                ('project', models.OneToOneField(to='rsr.Project')),
            ],
            options={
                'ordering': ('-status', 'project'),
                'verbose_name': 'publishing status',
                'verbose_name_plural': 'publishing statuses',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecipientCountry',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The country that benefits from the project.', max_length=2, verbose_name='recipient country', choices=[('AF', 'Afghanistan'), ('AX', '\xc5land Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas (The)'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State Of)'), ('BQ', 'Bonaire, Saint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory (The)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands (The)'), ('CF', 'Central African Republic (The)'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands (The)'), ('CO', 'Colombia'), ('KM', 'Comoros (The)'), ('CG', 'Congo (The)'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands (The)'), ('CR', 'Costa Rica'), ('CI', "C\xf4te D'ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic (The)'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic (The)'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (The) [malvinas]'), ('FO', 'Faroe Islands (The)'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories (The)'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and Mcdonald Islands'), ('VA', 'Holy See (The)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (Islamic Republic Of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (Democratic People's Republic Of)"), ('KR', 'Korea (Republic Of)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic (The)"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (The Former Yugoslav Republic Of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands (The)'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States Of)'), ('MD', 'Moldova (Republic Of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands (The)'), ('AN', 'Netherland Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger (The)'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands (The)'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines (The)'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation (The)'), ('RW', 'Rwanda'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French Part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch Part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan (The)'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands (The)'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates (The)'), ('GB', 'United Kingdom of Great Britain and Northern Ireland (The)'), ('US', 'United States of America (The)'), ('UM', 'United States Minor Outlying Islands (The)'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic Of)'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.s.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('percentage', models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='The percentage of total commitments or total activity budget allocated to this country. Content must be a positive decimal number between 0 and 100, with no percentage sign. Percentages for all reported countries and regions MUST add up to 100%. Use a period to denote decimals.', null=True, verbose_name='recipient country percentage')),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Enter additional information about the recipient country, if necessary.', max_length=50, verbose_name='recipient country description', blank=True)),
                ('project', models.ForeignKey(related_name='recipient_countries', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'ordering': ('-percentage', 'country'),
                'verbose_name': 'recipient country',
                'verbose_name_plural': 'recipient countries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecipientRegion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('region', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This identifies the region in which the activity takes place. Regions can be supra-national (a geographical or administrative grouping of countries into a region - e.g. Sub-Saharan Africa, Mekong Delta) or \'global\' (activities benefiting substantially all developing countries). For the codes to use, please see <a href="http://iatistandard.org/202/codelists/Region/" target="_blank">http://iatistandard.org/202/codelists/Region/</a>.', max_length=25, verbose_name='recipient region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North & Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South & Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')])),
                ('region_vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The vocabulary from which the region code is drawn. If it is not present 1 \u2013 \'OECD DAC\' is assumed. For more information, see <a href="http://iatistandard.org/202/codelists/RegionVocabulary/" target="_blank">http://iatistandard.org/202/codelists/RegionVocabulary/</a>.', max_length=2, verbose_name='recipient region vocabulary', choices=[('1', '1 - OECD DAC'), ('2', '2 - UN'), ('99', '99 - Reporting Organisation')])),
                ('region_vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='recipient region vocabulary URI', blank=True)),
                ('percentage', models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text='If the activity occurs in more than one region, the percentage of activity commitment allocated to each region should be provided if available. Percentages should add up to 100% of the activity being reported if they are shown for each region. Use a period to denote decimals.', null=True, verbose_name='recipient region percentage')),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a description.', max_length=50, verbose_name='recipient region description', blank=True)),
                ('project', models.ForeignKey(related_name='recipient_regions', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'verbose_name': 'recipient region',
                'verbose_name_plural': 'recipient regions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RelatedProject',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('related_iati_id', akvo.rsr.fields.ValidXMLCharField(help_text='In case you know the IATI identifier of a project that does not exist in RSR, you can point out the IATI identifier here.', max_length=100, verbose_name='related project iati identifier', blank=True)),
                ('relation', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='The relationship between a project and related project. There are five types of relationships:<br/>1 - Parent: the project you are now creating is a sub-component of the selected related project.<br/>2 - Child: the selected related project is a sub-component of the project you are now creating.<br/>3 - Sibling: the selected related project and the project you are now creating are both sub-components of a parent project.<br/>4 - Co-funded: a project that receives funding from more than one organisation.<br/>5 - Third party: a report by another organisation on the same project that you are reporting on.', max_length=1, verbose_name='relation', choices=[('1', '1 - Parent'), ('2', '2 - Child'), ('3', '3 - Sibling'), ('4', '4 - Co-funded'), ('5', '5 - Third Party')])),
                ('project', models.ForeignKey(related_name='related_projects', to='rsr.Project')),
                ('related_project', models.ForeignKey(related_name='related_to_projects', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rsr.Project', null=True)),
            ],
            options={
                'ordering': ['project'],
                'verbose_name': 'related project',
                'verbose_name_plural': 'related projects',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(unique=True, max_length=100, verbose_name='name')),
                ('title', akvo.rsr.fields.ValidXMLCharField(max_length=200, verbose_name='title')),
                ('description', akvo.rsr.fields.ValidXMLTextField(help_text='Describe the report.', verbose_name='description', blank=True)),
                ('url', akvo.rsr.fields.ValidXMLCharField(help_text='Enter the parametrized path for downloading the report. NOTE: one line only even if the input field allows for more!', max_length=200, verbose_name='url')),
            ],
            options={
                'ordering': ('name',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReportFormat',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', akvo.rsr.fields.ValidXMLCharField(unique=True, max_length=30, verbose_name='name')),
                ('display_name', akvo.rsr.fields.ValidXMLCharField(unique=True, max_length=30, verbose_name='display name')),
                ('icon', akvo.rsr.fields.ValidXMLCharField(max_length=30, verbose_name='icon')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', akvo.rsr.fields.ValidXMLCharField(help_text='The aim of the project in one sentence. This doesn\u2019t need to be something that can be directly counted, but it should describe an overall goal of the project. There can be multiple results for one project.', max_length=500, verbose_name='result title', blank=True)),
                ('type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Choose whether the result is an output, outcome or impact.<br/>1 - Output: Direct result of the project activities. E.g. number of booklets produced, workshops held, people trained, latrines build.<br/>2 - Outcome: The changes or benefits that result from the program activities and resulting outputs. E.g number of beneficiaries reached, knowledge increased, capacity build, monitored behaviour change.<br/>3 - Impact: Long-term results of program (on population) that can be attributed to the project outputs and outcomes. E.g improved health, increased political participation of women.<br/>9 - Other: Another type of result, not specified above.', max_length=1, verbose_name='result type', choices=[('1', '1 - Output'), ('2', '2 - Outcome'), ('3', '3 - Impact'), ('9', '9 - Other')])),
                ('aggregation_status', models.NullBooleanField(help_text='Indicate whether the data in the result set can be accumulated.', verbose_name='aggregation status')),
                ('description', akvo.rsr.fields.ValidXMLCharField(help_text='You can provide further information of the result here.', max_length=2000, verbose_name='result description', blank=True)),
                ('order', models.PositiveSmallIntegerField(null=True, verbose_name='result order', blank=True)),
                ('parent_result', models.ForeignKey(related_name='child_results', default=None, blank=True, to='rsr.Result', help_text='The parent result of this result.', null=True)),
                ('project', models.ForeignKey(related_name='results', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'ordering': ['order', 'id'],
                'verbose_name': 'result',
                'verbose_name_plural': 'results',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sector_code', akvo.rsr.fields.ValidXMLCharField(help_text='It is possible to specify a variety of sector codes, based on the selected vocabulary. The sector codes for the DAC-5 and DAC-3 vocabularies can be found here: <a href="http://iatistandard.org/202/codelists/Sector/" target="_blank">DAC-5 sector codes</a> and <a href="http://iatistandard.org/202/codelists/SectorCategory/" target="_blank">DAC-3 sector codes</a>.', max_length=25, verbose_name='sector code', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(help_text='Optionally enter a description.', max_length=100, verbose_name='sector description', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='This is the code for the vocabulary used to describe the sector. Sectors should be mapped to DAC sectors to enable international comparison.', max_length=5, verbose_name='sector vocabulary', choices=[('1', '1 - OECD DAC CRS Purpose Codes (5 digit)'), ('2', '2 - OECD DAC CRS Purpose Codes (3 digit)'), ('3', '3 - Classification of the Functions of Government (UN)'), ('4', '4 - Statistical classification of economic activities in the European Community'), ('5', '5 - National Taxonomy for Exempt Entities (USA)'), ('6', '6 - AidData'), ('7', '7 - SDG Goal'), ('8', '8 - SDG Target'), ('9', '9 - SDG Indicator'), ('10', '10 - Humanitarian Global Clusters (Inter-Agency Standing Committee)'), ('99', '99 - Reporting Organisation'), ('98', '98 - Reporting Organisation 2')])),
                ('vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='sector vocabulary URI', blank=True)),
                ('percentage', models.DecimalField(decimal_places=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], max_digits=4, blank=True, help_text="Percentages should add up to 100% of the activity being reported if they are shown for each sector. Fill in 100% if there's one sector. Use a period to denote decimals.", null=True, verbose_name='sector percentage')),
                ('project', models.ForeignKey(related_name='sectors', verbose_name='project', to='rsr.Project')),
            ],
            options={
                'ordering': ['sector_code'],
                'verbose_name': 'sector',
                'verbose_name_plural': 'sectors',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('reference', akvo.rsr.fields.ValidXMLCharField(help_text='Enter a reference for the transaction (eg. transaction number).', max_length=25, verbose_name='transaction reference', blank=True)),
                ('aid_type_vocabulary', akvo.rsr.fields.ValidXMLCharField(default=b'1', choices=[('1', '1 - OECD DAC'), ('2', '2 - Earmarking Category'), ('3', '3 - Earmarking Modality')], max_length=1, blank=True, help_text='Enter the type of vocabulary being used to describe the aid type For reference, please visit: <a href="http://iatistandard.org/203/codelists/AidTypeVocabulary/" target="_blank"> http://iatistandard.org/203/codelists/AidTypeVocabulary/</a>.', verbose_name='transaction aid type vocabulary')),
                ('aid_type', akvo.rsr.fields.ValidXMLCharField(help_text='Enter the type of aid being supplied. For reference, please visit: <a href="http://iatistandard.org/202/codelists/AidType/" target="_blank">http://iatistandard.org/202/codelists/AidType/</a>.', max_length=3, verbose_name='transaction aid type', blank=True)),
                ('description', akvo.rsr.fields.ValidXMLCharField(help_text='Enter additional information for the transaction, if necessary.', max_length=255, verbose_name='transaction description', blank=True)),
                ('disbursement_channel', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the channel through which the funds will flow for this transaction, from an IATI codelist. For reference, please visit: <a href="http://iatistandard.org/202/codelists/DisbursementChannel/" target="_blank">http://iatistandard.org/202/codelists/DisbursementChannel/</a>.', max_length=1, verbose_name='transaction disbursement channel', choices=[('1', '1 - Money is disbursed through central Ministry of Finance or Treasury'), ('2', '2 - Money is disbursed directly to the implementing institution and managed through a separate bank account'), ('3', '3 - Aid in kind: Donors utilise third party agencies, e.g. NGOs or management companies'), ('4', '4 - Aid in kind: Donors manage funds themselves')])),
                ('finance_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='For reference, please visit: <a href="http://iatistandard.org/202/codelists/FinanceType/" target="_blank">http://iatistandard.org/202/codelists/FinanceType/</a>.', max_length=3, verbose_name='transaction finance type', choices=[('110', '110 - Standard grant'), ('111', '111 - Subsidies to national private investors'), ('210', '210 - Interest subsidy'), ('211', '211 - Interest subsidy to national private exporters'), ('310', '310 - Capital subscription on deposit basis'), ('311', '311 - Capital subscription on encashment basis'), ('410', '410 - Aid loan excluding debt reorganisation'), ('411', '411 - Investment-related loan to developing countries'), ('412', '412 - Loan in a joint venture with the recipient'), ('413', '413 - Loan to national private investor'), ('414', '414 - Loan to national private exporter'), ('421', '421 - Standard loan'), ('422', '422 - Reimbursable grant'), ('423', '423 - Bonds'), ('424', '424 - Asset-backed securities'), ('425', '425 - Other debt securities'), ('431', '431 - Subordinated loan'), ('432', '432 - Preferred equity'), ('433', '433 - Other hybrid instruments'), ('451', '451 - Non-banks guaranteed export credits'), ('452', '452 - Non-banks non-guaranteed portions of guaranteed export credits'), ('453', '453 - Bank export credits'), ('510', '510 - Common equity'), ('511', '511 - Acquisition of equity not part of joint venture in developing countries'), ('512', '512 - Other acquisition of equity'), ('520', '520 - Shares in collective investment vehicles'), ('530', '530 - Reinvested earnings'), ('610', '610 - Debt forgiveness/conversion: ODA claims (P)'), ('611', '611 - Debt forgiveness/conversion: ODA claims (I)'), ('612', '612 - Debt forgiveness/conversion: OOF claims (P)'), ('613', '613 - Debt forgiveness/conversion: OOF claims (I)'), ('614', '614 - Debt forgiveness/conversion: Private claims (P)'), ('615', '615 - Debt forgiveness/conversion: Private claims (I)'), ('616', '616 - Debt forgiveness: OOF claims (DSR)'), ('617', '617 - Debt forgiveness: Private claims (DSR)'), ('618', '618 - Debt forgiveness: Other'), ('620', '620 - Debt rescheduling: ODA claims (P)'), ('621', '621 - Debt rescheduling: ODA claims (I)'), ('622', '622 - Debt rescheduling: OOF claims (P)'), ('623', '623 - Debt rescheduling: OOF claims (I)'), ('624', '624 - Debt rescheduling: Private claims (P)'), ('625', '625 - Debt rescheduling: Private claims (I)'), ('626', '626 - Debt rescheduling: OOF claims (DSR)'), ('627', '627 - Debt rescheduling: Private claims (DSR)'), ('630', '630 - Debt rescheduling: OOF claim (DSR \u2013 original loan principal)'), ('631', '631 - Debt rescheduling: OOF claim (DSR \u2013 original loan interest)'), ('632', '632 - Debt rescheduling: Private claim (DSR \u2013 original loan principal)'), ('633', '633 - Debt forgiveness/conversion: export credit claims (P)'), ('634', '634 - Debt forgiveness/conversion: export credit claims (I)'), ('635', '635 - Debt forgiveness: export credit claims (DSR)'), ('636', '636 - Debt rescheduling: export credit claims (P)'), ('637', '637 - Debt rescheduling: export credit claims (I)'), ('638', '638 - Debt rescheduling: export credit claims (DSR)'), ('639', '639 - Debt rescheduling: export credit claim (DSR \u2013 original loan principal)'), ('710', '710 - Foreign direct investment'), ('711', '711 - Other foreign direct investment, including reinvested earnings'), ('810', '810 - Bank bonds'), ('811', '811 - Non-bank bonds'), ('910', '910 - Other bank securities/claims'), ('911', '911 - Other non-bank securities/claims'), ('912', '912 - Securities and other instruments issued by multilateral agencies')])),
                ('flow_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='For reference, please visit: <a href="http://iatistandard.org/202/codelists/FlowType/" target="_blank">http://iatistandard.org/202/codelists/FlowType/</a>.', max_length=2, verbose_name='transaction flow type', choices=[('10', '10 - ODA'), ('20', '20 - OOF'), ('21', '21 - Non-export credit OOF'), ('22', '22 - Officially supported export credits'), ('30', '30 - Private grants'), ('35', '35 - Private market'), ('36', '36 - Private Foreign Direct Investment'), ('37', '37 - Other Private flows at market terms'), ('40', '40 - Non flow'), ('50', '50 - Other flows')])),
                ('tied_status', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Whether the aid is untied, tied, or partially tied. For reference visit <a href="http://iatistandard.org/202/codelists/TiedStatus/" target="_blank">http://iatistandard.org/202/codelists/TiedStatus/</a>.', max_length=1, verbose_name='transaction tied status', choices=[('3', '3 - Partially tied'), ('4', '4 - Tied'), ('5', '5 - Untied')])),
                ('transaction_date', models.DateField(help_text='Enter the financial reporting date that the transaction was/will be undertaken.', null=True, verbose_name='transaction date', blank=True)),
                ('transaction_type', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Select the type of the transaction (e.g. commitment, disbursement, expenditure).', max_length=2, verbose_name='transaction type', choices=[('1', '1 - Incoming Funds'), ('2', '2 - Outgoing Commitment'), ('3', '3 - Disbursement'), ('4', '4 - Expenditure'), ('5', '5 - Interest Payment'), ('6', '6 - Loan Repayment'), ('7', '7 - Reimbursement'), ('8', '8 - Purchase of Equity'), ('9', '9 - Sale of Equity'), ('10', '10 - Credit Guarantee'), ('11', '11 - Incoming Commitment'), ('12', '12 - Outgoing Pledge'), ('13', '13 - Incoming Pledge')])),
                ('value', models.DecimalField(decimal_places=2, max_digits=14, blank=True, help_text='Enter the transaction amount. Use a period to denote decimals.', null=True, verbose_name='transaction value')),
                ('value_date', models.DateField(help_text='The date to be used for determining the exchange rate for currency conversions of the transaction.', null=True, verbose_name='transaction value date', blank=True)),
                ('currency', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=3, verbose_name='currency', choices=[('AED', 'AED - UAE Dirham'), ('AFN', 'AFN - Afghani'), ('ALL', 'ALL - Lek'), ('AMD', 'AMD - Armenian Dram'), ('ANG', 'ANG - Netherlands Antillian Guilder'), ('AOA', 'AOA - Kwanza'), ('ARS', 'ARS - Argentine Peso'), ('AUD', 'AUD - Australian Dollar'), ('AWG', 'AWG - Aruban Guilder'), ('AZN', 'AZN - Azerbaijanian Manat'), ('BAM', 'BAM - Convertible Marks'), ('BBD', 'BBD - Barbados Dollar'), ('BDT', 'BDT - Taka'), ('BGN', 'BGN - Bulgarian Lev'), ('BHD', 'BHD - Bahraini Dinar'), ('BIF', 'BIF - Burundi Franc'), ('BMD', 'BMD - Bermudian Dollar'), ('BND', 'BND - Brunei Dollar'), ('BOB', 'BOB - Boliviano'), ('BOV', 'BOV - Mvdol'), ('BRL', 'BRL - Brazilian Real'), ('BSD', 'BSD - Bahamian Dollar'), ('BTN', 'BTN - Ngultrum'), ('BWP', 'BWP - Pula'), ('BYR', 'BYR - Belarussian Ruble'), ('BZD', 'BZD - Belize Dollar'), ('CAD', 'CAD - Canadian Dollar'), ('CDF', 'CDF - Congolese Franc'), ('CHF', 'CHF - Swiss Franc'), ('CLF', 'CLF - Unidades de fomento'), ('CLP', 'CLP - Chilean Peso'), ('CNY', 'CNY - Yuan Renminbi'), ('COP', 'COP - Colombian Peso'), ('COU', 'COU - Unidad de Valor Real'), ('CRC', 'CRC - Costa Rican Colon'), ('CUC', 'CUC - Peso Convertible'), ('CUP', 'CUP - Cuban Peso'), ('CVE', 'CVE - Cape Verde Escudo'), ('CZK', 'CZK - Czech Koruna'), ('DJF', 'DJF - Djibouti Franc'), ('DKK', 'DKK - Danish Krone'), ('DOP', 'DOP - Dominican Peso'), ('DZD', 'DZD - Algerian Dinar'), ('EEK', 'EEK - Kroon'), ('EGP', 'EGP - Egyptian Pound'), ('ERN', 'ERN - Nakfa'), ('ETB', 'ETB - Ethiopian Birr'), ('EUR', 'EUR - Euro'), ('FJD', 'FJD - Fiji Dollar'), ('FKP', 'FKP - Falkland Islands Pound'), ('GBP', 'GBP - Pound Sterling'), ('GEL', 'GEL - Lari'), ('GHS', 'GHS - Cedi'), ('GIP', 'GIP - Gibraltar Pound'), ('GMD', 'GMD - Dalasi'), ('GNF', 'GNF - Guinea Franc'), ('GTQ', 'GTQ - Quetzal'), ('GYD', 'GYD - Guyana Dollar'), ('HKD', 'HKD - Hong Kong Dollar'), ('HNL', 'HNL - Lempira'), ('HRK', 'HRK - Kuna'), ('HTG', 'HTG - Gourde'), ('HUF', 'HUF - Forint'), ('IDR', 'IDR - Rupiah'), ('ILS', 'ILS - New Israeli Sheqel'), ('INR', 'INR - Indian Rupee'), ('IQD', 'IQD - Iraqi Dinar'), ('IRR', 'IRR - Iranian Rial'), ('ISK', 'ISK - Iceland Krona'), ('JMD', 'JMD - Jamaican Dollar'), ('JOD', 'JOD - Jordanian Dinar'), ('JPY', 'JPY - Yen'), ('KES', 'KES - Kenyan Shilling'), ('KGS', 'KGS - Som'), ('KHR', 'KHR - Riel'), ('KMF', 'KMF - Comoro Franc'), ('KPW', 'KPW - North Korean Won'), ('KRW', 'KRW - Won'), ('KWD', 'KWD - Kuwaiti Dinar'), ('KYD', 'KYD - Cayman Islands Dollar'), ('KZT', 'KZT - Tenge'), ('LAK', 'LAK - Kip'), ('LBP', 'LBP - Lebanese Pound'), ('LKR', 'LKR - Sri Lanka Rupee'), ('LRD', 'LRD - Liberian Dollar'), ('LSL', 'LSL - Loti'), ('LTL', 'LTL - Lithuanian Litas'), ('LVL', 'LVL - Latvian Lats'), ('LYD', 'LYD - Libyan Dinar'), ('MAD', 'MAD - Moroccan Dirham'), ('MDL', 'MDL - Moldovan Leu'), ('MGA', 'MGA - Malagasy Ariary'), ('MKD', 'MKD - Denar'), ('MMK', 'MMK - Kyat'), ('MNT', 'MNT - Tugrik'), ('MOP', 'MOP - Pataca'), ('MRO', 'MRO - Ouguiya'), ('MUR', 'MUR - Mauritius Rupee'), ('MVR', 'MVR - Rufiyaa'), ('MWK', 'MWK - Malawi Kwacha'), ('MXN', 'MXN - Mexican Peso'), ('MXV', 'MXV - Mexican Unidad de Inversion (UDI)'), ('MYR', 'MYR - Malaysian Ringgit'), ('MZN', 'MZN - Metical'), ('NAD', 'NAD - Namibia Dollar'), ('NGN', 'NGN - Naira'), ('NIO', 'NIO - Cordoba Oro'), ('NOK', 'NOK - Norwegian Krone'), ('NPR', 'NPR - Nepalese Rupee'), ('NZD', 'NZD - New Zealand Dollar'), ('OMR', 'OMR - Rial Omani'), ('PAB', 'PAB - Balboa'), ('PEN', 'PEN - Nuevo Sol'), ('PGK', 'PGK - Kina'), ('PHP', 'PHP - Philippine Peso'), ('PKR', 'PKR - Pakistan Rupee'), ('PLN', 'PLN - Zloty'), ('PYG', 'PYG - Guarani'), ('QAR', 'QAR - Qatari Rial'), ('RON', 'RON - Romanian Leu'), ('RSD', 'RSD - Serbian Dinar'), ('RUB', 'RUB - Russian Ruble'), ('RWF', 'RWF - Rwanda Franc'), ('SAR', 'SAR - Saudi Riyal'), ('SBD', 'SBD - Solomon Islands Dollar'), ('SCR', 'SCR - Seychelles Rupee'), ('SDG', 'SDG - Sudanese Pound'), ('SEK', 'SEK - Swedish Krona'), ('SGD', 'SGD - Singapore Dollar'), ('SHP', 'SHP - Saint Helena Pound'), ('SLL', 'SLL - Leone'), ('SOS', 'SOS - Somali Shilling'), ('SSP', 'SSP - South Sudanese Pound'), ('SRD', 'SRD - Surinam Dollar'), ('STD', 'STD - Dobra'), ('SVC', 'SVC - El Salvador Colon'), ('SYP', 'SYP - Syrian Pound'), ('SZL', 'SZL - Lilangeni'), ('THB', 'THB - Baht'), ('TJS', 'TJS - Somoni'), ('TMT', 'TMT - Manat'), ('TND', 'TND - Tunisian Dinar'), ('TOP', 'TOP - Paanga'), ('TRY', 'TRY - Turkish Lira'), ('TTD', 'TTD - Trinidad and Tobago Dollar'), ('TWD', 'TWD - New Taiwan Dollar'), ('TZS', 'TZS - Tanzanian Shilling'), ('UAH', 'UAH - Hryvnia'), ('UGX', 'UGX - Uganda Shilling'), ('USD', 'USD - US Dollar'), ('USN', 'USN - US Dollar (Next day)'), ('USS', 'USS - US Dollar (Same day)'), ('UYI', 'UYI - Uruguay Peso en Unidades Indexadas'), ('UYU', 'UYU - Peso Uruguayo'), ('UZS', 'UZS - Uzbekistan Sum'), ('VEF', 'VEF - Bolivar'), ('VND', 'VND - Dong'), ('VUV', 'VUV - Vatu'), ('WST', 'WST - Tala'), ('XAF', 'XAF - CFA Franc BEAC'), ('XBT', 'XBT - Bitcoin'), ('XCD', 'XCD - East Caribbean Dollar'), ('XDR', 'XDR - International Monetary Fund (IMF) Special Drawing Right (SDR)'), ('XOF', 'XOF - CFA Franc BCEAO'), ('XPF', 'XPF - CFP Franc'), ('YER', 'YER - Yemeni Rial'), ('ZAR', 'ZAR - Rand'), ('ZMK', 'ZMK - Zambian Kwacha'), ('ZWL', 'ZWL - Zimbabwe Dollar')])),
                ('provider_organisation_activity', akvo.rsr.fields.ValidXMLCharField(help_text='If incoming funds are being provided from the budget of another activity that is reported to IATI, it is STRONGLY RECOMMENDED that this should record the provider\u2019s unique IATI activity identifier for that activity.', max_length=100, verbose_name='provider organisation activity id', blank=True)),
                ('receiver_organisation_activity', akvo.rsr.fields.ValidXMLCharField(help_text='The internal identifier used by the receiver organisation for its activity that receives the funds from this transaction (not to be confused with the IATI identifier for the target activity).', max_length=100, verbose_name='receiver organisation activity id', blank=True)),
                ('recipient_country', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the country that will benefit from this transaction. It can only be one country per transaction. For reference, please visit: <a href="http://iatistandard.org/202/codelists/Country/" target="_blank">http://iatistandard.org/202/codelists/Country/</a>.', max_length=2, verbose_name='transaction recipient country', choices=[('AF', 'Afghanistan'), ('AX', '\xc5land Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas (The)'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia (Plurinational State Of)'), ('BQ', 'Bonaire, Saint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory (The)'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands (The)'), ('CF', 'Central African Republic (The)'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands (The)'), ('CO', 'Colombia'), ('KM', 'Comoros (The)'), ('CG', 'Congo (The)'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands (The)'), ('CR', 'Costa Rica'), ('CI', "C\xf4te D'ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic (The)'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic (The)'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (The) [malvinas]'), ('FO', 'Faroe Islands (The)'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories (The)'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and Mcdonald Islands'), ('VA', 'Holy See (The)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (Islamic Republic Of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (Democratic People's Republic Of)"), ('KR', 'Korea (Republic Of)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic (The)"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (The Former Yugoslav Republic Of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands (The)'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (Federated States Of)'), ('MD', 'Moldova (Republic Of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands (The)'), ('AN', 'Netherland Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger (The)'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands (The)'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines (The)'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation (The)'), ('RW', 'Rwanda'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French Part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch Part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan (The)'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands (The)'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates (The)'), ('GB', 'United Kingdom of Great Britain and Northern Ireland (The)'), ('US', 'United States of America (The)'), ('UM', 'United States Minor Outlying Islands (The)'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela (Bolivarian Republic Of)'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.s.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')])),
                ('recipient_region', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='Enter the supranational geopolitical region (a geographical or administrative grouping of countries into a region - e.g. Sub-Saharan Africa, Mekong Delta) that will benefit from this transaction. For reference, please visit: <a href="http://iatistandard.org/202/codelists/Region/" target="_blank">http://iatistandard.org/202/codelists/Region/</a>.', max_length=25, verbose_name='transaction recipient region', choices=[('88', '88 - States Ex-Yugoslavia unspecified'), ('89', '89 - Europe, regional'), ('189', '189 - North of Sahara, regional'), ('289', '289 - South of Sahara, regional'), ('298', '298 - Africa, regional'), ('380', '380 - West Indies, regional'), ('389', '389 - North & Central America, regional'), ('489', '489 - South America, regional'), ('498', '498 - America, regional'), ('589', '589 - Middle East, regional'), ('619', '619 - Central Asia, regional'), ('679', '679 - South Asia, regional'), ('689', '689 - South & Central Asia, regional'), ('789', '789 - Far East Asia, regional'), ('798', '798 - Asia, regional'), ('889', '889 - Oceania, regional'), ('998', '998 - Developing countries, unspecified')])),
                ('recipient_region_vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, max_length=2, verbose_name='recipient region vocabulary', choices=[('1', '1 - OECD DAC'), ('2', '2 - UN'), ('99', '99 - Reporting Organisation')])),
                ('recipient_region_vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='recipient region vocabulary URI', blank=True)),
                ('humanitarian', models.NullBooleanField(help_text='Determines whether this transaction relates entirely or partially to humanitarian aid.', verbose_name='humanitarian transaction')),
                ('project', models.ForeignKey(related_name='transactions', verbose_name='project', to='rsr.Project')),
                ('provider_organisation', models.ForeignKey(related_name='providing_transactions', on_delete=django.db.models.deletion.SET_NULL, verbose_name='provider organisation', blank=True, to='rsr.Organisation', null=True)),
                ('receiver_organisation', models.ForeignKey(related_name='receiving_transactions', on_delete=django.db.models.deletion.SET_NULL, verbose_name='receiver organisation', blank=True, to='rsr.Organisation', null=True)),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TransactionSector',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', akvo.rsr.fields.ValidXMLCharField(help_text='A recognised code, from a recognised vocabulary, classifying the purpose of this transaction. If this element is used then ALL transaction elements should contain a transaction/sector element and iati-activity/sector should NOT be used. This element can be used multiple times, but only one sector can be reported per vocabulary.', max_length=25, verbose_name='transaction sector', blank=True)),
                ('text', akvo.rsr.fields.ValidXMLCharField(max_length=100, verbose_name='transaction sector description', blank=True)),
                ('vocabulary', akvo.rsr.fields.ValidXMLCharField(blank=True, help_text='An IATI code for the vocabulary (codelist) used for sector classifications. If omitted, OECD DAC 5-digit Purpose Codes are assumed. Note that at transaction level, only one sector per vocabulary can be reported.', max_length=5, verbose_name='transaction sector vocabulary', choices=[('1', '1 - OECD DAC CRS Purpose Codes (5 digit)'), ('2', '2 - OECD DAC CRS Purpose Codes (3 digit)'), ('3', '3 - Classification of the Functions of Government (UN)'), ('4', '4 - Statistical classification of economic activities in the European Community'), ('5', '5 - National Taxonomy for Exempt Entities (USA)'), ('6', '6 - AidData'), ('7', '7 - SDG Goal'), ('8', '8 - SDG Target'), ('9', '9 - SDG Indicator'), ('10', '10 - Humanitarian Global Clusters (Inter-Agency Standing Committee)'), ('99', '99 - Reporting Organisation'), ('98', '98 - Reporting Organisation 2')])),
                ('vocabulary_uri', akvo.rsr.fields.ValidXMLCharField(help_text='If the vocabulary is 99 (reporting organisation), the URI where this internal vocabulary is defined.', max_length=1000, verbose_name='transaction sector vocabulary URI', blank=True)),
                ('transaction', models.ForeignKey(related_name='sectors', verbose_name='transaction', to='rsr.Transaction')),
            ],
            options={
                'verbose_name': 'transaction sector',
                'verbose_name_plural': 'transaction sectors',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserProjects',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_restricted', models.BooleanField(default=False)),
                ('projects', models.ManyToManyField(related_name='accessible_by', null=True, to='rsr.Project', blank=True)),
                ('user', models.OneToOneField(related_name='user_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user_id',),
                'verbose_name': 'user projects',
                'verbose_name_plural': 'users projects',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together=set([('project', 'parent_result')]),
        ),
        migrations.AddField(
            model_name='report',
            name='formats',
            field=models.ManyToManyField(to='rsr.ReportFormat'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='report',
            name='organisations',
            field=models.ManyToManyField(to='rsr.Organisation', blank=True),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='relatedproject',
            unique_together=set([('project', 'related_project')]),
        ),
        migrations.AddField(
            model_name='projectupdate',
            name='primary_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rsr.ProjectUpdateLocation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='projectupdate',
            name='project',
            field=models.ForeignKey(related_name='project_updates', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='projectupdate',
            name='user',
            field=models.ForeignKey(verbose_name='user', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='projecteditorvalidation',
            name='validation_set',
            field=models.ForeignKey(related_name='validations', verbose_name='validation set', to='rsr.ProjectEditorValidationSet'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='categories',
            field=models.ManyToManyField(related_name='projects', verbose_name='categories', to='rsr.Category', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='keywords',
            field=models.ManyToManyField(help_text='Choose a keyword to link to this project.', related_name='projects', verbose_name='keyword', to='rsr.Keyword', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='last_update',
            field=models.ForeignKey(related_name='the_project', on_delete=django.db.models.deletion.SET_NULL, to='rsr.ProjectUpdate', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='partners',
            field=models.ManyToManyField(related_name='projects', verbose_name='partners', to='rsr.Organisation', through='rsr.Partnership', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='primary_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='rsr.ProjectLocation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='primary_organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='rsr.Organisation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='project',
            name='validations',
            field=models.ManyToManyField(related_name='projects', verbose_name='validations', to='rsr.ProjectEditorValidationSet'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='policymarker',
            name='project',
            field=models.ForeignKey(related_name='policy_markers', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='planneddisbursement',
            name='project',
            field=models.ForeignKey(related_name='planned_disbursements', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='planneddisbursement',
            name='provider_organisation',
            field=models.ForeignKey(related_name='providing_disbursements', on_delete=django.db.models.deletion.SET_NULL, verbose_name='provider organisation', blank=True, to='rsr.Organisation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='planneddisbursement',
            name='receiver_organisation',
            field=models.ForeignKey(related_name='receiving_disbursements', on_delete=django.db.models.deletion.SET_NULL, verbose_name='receiver organisation', blank=True, to='rsr.Organisation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='partnership',
            name='project',
            field=models.ForeignKey(related_name='partnerships', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='organisationindicatorlabel',
            unique_together=set([('organisation', 'label')]),
        ),
        migrations.AddField(
            model_name='organisationexpenseline',
            name='expenditure',
            field=models.ForeignKey(related_name='expense_lines', verbose_name='organisation expenditure', to='rsr.OrganisationTotalExpenditure'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='organisation',
            name='content_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rsr.Organisation', help_text='Organisation that maintains content for this organisation through the API.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='organisation',
            name='internal_org_ids',
            field=models.ManyToManyField(related_name='recording_organisation', through='rsr.InternalOrganisationID', to='rsr.Organisation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='organisation',
            name='primary_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='rsr.OrganisationLocation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='narrativereport',
            name='category',
            field=models.ForeignKey(related_name='narrative_reports', on_delete=django.db.models.deletion.PROTECT, verbose_name='category', to='rsr.OrganisationIndicatorLabel'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='narrativereport',
            name='project',
            field=models.ForeignKey(related_name='narrative_reports', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='narrativereport',
            unique_together=set([('project', 'category', 'period_start', 'period_end')]),
        ),
        migrations.AddField(
            model_name='link',
            name='project',
            field=models.ForeignKey(related_name='links', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='legacydata',
            name='project',
            field=models.ForeignKey(related_name='legacy_data', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='internalorganisationid',
            name='recording_org',
            field=models.ForeignKey(related_name='internal_ids', verbose_name='recording organisation', to='rsr.Organisation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='internalorganisationid',
            name='referenced_org',
            field=models.ForeignKey(related_name='reference_ids', verbose_name='referenced organisation', to='rsr.Organisation'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='internalorganisationid',
            unique_together=set([('recording_org', 'referenced_org')]),
        ),
        migrations.AlterUniqueTogether(
            name='indicatorperiod',
            unique_together=set([('indicator', 'parent_period')]),
        ),
        migrations.AddField(
            model_name='indicatorlabel',
            name='label',
            field=models.ForeignKey(related_name='indicators', on_delete=django.db.models.deletion.PROTECT, verbose_name='label', to='rsr.OrganisationIndicatorLabel', help_text='Thematic labels allow you to \u2018tag\u2019 your indicator by choosing from a pre-defined set of thematic program areas (e.g. Improved Business Environment) so that all similarly tagged indicators can be grouped together when creating a custom RSR report. An indicator can have more than one thematic label.'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='indicator',
            name='result',
            field=models.ForeignKey(related_name='indicators', verbose_name='result', to='rsr.Result'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='indicator',
            unique_together=set([('result', 'parent_indicator')]),
        ),
        migrations.AddField(
            model_name='iatiimportlog',
            name='project',
            field=models.ForeignKey(related_name='iati_project_import_logs', on_delete=django.db.models.deletion.SET_NULL, verbose_name='project', blank=True, to='rsr.Project', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiimportjob',
            name='projects',
            field=models.ManyToManyField(to='rsr.Project', verbose_name='projects', through='rsr.IatiActivityImport', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiexport',
            name='projects',
            field=models.ManyToManyField(to='rsr.Project', verbose_name='projects'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiexport',
            name='reporting_organisation',
            field=models.ForeignKey(related_name='iati_exports', verbose_name='reporting organisation', to='rsr.Organisation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiexport',
            name='user',
            field=models.ForeignKey(related_name='iati_exports', verbose_name='user', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iaticheck',
            name='project',
            field=models.ForeignKey(related_name='iati_checks', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiactivityimport',
            name='iati_import_job',
            field=models.ForeignKey(related_name='iati_activity_imports', to='rsr.IatiImportJob'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiactivityimport',
            name='project',
            field=models.ForeignKey(related_name='iati_project_imports', verbose_name='project', to='rsr.Project', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiactivityexport',
            name='iati_export',
            field=models.ForeignKey(related_name='iati_activity_exports', to='rsr.IatiExport'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iatiactivityexport',
            name='project',
            field=models.ForeignKey(related_name='iati_project_exports', verbose_name='project', to='rsr.Project', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='humanitarianscope',
            name='project',
            field=models.ForeignKey(related_name='humanitarian_scopes', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='goal',
            name='project',
            field=models.ForeignKey(related_name='goals', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fssforecast',
            name='fss',
            field=models.ForeignKey(related_name='forecasts', verbose_name='fss', to='rsr.Fss'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='employment',
            name='organisation',
            field=models.ForeignKey(related_name='employees', verbose_name='organisation', to='rsr.Organisation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='employment',
            name='user',
            field=models.ForeignKey(related_name='employers', verbose_name='user', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='employment',
            unique_together=set([('organisation', 'user', 'group')]),
        ),
        migrations.AddField(
            model_name='disaggregation',
            name='dimension',
            field=models.ForeignKey(to='rsr.IndicatorDimension'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='disaggregation',
            name='update',
            field=models.ForeignKey(related_name='disaggregations', verbose_name='indicator period update', to='rsr.IndicatorPeriodData'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='crsaddotherflag',
            name='crs',
            field=models.ForeignKey(related_name='other_flags', verbose_name='crs', to='rsr.CrsAdd'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='countrybudgetitem',
            name='project',
            field=models.ForeignKey(related_name='country_budget_items', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='category',
            name='focus_area',
            field=models.ManyToManyField(help_text='Select the Focus area(s) the category belongs to.', related_name='categories', verbose_name='focus area', to='rsr.FocusArea'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='label',
            field=models.ForeignKey(blank=True, to='rsr.BudgetItemLabel', help_text='Select the budget item(s) to indicate how the project budget is divided. Use the \u2018Other\u2019 fields to add custom budget items.', null=True, verbose_name='budget item'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='project',
            field=models.ForeignKey(related_name='budget_items', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='benchmark',
            name='category',
            field=models.ForeignKey(verbose_name='category', to='rsr.Category'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='benchmark',
            name='name',
            field=models.ForeignKey(verbose_name='benchmark name', to='rsr.Benchmarkname'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='benchmark',
            name='project',
            field=models.ForeignKey(related_name='benchmarks', verbose_name='project', to='rsr.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='administrativelocation',
            name='location',
            field=models.ForeignKey(related_name='administratives', verbose_name='location', to='rsr.ProjectLocation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='organisations',
            field=models.ManyToManyField(related_name='users', verbose_name='organisations', to='rsr.Organisation', through='rsr.Employment', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Permission', blank=True, help_text='Specific permissions for this user.', verbose_name='user permissions'),
            preserve_default=True,
        ),
        migrations.CreateModel(
            name='CordaidZipIatiImportJob',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('rsr.iatiimportjob',),
        ),
    ]
